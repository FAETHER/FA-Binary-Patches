#include "include/funcDefs.h"
#include "include/global_func_table.h"
#include <stdlib.h>

void Sync_Beat()
{
	__asm__
	(
		" \n " //!; Source: forgedalliance_exxt.exe (base 0x00400000 - 4194304)
		" \n " //!; Internal calls outside selected range (before)
		"_0x73DD10= - 0x1000 +  7597328 \n " 
		"_0x4579D0= - 0x1000 +  4557264 \n " 
		"_0x41F910= - 0x1000 +  4327696 \n " 
		"_0x73FC70= - 0x1000 +  7605360 \n " 
		"_0x560A00= - 0x1000 +  5642752 \n " 
		"_0x4229B0= - 0x1000 +  4340144 \n " 
		"_0x6FD330= - 0x1000 +  7332656 \n " 
		"_0x6FD390= - 0x1000 +  7332752 \n " 
		"_0x408940= - 0x1000 +  4233536 \n " 
		"_0x436290= - 0x1000 +  4420240 \n " 
		"_0x684560= - 0x1000 +  6837600 \n " 
		"_0x6E0F50= - 0x1000 +  7216976 \n " 
		"_0x41B390= - 0x1000 +  4309904 \n " 
		"_0x4059E0= - 0x1000 +  4221408 \n " 
		"_0x4058F0= - 0x1000 +  4221168 \n " 
		"_0x70CC40= - 0x1000 +  7396416 \n " 
		"_0x4057F0= - 0x1000 +  4220912 \n " 
		"_0x4056B0= - 0x1000 +  4220592 \n " 
		"_0x4D2C80= - 0x1000 +  5061760 \n " 
		"_0x4CDBA0= - 0x1000 +  5041056 \n " 
		"_0x743180= - 0x1000 +  7618944 \n " 
		"_0x746280= - 0x1000 +  7631488 \n " 
		"_0x560940= - 0x1000 +  5642560 \n " 
		"_0x9075D0= - 0x1000 +  9471440 \n " 
		"_0x7512A0= - 0x1000 +  7676576 \n " 
		"_0x937D30= - 0x1000 +  9669936 \n " 
		"_0xA825B9= - 0x1000 +  11023801 \n " 
		"_0x748370= - 0x1000 +  7639920 \n " 
		"_0x779BB0= - 0x1000 +  7842736 \n " 
		"_0x74D190= - 0x1000 +  7659920 \n " 
		"_0x74D2B0= - 0x1000 +  7660208 \n " 
		"_0x907FA0= - 0x1000 +  9473952 \n " 
		"_0x9081F0= - 0x1000 +  9474544 \n " 
		"_0x9072A0= - 0x1000 +  9470624 \n " 
		"_0x908760= - 0x1000 +  9475936 \n " 
		"_0x909940= - 0x1000 +  9480512 \n " 
		"_0x908240= - 0x1000 +  9474624 \n " 
		"_0x9080C0= - 0x1000 +  9474240 \n " 
		"_0xA824E7= - 0x1000 +  11023591 \n " 
		"_0x8E5AE0= - 0x1000 +  9333472 \n " 
		"_0x74DDD0= - 0x1000 +  7663056 \n " 
		"_0x8E5790= - 0x1000 +  9332624 \n " 
		"_0x8E4F40= - 0x1000 +  9330496 \n " 
		"_0x8E5910= - 0x1000 +  9333008 \n " 
		"_0x74ADB0= - 0x1000 +  7650736 \n " 
		"_0x957A60 = 0x957A60 \n"
		
		" \n " //!; Start of selected range: 0x007474B0
		"push ebp \n " 
		"mov ebp,esp \n " 
		"push 0xFFFFFFFF \n " 
		"push 0xBB4990 \n " 
		//"mov eax,dword ptr [0x0] \n " 
		"push eax \n " 
		//"mov dword ptr [0x0],esp \n " 
		"sub esp,0xA8 \n " 
		"push ebx \n " 
		"push esi \n " 
		"xor eax,eax \n " 
		"mov dword ptr [ebp-0x4],eax \n " 
		"push edi \n " 
		"mov dword ptr [ebp-0x3C],eax \n " 
		"mov ebx,dword ptr [ebp+0x8] \n " 
		"mov edi,dword ptr [ebx+0xA88] \n " 
		"mov esi,dword ptr [ecx] \n " 
		"mov dword ptr [ebp-0x10],esp \n " 
		"lea eax,dword ptr [ebx+0xA88] \n " 
		"push ecx \n " 
		"push eax \n " 
		"call _0x73DD10 \n " 
		"cmp edi,esi \n " 
		"setne al \n " 
		"test al,al \n " 
		"mov byte ptr [ebp-0x18],al \n " 
		"je L0xABEL_0x00747595  \n " //!; => 0x00747595
		"push 0xE33D08 \n " 
		"lea eax,dword ptr [ebp-0xB4] \n " 
		"mov dword ptr [ebp-0x4],0x1 \n " 
		"mov ecx,dword ptr [ebx+0x8D8] \n " 
		"push eax \n " 
		"call _0x4579D0 \n " 
		"push eax \n " 
		"lea ecx,dword ptr [ebp-0xA0] \n " 
		"push ecx \n " 
		"mov byte ptr [ebp-0x4],0x2 \n " 
		"call _0x41F910 \n " 
		"lea ecx,dword ptr [ebp-0xB4] \n " 
		"mov byte ptr [ebp-0x4],0x4 \n " 
		"call _0x9075D0 \n " 
		"cmp edi,0xFFFFFFFF \n " 
		"jne L0xABEL_0x0074754B  \n " //!; => 0x0074754B
		"or ecx,edi \n " 
		"jmp L0xABEL_0x0074754E  \n " //!; => 0x0074754E
		"L0xABEL_0x0074754B: \n " 
		"lea ecx,dword ptr [edi+0x1] \n " 
		"L0xABEL_0x0074754E: \n " 
		"cmp esi,0xFFFFFFFF \n " 
		"jne L0xABEL_0x00747557  \n " //!; => 0x00747557
		"or eax,esi \n " 
		"jmp L0xABEL_0x0074755A  \n " //!; => 0x0074755A
		"L0xABEL_0x00747557: \n " 
		"lea eax,dword ptr [esi+0x1] \n " 
		"L0xABEL_0x0074755A: \n " 
		"push ecx \n " 
		"push eax \n " 
		"lea edi,dword ptr [ebp-0xA0] \n " 
		"call _0x7512A0 \n " 
		"mov ecx,edi \n " 
		"mov byte ptr [ebp-0x4],0x1 \n " 
		"call _0x9075D0 \n " 
		"jmp L0xABEL_0x00747595  \n " //!; => 0x00747595
		"mov ecx,dword ptr [ebp-0x70] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov eax,dword ptr [edx+0x4] \n " 
		"call eax \n " 
		"push eax \n " 
		"push 0xE33D20 \n " 
		"call _0x937D30 \n " 
		"add esp,0x8 \n " 
		"mov eax,0x747592 \n " 
		"ret  \n " 
		"mov ebx,dword ptr [ebp+0x8] \n " 
		"L0xABEL_0x00747595: \n " 
		"mov edi,dword ptr [ebp+0xC] \n " 
		"mov dword ptr [edi],0x0 \n " 
		"mov dword ptr [ebp-0x4],0x0 \n " 
		"push 0x2B8 \n " 
		"mov dword ptr [ebp-0x3C],0x1 \n " 
		"call _0xA825B9 \n " 
		"add esp,0x4 \n " 
		"mov dword ptr [ebp-0x38],eax \n " 
		"test eax,eax \n " 
		"mov dword ptr [ebp-0x4],0x6 \n " 
		"je L0xABEL_0x007475D1  \n " //!; => 0x007475D1
		"push eax \n " 
		"call _0x748370 \n " 
		"mov esi,eax \n " 
		"jmp L0xABEL_0x007475D3  \n " //!; => 0x007475D3
		"L0xABEL_0x007475D1: \n " 
		"xor esi,esi \n " 
		"L0xABEL_0x007475D3: \n " 
		"mov byte ptr [ebp-0x4],0x0 \n " 
		"mov eax,dword ptr [edi] \n " 
		"cmp esi,eax \n " 
		"mov dword ptr [ebp-0x14],eax \n " 
		"je L0xABEL_0x007475F8  \n " //!; => 0x007475F8
		"test eax,eax \n " 
		"je L0xABEL_0x007475F8  \n " //!; => 0x007475F8
		"mov ecx,eax \n " 
		"push ecx \n " 
		"call _0x73FC70 \n " 
		"mov edx,dword ptr [ebp-0x14] \n " 
		"push edx \n " 
		"call _0x957A60 \n " 
		"add esp,0x4 \n " 
		"L0xABEL_0x007475F8: \n " 
		"lea eax,dword ptr [ebx+0xA70] \n " 
		"push esi \n " 
		"push eax \n " 
		"mov dword ptr [edi],esi \n " 
		"mov dword ptr [ebp-0x38],eax \n " 
		"call _0x560A00 \n " 
		
		//begin edit, to optimise the code, we will precalculate the offsets in registers
		//instead of code segment, removing the stupid pointer cache shinanigance,
		//less of chance to get a cache miss.
		
		"add bx, 0x8f8 \n"
		"mov ecx,dword ptr [ebx] \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov dword ptr [eax],ecx \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [ebx+0x8] \n " 
		"mov dword ptr [eax+0x8],edx \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov cl,byte ptr [ebx-0x13] \n " 
		"mov byte ptr [eax+0xC],cl \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [ebx+0x190] \n " 
		"mov dword ptr [eax+0x4],edx \n " 
		"mov ecx,dword ptr [ebx-0x34] \n " 
		//"sub bx, 0x8f8 \n"
		"test ecx,ecx \n " 
		"je L0xABEL_0x0074764C  \n " //!; => 0x0074764C
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"add eax,0x18 \n " 
		"push eax \n " 
		"mov eax,dword ptr [edx+0x4] \n " 
		"call eax \n " 
		"L0xABEL_0x0074764C: \n " 
		"mov esi,dword ptr [edi] \n " 
		"add bx, 0x9c \n"
		"mov ecx,dword ptr [ebx] \n " 
		"mov dword ptr [esi+0x1C8],ecx \n " 
		"mov eax,dword ptr [ebx+0x4] \n " 
		"cmp eax,dword ptr [esi+0x1CC] \n " 
		"mov dword ptr [ebp-0x14],eax \n " 
		"je L0xABEL_0x00747693  \n " //!; => 0x00747693
		"test eax,eax \n " 
		"je L0xABEL_0x0074767B  \n " //!; => 0x0074767B
		"lea edx,dword ptr [eax+0x4] \n " 
		"mov ecx,0x1 \n " 
		"lock xadd dword ptr [edx],ecx \n " 
		"L0xABEL_0x0074767B: \n " 
		"mov ecx,dword ptr [esi+0x1CC] \n " 
		"test ecx,ecx \n " 
		"je L0xABEL_0x0074768D  \n " //!; => 0x0074768D
		"call _0x4229B0 \n " 
		"mov eax,dword ptr [ebp-0x14] \n " 
		"L0xABEL_0x0074768D: \n " 
		"mov dword ptr [esi+0x1CC],eax \n " 
		"L0xABEL_0x00747693: \n " 
		"mov dword ptr [ebx],0x0 \n " 
		"mov esi,dword ptr [ebx+0x4] \n " 
		"test esi,esi \n " 
		"mov dword ptr [ebx+0x4],0x0 \n " 
		"je L0xABEL_0x007476DB  \n " //!; => 0x007476DB
		"lea edx,dword ptr [esi+0x4] \n " 
		"or eax,0xFFFFFFFF \n " 
		"lock xadd dword ptr [edx],eax \n " 
		"jne L0xABEL_0x007476DB  \n " //!; => 0x007476DB
		"mov edx,dword ptr [esi] \n " 
		"mov eax,dword ptr [edx+0x4] \n " 
		"mov ecx,esi \n " 
		"call eax \n " 
		"lea ecx,dword ptr [esi+0x8] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne L0xABEL_0x007476DB  \n " //!; => 0x007476DB
		"mov eax,dword ptr [esi] \n " 
		"mov edx,dword ptr [eax+0x8] \n " 
		"mov ecx,esi \n " 
		"call edx \n " 
		"L0xABEL_0x007476DB: \n " 
		"mov edx,dword ptr [edi] \n " 
		"mov eax,dword ptr [ebx+0x8] \n " 
		"lea ecx,dword ptr [edx+0x1E0] \n " 
		"add edx,0x1D0 \n " 
		"call _0x779BB0 \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x1F4] \n " 
		"mov ecx,dword ptr [ebx+0x38] \n " 
		"mov dword ptr [ebx+0x38],edx \n " 
		"mov dword ptr [eax+0x1F4],ecx \n " 
		"mov edx,dword ptr [eax+0x1F8] \n " 
		"mov ecx,dword ptr [ebx+0x3c] \n " 
		"mov dword ptr [ebx+0x3c],edx \n " 
		"mov dword ptr [eax+0x1F8],ecx \n " 
		"mov edx,dword ptr [eax+0x1FC] \n " 
		"mov ecx,dword ptr [ebx+0x40] \n " 
		"mov dword ptr [ebx+0x40],edx \n " 
		"mov dword ptr [eax+0x1FC],ecx \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x234] \n " 
		"mov ecx,dword ptr [ebx+0x68] \n " 
		"mov dword ptr [ebx+0x68],edx \n " 
		"mov dword ptr [eax+0x234],ecx \n " 
		"mov edx,dword ptr [eax+0x238] \n " 
		"mov ecx,dword ptr [ebx+0x6c] \n " 
		"mov dword ptr [ebx+0x6c],edx \n " 
		"mov dword ptr [eax+0x238],ecx \n " 
		"mov edx,dword ptr [eax+0x23C] \n " 
		"mov ecx,dword ptr [ebx+0x70] \n " 
		"mov dword ptr [ebx+0x70],edx \n " 
		"mov dword ptr [eax+0x23C],ecx \n "		
		"cmp byte ptr [ebx+0xD8],0x0 \n " 
		"jne L0xABEL_0x0074781C  \n " //!; => 0x0074781C
		"mov eax,dword ptr [ebx-0x84] \n " 
		"test eax,eax \n " 
		"jne L0xABEL_0x007477A3  \n " //!; => 0x007477A3
		"xor esi,esi \n " 
		"jmp L0xABEL_0x007477AE  \n " //!; => 0x007477AE
		"L0xABEL_0x007477A3: \n " 
		"mov esi,dword ptr [ebx-0x80] \n " 
		"sub esi,eax \n " 
		"sar esi,0x2 \n " 
		"L0xABEL_0x007477AE: \n " 
		"mov eax,dword ptr [edi] \n " 
		"sub esp,0x80 \n " 
		"mov dword ptr [ebp-0x14],eax \n " 
		"mov eax,esp \n " 
		"mov dword ptr [ebp-0x1C],esp \n " 
		"call _0x6FD330 \n " 
		"push esi \n " 
		"mov esi,dword ptr [ebp-0x14] \n " 
		"add esi,0x108 \n " 
		"call _0x74D190 \n " 
		"xor ecx,ecx \n " 
		"xor esi,esi \n " 
		"L0xABEL_0x007477D6: \n " 
		"mov edx,dword ptr [ebx-0x84] \n " 
		"test edx,edx \n " 
		"mov dword ptr [ebp-0x14],ecx \n " 
		"je L0xABEL_0x00747815  \n " //!; => 0x00747815
		"mov eax,dword ptr [ebx-0x80] \n " 
		"sub eax,edx \n " 
		"sar eax,0x2 \n " 
		"cmp ecx,eax \n " 
		"jae L0xABEL_0x00747815  \n " //!; => 0x00747815
		"mov ecx,dword ptr [edx+ecx*0x4] \n " 
		"mov edx,dword ptr [edi] \n " 
		"mov edx,dword ptr [edx+0x10C] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov eax,dword ptr [eax+0x40] \n " 
		"add edx,esi \n " 
		"push edx \n " 
		"call eax \n " 
		"mov ecx,dword ptr [ebp-0x14] \n " 
		"add ecx,0x1 \n " 
		"add esi,0x80 \n " 
		"jmp L0xABEL_0x007477D6  \n " //!; => 0x007477D6
		"L0xABEL_0x00747815: \n " 
		"mov byte ptr [ebx+0xD8],0x1 \n " 
		"L0xABEL_0x0074781C: \n " 
		//"sub bx, 0x994 \n"
		"mov ecx,dword ptr [ebx-0x84] \n " 
		"test ecx,ecx \n " 
		"jne L0xABEL_0x0074782B  \n " //!; => 0x0074782B
		"mov dword ptr [ebp-0x14],ecx \n " 
		"jmp L0xABEL_0x00747839  \n " //!; => 0x00747839
		"L0xABEL_0x0074782B: \n " 
		"mov eax,dword ptr [ebx-0x80] \n " 
		"sub eax,ecx \n " 
		"sar eax,0x2 \n " 
		"mov dword ptr [ebp-0x14],eax \n " 
		"L0xABEL_0x00747839: \n " 
		"mov esi,dword ptr [edi] \n " 
		"sub esp,0x160 \n " 
		"mov ecx,esp \n " 
		"mov dword ptr [ebp-0x1C],esp \n " 
		"push ecx \n " 
		"call _0x6FD390 \n " 
		"mov ecx,dword ptr [ebp-0x14] \n " 
		"add esi,0x118 \n " 
		"call _0x74D2B0 \n " 
		"xor ecx,ecx \n " 
		"xor esi,esi \n " 
		"L0xABEL_0x0074785E: \n " 
		"mov edx,dword ptr [ebx-0x84] \n " 
		"test edx,edx \n " 
		"mov dword ptr [ebp-0x14],ecx \n " 
		"je L0xABEL_0x0074789D  \n " //!; => 0x0074789D
		"mov eax,dword ptr [ebx-0x80] \n " 
		"sub eax,edx \n " 
		"sar eax,0x2 \n " 
		"cmp ecx,eax \n " 
		"jae L0xABEL_0x0074789D  \n " //!; => 0x0074789D
		"mov ecx,dword ptr [edx+ecx*0x4] \n " 
		"mov edx,dword ptr [edi] \n " 
		"mov edx,dword ptr [edx+0x11C] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov eax,dword ptr [eax+0x44] \n " 
		"add edx,esi \n " 
		"push edx \n " 
		"call eax \n " 
		"mov ecx,dword ptr [ebp-0x14] \n " 
		"add ecx,0x1 \n " 
		"add esi,0x160 \n " 
		"jmp L0xABEL_0x0074785E  \n " //!; => 0x0074785E
		"L0xABEL_0x0074789D: \n " 
		"cmp byte ptr [ebp-0x18],0x0 \n " 
		"mov dword ptr [ebp-0x14],0x0 \n " 
		"je L0xABEL_0x0074791E  \n " //!; => 0x0074791E
		"mov eax,dword ptr [ebx+0x10] \n " 
		"mov ecx,dword ptr [eax+0x4] \n " 
		"mov esi,dword ptr [ecx] \n " 
		"mov eax,ecx \n " 
		"cmp esi,eax \n " 
		"mov dword ptr [ebp-0x1C],eax \n " 
		"je L0xABEL_0x00747954  \n " //!; => 0x00747954
		"L0xABEL_0x007478C2: \n " 
		"mov ecx,dword ptr [esi+0x10] \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"push eax \n " 
		"mov eax,dword ptr [edx+0x30] \n " 
		"call eax \n " 
		"add dword ptr [ebp-0x14],0x1 \n " 
		"cmp byte ptr [esi+0x15],0x0 \n " 
		"jne L0xABEL_0x00747917  \n " //!; => 0x00747917
		"mov eax,dword ptr [esi+0x8] \n " 
		"cmp byte ptr [eax+0x15],0x0 \n " 
		"jne L0xABEL_0x007478FC  \n " //!; => 0x007478FC
		"mov esi,eax \n " 
		"mov eax,dword ptr [esi] \n " 
		"cmp byte ptr [eax+0x15],0x0 \n " 
		"jne L0xABEL_0x00747917  \n " //!; => 0x00747917
		"lea esp,dword ptr [esp] \n " 
		"L0xABEL_0x007478F0: \n " 
		"mov esi,eax \n " 
		"mov eax,dword ptr [esi] \n " 
		"cmp byte ptr [eax+0x15],0x0 \n " 
		"je L0xABEL_0x007478F0  \n " //!; => 0x007478F0
		"jmp L0xABEL_0x00747917  \n " //!; => 0x00747917
		"L0xABEL_0x007478FC: \n " 
		"mov eax,dword ptr [esi+0x4] \n " 
		"cmp byte ptr [eax+0x15],0x0 \n " 
		"jne L0xABEL_0x00747915  \n " //!; => 0x00747915
		"L0xABEL_0x00747905: \n " 
		"cmp esi,dword ptr [eax+0x8] \n " 
		"jne L0xABEL_0x00747915  \n " //!; => 0x00747915
		"mov esi,eax \n " 
		"mov eax,dword ptr [eax+0x4] \n " 
		"cmp byte ptr [eax+0x15],0x0 \n " 
		"je L0xABEL_0x00747905  \n " //!; => 0x00747905
		"L0xABEL_0x00747915: \n " 
		"mov esi,eax \n " 
		"L0xABEL_0x00747917: \n " 
		"cmp esi,dword ptr [ebp-0x1C] \n " 
		"jne L0xABEL_0x007478C2  \n " //!; => 0x007478C2
		"jmp L0xABEL_0x00747954  \n " //!; => 0x00747954
		"L0xABEL_0x0074791E: \n " 
		//"sub bx, 0x994 \n"
		"mov esi,dword ptr [ebx+0xCC] \n " 
		"lea eax,dword ptr [ebx+0xC8] \n " 
		"cmp esi,eax \n " 
		"je L0xABEL_0x00747954  \n " //!; => 0x00747954
		"L0xABEL_0x0074792E: \n " 
		"test esi,esi \n " 
		"je L0xABEL_0x00747937  \n " //!; => 0x00747937
		"lea ecx,dword ptr [esi-0x60] \n " 
		"jmp L0xABEL_0x00747939  \n " //!; => 0x00747939
		"L0xABEL_0x00747937: \n " 
		"xor ecx,ecx \n " 
		"L0xABEL_0x00747939: \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov esi,dword ptr [esi+0x4] \n " 
		"push eax \n " 
		"mov eax,dword ptr [edx+0x30] \n " 
		"call eax \n " 
		"add dword ptr [ebp-0x14],0x1 \n " 
		"lea eax,dword ptr [ebx+0xC8] \n " 
		"cmp esi,eax \n " 
		"jne L0xABEL_0x0074792E  \n " //!; => 0x0074792E
		"L0xABEL_0x00747954: \n " 
		"cmp dword ptr [0x10C769C],0x0 \n " 
		"jne L0xABEL_0x0074799C  \n " //!; => 0x0074799C
		"call _0x408940 \n " 
		"push 0xE33D44 \n " 
		"mov ecx,eax \n " 
		"call _0x436290 \n " 
		"lea edx,dword ptr [eax+0x94] \n " 
		"mov dword ptr [0x10C769C],eax \n " 
		"mov dword ptr [ebp-0x1C],edx \n " 
		"jmp L0xABEL_0x00747983  \n " //!; => 0x00747983
		"mov edi,edi \n " 
		"L0xABEL_0x00747980: \n " 
		"mov edx,dword ptr [ebp-0x1C] \n " 
		"L0xABEL_0x00747983: \n " 
		"xor ecx,ecx \n " 
		"mov esi,edx \n " 
		"xor eax,eax \n " 
		"lock cmpxchg dword ptr [esi],ecx \n " 
		"mov ecx,eax \n " 
		"mov esi,0x1 \n " 
		"lock cmpxchg dword ptr [edx],esi \n " 
		"cmp eax,ecx \n " 
		"jne L0xABEL_0x00747980  \n " //!; => 0x00747980
		"L0xABEL_0x0074799C: \n " 
		"mov edx,dword ptr [0x10C769C] \n " 
		"add edx,0x24 \n " 
		"mov dword ptr [ebp-0x1C],edx \n " 
		"jmp L0xABEL_0x007479B3  \n " //!; => 0x007479B3
		//"lea ebx,dword ptr [ebx] \n " 
		"L0xABEL_0x007479B0: \n " 
		"mov edx,dword ptr [ebp-0x1C] \n " 
		"L0xABEL_0x007479B3: \n " 
		"xor ecx,ecx \n " 
		"mov esi,edx \n " 
		"xor eax,eax \n " 
		"lock cmpxchg dword ptr [esi],ecx \n " 
		"mov esi,dword ptr [ebp-0x14] \n " 
		"mov ecx,eax \n " 
		"lock cmpxchg dword ptr [edx],esi \n " 
		"cmp eax,ecx \n " 
		"jne L0xABEL_0x007479B0  \n " //!; => 0x007479B0
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x204] \n " 
		"mov ecx,dword ptr [ebx+0x28] \n " 
		"mov dword ptr [ebx+0x28],edx \n " 
		"mov dword ptr [eax+0x204],ecx \n " 
		"mov edx,dword ptr [eax+0x208] \n " 
		"mov ecx,dword ptr [ebx+0x2C] \n " 
		"mov dword ptr [ebx+0x2C],edx \n " 
		"mov dword ptr [eax+0x208],ecx \n " 
		"mov edx,dword ptr [eax+0x20C] \n " 
		"mov ecx,dword ptr [ebx+30] \n " 
		"mov dword ptr [ebx+0x30],edx \n " 
		"mov dword ptr [eax+0x20C],ecx \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x298] \n " 
		"mov ecx,dword ptr [ebx+0x98] \n " 
		"mov dword ptr [ebx+0x98],edx \n " 
		"mov dword ptr [eax+0x298],ecx \n " 
		"mov edx,dword ptr [eax+0x29C] \n " 
		"mov ecx,dword ptr [ebx+0x9c] \n " 
		"mov dword ptr [ebx+0x9c],edx \n " 
		"mov dword ptr [eax+0x29C],ecx \n " 
		"mov edx,dword ptr [eax+0x2A0] \n " 
		"mov ecx,dword ptr [ebx+0xA0] \n " 
		"mov dword ptr [ebx+0xA0],edx \n " 
		"mov dword ptr [eax+0x2A0],ecx \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x214] \n " 
		"mov ecx,dword ptr [ebx+0x48] \n " 
		"mov dword ptr [ebx+0x48],edx \n " 
		"mov dword ptr [eax+0x214],ecx \n " 
		"mov edx,dword ptr [eax+0x218] \n " 
		"mov ecx,dword ptr [ebx+0x4c] \n " 
		"mov dword ptr [ebx+0x4c],edx \n " 
		"mov dword ptr [eax+0x218],ecx \n " 
		"mov edx,dword ptr [eax+0x21C] \n " 
		"mov ecx,dword ptr [ebx+0x50] \n " 
		"mov dword ptr [ebx+0x50],edx \n " 
		"mov dword ptr [eax+0x21C],ecx \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x224] \n " 
		"mov ecx,dword ptr [ebx+0x58] \n " 
		"mov dword ptr [ebx+0x58],edx \n " 
		"mov dword ptr [eax+0x224],ecx \n " 
		"mov edx,dword ptr [eax+0x228] \n " 
		"mov ecx,dword ptr [ebx+0x5c] \n " 
		"mov dword ptr [ebx+0x5c],edx \n " 
		"mov dword ptr [eax+0x228],ecx \n " 
		"mov edx,dword ptr [eax+0x22C] \n " 
		"mov ecx,dword ptr [ebx+0x60] \n " 
		"mov dword ptr [ebx+0x60],edx \n " 
		"mov dword ptr [eax+0x22C],ecx \n " 
		"mov eax,dword ptr [ebx-0x10] \n " 
		"push eax \n " 
		"call _0x684560 \n " 
		"mov ecx,dword ptr [edi] \n " 
		"mov edx,dword ptr [ebp-0x18] \n " 
		"mov eax,dword ptr [ebx-0xc] \n " 
		"push edx \n " 
		
		"mov ebx,ecx \n " 
		"call _0x6E0F50 \n " 
		"mov esi,dword ptr [ebp+0x8] \n " 
		"mov ecx,dword ptr [esi+0x8D8] \n " 
		"push 0xE33D58 \n " 
		"lea eax,dword ptr [ebp-0x50] \n " 
		"push eax \n " 
		"call _0x4579D0 \n " 
		"mov dword ptr [ebp-0x4],0xD \n " 
		"mov eax,dword ptr [esi+0x8E0] \n " 
		"cmp eax,0xFFFFFFFF \n " 
		"lea ecx,dword ptr [ebp-0x50] \n " 
		"jne L0xABEL_0x00747B56  \n " //!; => 0x00747B56
		"push 0xE33D60 \n " 
		"call _0x907FA0 \n " 
		"push 0xE33D6C \n " 
		"lea ecx,dword ptr [ebp-0x50] \n " 
		"call _0x907FA0 \n " 
		"jmp L0xABEL_0x00747B85  \n " //!; => 0x00747B85
		"L0xABEL_0x00747B56: \n " 
		"add eax,0x1 \n " 
		"push eax \n " 
		"push 0xE33D60 \n " 
		"call _0x9081F0 \n " 
		"mov eax,dword ptr [esi+0x8E0] \n " 
		"mov edx,dword ptr [esi+0x920] \n " 
		"lea ecx,dword ptr [eax+eax*0x8] \n " 
		"mov eax,dword ptr [edx+ecx*0x4+0x20] \n " 
		"push eax \n " 
		"push 0xE33D6C \n " 
		"lea ecx,dword ptr [ebp-0x50] \n " 
		"call _0x9081F0 \n " 
		"L0xABEL_0x00747B85: \n " 
/* 		"mov edx,dword ptr [esi+0xA68] \n " 
		"cmp edx,0xFFFFFFFF \n " 
		
		"jle L0xABEL_0x00747C1B  \n " //!; => 0x00747C1B
		"mov ecx,dword ptr [esi+0x910] \n " 
		"test ecx,ecx \n " 
		"jne L0xABEL_0x00747BA2  \n " //!; => 0x00747BA2
		"xor eax,eax \n " 
		"jmp L0xABEL_0x00747BAD  \n " //!; => 0x00747BAD
		"L0xABEL_0x00747BA2: \n " 
		"mov eax,dword ptr [esi+0x914] \n " 
		"sub eax,ecx \n " 
		"sar eax,0x2 \n " 
		"L0xABEL_0x00747BAD: \n " 
		"cmp edx,eax \n " 
		"jge L0xABEL_0x00747C1B  \n " //!; => 0x00747C1B
		"lea ecx,dword ptr [ebp-0x2C] \n " 
		"call _0x9072A0 \n " 
		"mov byte ptr [ebp-0x4],0xE \n " 
		"mov edx,dword ptr [esi+0x910] \n " 
		"mov ecx,dword ptr [esi+0xA68] \n " 
		"mov ecx,dword ptr [edx+ecx*0x4] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax+0x48] \n " 
		"call edx \n " 
		"mov eax,dword ptr [eax+0x4] \n " 
		"mov ecx,dword ptr [esi+0x8D8] \n " 
		"lea edx,dword ptr [ebp-0x2C] \n " 
		"push edx \n " 
		"push eax \n " 
		"push ecx \n " 
		"call _0x41B390 \n " 
		"mov eax,dword ptr [esi+0x900] \n " 
		"add esp,0xC \n " 
		"push eax \n " 
		"push 0xE33D80 \n " 
		"lea ecx,dword ptr [ebp-0x2C] \n " 
		"call _0x9081F0 \n " 
		"lea ecx,dword ptr [ebp-0x2C] \n " 
		"push ecx \n " 
		"push 0xE33D88 \n " 
		"lea ecx,dword ptr [ebp-0x50] \n " 
		"call _0x908760 \n " 
		"lea ecx,dword ptr [ebp-0x2C] \n " 
		"mov byte ptr [ebp-0x4],0xD \n " 
		"call _0x9075D0 \n " 
		"L0xABEL_0x00747C1B: \n "  */
		
/* 		"cmp byte ptr [esi+0xA64],0x0 \n " 
		"je L0xABEL_0x00747D5C  \n " //!; => 0x00747D5C
		"mov byte ptr [esi+0xA64],0x0 \n " 
		"mov dword ptr [ebp-0x1C],0xF \n " 
		"mov dword ptr [ebp-0x20],0x0 \n " 
		"mov byte ptr [ebp-0x30],0x0 \n " 
		"push 0x17 \n " 
		"push 0xE33D94 \n " 
		"lea ecx,dword ptr [ebp-0x34] \n " 
		"mov byte ptr [ebp-0x4],0xF \n " 
		"call _0x4059E0 \n " 
		"push 0x6F \n " 
		"push 0xE33DB0 \n " 
		"lea ecx,dword ptr [ebp-0x34] \n " 
		"call _0x4058F0 \n " 
		"mov ebx,dword ptr [esi+0x910] \n " 
		"cmp ebx,dword ptr [esi+0x914] \n " 
		"je L0xABEL_0x00747D22  \n " //!; => 0x00747D22
		"jmp L0xABEL_0x00747C80  \n " //!; => 0x00747C80
		"lea esp,dword ptr [esp] \n " 
		"mov edi,edi \n " 
		"L0xABEL_0x00747C80: \n " 
		"push 0x2 \n " 
		"push 0xE33E20 \n " 
		"lea ecx,dword ptr [ebp-0x8C] \n " 
		"mov dword ptr [ebp-0x74],0xF \n " 
		"mov dword ptr [ebp-0x78],0x0 \n " 
		"mov byte ptr [ebp-0x88],0x0 \n " 
		"call _0x4059E0 \n " 
		"mov byte ptr [ebp-0x4],0x10 \n " 
		"mov ecx,dword ptr [ebx] \n " 
		"lea edx,dword ptr [ebp-0x8C] \n " 
		"push edx \n " 
		"mov edx,dword ptr [ecx] \n " 
		"lea eax,dword ptr [ebp-0x6C] \n " 
		"push eax \n " 
		"mov eax,dword ptr [edx+0x48] \n " 
		"call eax \n " 
		"push eax \n " 
		"call _0x70CC40 \n " 
		"push 0xFFFFFFFF \n " 
		"push 0x0 \n " 
		"push eax \n " 
		"lea ecx,dword ptr [ebp-0x34] \n " 
		"mov byte ptr [ebp-0x4],0x11 \n " 
		"call _0x4057F0 \n " 
		"cmp dword ptr [ebp-0x54],0x10 \n " 
		"jb L0xABEL_0x00747CE8  \n " //!; => 0x00747CE8
		"mov ecx,dword ptr [ebp-0x68] \n " 
		"push ecx \n " 
		"call _0x957A60 \n " 
		"add esp,0x4 \n " 
		"L0xABEL_0x00747CE8: \n " 
		"mov byte ptr [ebp-0x4],0xF \n " 
		"cmp dword ptr [ebp-0x74],0x10 \n " 
		"mov dword ptr [ebp-0x54],0xF \n " 
		"mov dword ptr [ebp-0x58],0x0 \n " 
		"mov byte ptr [ebp-0x68],0x0 \n " 
		"jb L0xABEL_0x00747D13  \n " //!; => 0x00747D13
		"mov edx,dword ptr [ebp-0x88] \n " 
		"push edx \n " 
		"call _0x957A60 \n " 
		"add esp,0x4 \n " 
		"L0xABEL_0x00747D13: \n " 
		"add ebx,0x4 \n " 
		"cmp ebx,dword ptr [esi+0x914] \n " 
		"jne L0xABEL_0x00747C80  \n " //!; => 0x00747C80
		"L0xABEL_0x00747D22: \n " 
		"push 0xD \n " 
		"push 0xE33E24 \n " 
		"lea ecx,dword ptr [ebp-0x34] \n " 
		"call _0x4058F0 \n " 
		"mov eax,dword ptr [edi] \n " 
		"push 0xFFFFFFFF \n " 
		"push 0x0 \n " 
		"lea ecx,dword ptr [ebp-0x34] \n " 
		"push ecx \n " 
		"lea ecx,dword ptr [eax+0x254] \n " 
		"call _0x4056B0 \n " 
		"mov byte ptr [ebp-0x4],0xD \n " 
		"cmp dword ptr [ebp-0x1C],0x10 \n " 
		"jb L0xABEL_0x00747D5C  \n " //!; => 0x00747D5C */
		
/* 		"mov edx,dword ptr [ebp-0x30] \n " 
		"push edx \n " 
		"call _0x957A60 \n " // <-Main memory cleanup / object lifetime manager. 
		"add esp,0x4 \n "  */
		
		//"L0xABEL_0x00747D5C: \n " 
		"mov eax,dword ptr [esi+0x8EC] \n " 
		"test eax,eax \n " 
		"je L0xABEL_0x00747E3E  \n " //!; => 0x00747E3E
		"mov ecx,dword ptr [esi+0x8F0] \n " 
		"sub ecx,eax \n " 
		"sar ecx,0x2 \n " 
		"je L0xABEL_0x00747E3E  \n " //!; => 0x00747E3E
		"lea ecx,dword ptr [ebp-0x2C] \n " 
		"call _0x9072A0 \n " 
		"push 0x0 \n " 
		"mov byte ptr [ebp-0x4],0x12 \n " 
		"mov eax,dword ptr [esi+0x8D8] \n " 
		"push 0x0 \n " 
		"push eax \n " 
		"lea ecx,dword ptr [ebp-0x2C] \n " 
		"call _0x909940 \n " 
		"xor ecx,ecx \n " 
		"lea esp,dword ptr [esp] \n " 
		"L0xABEL_0x00747DA0: \n " 
		"mov edx,dword ptr [esi+0x8EC] \n " 
		"test edx,edx \n " 
		"je L0xABEL_0x00747DD0  \n " //!; => 0x00747DD0
		"mov eax,dword ptr [esi+0x8F0] \n " 
		"sub eax,edx \n " 
		"sar eax,0x2 \n " 
		"cmp ecx,eax \n " 
		"jae L0xABEL_0x00747DD0  \n " //!; => 0x00747DD0
		"mov eax,dword ptr [edx+ecx*0x4] \n " 
		"add eax,0x1 \n " 
		"lea ebx,dword ptr [ecx+0x1] \n " 
		"push eax \n " 
		"push ebx \n " 
		"lea ecx,dword ptr [ebp-0x2C] \n " 
		"call _0x908240 \n " 
		"mov ecx,ebx \n " 
		"jmp L0xABEL_0x00747DA0  \n " //!; => 0x00747DA0
		"L0xABEL_0x00747DD0: \n " 
		"movzx ecx,byte ptr [esi+0x8E6] \n " 
		"push ecx \n " 
		"push 0xE33E34 \n " 
		"lea ecx,dword ptr [ebp-0x2C] \n " 
		"call _0x9080C0 \n " 
		"lea edx,dword ptr [ebp-0x2C] \n " 
		"push edx \n " 
		"push 0xE33E44 \n " 
		"lea ecx,dword ptr [ebp-0x50] \n " 
		"call _0x908760 \n " 
		"mov ecx,dword ptr [esi+0x8F0] \n " 
		"mov ebx,dword ptr [esi+0x8EC] \n " 
		"cmp ebx,ecx \n " 
		"je L0xABEL_0x00747E32  \n " //!; => 0x00747E32
		"mov eax,ecx \n " 
		"sub eax,ecx \n " 
		"sar eax,0x2 \n " 
		"lea edx,dword ptr [eax*0x4] \n " 
		"add ebx,edx \n " 
		"test eax,eax \n " 
		"jle L0xABEL_0x00747E2C  \n " //!; => 0x00747E2C
		"mov eax,dword ptr [esi+0x8EC] \n " 
		"push edx \n " 
		"push ecx \n " 
		"push edx \n " 
		"push eax \n " 
		"call _0xA824E7 \n " 
		"add esp,0x10 \n " 
		"L0xABEL_0x00747E2C: \n " 
		"mov dword ptr [esi+0x8F0],ebx \n " 
		"L0xABEL_0x00747E32: \n " 
		"lea ecx,dword ptr [ebp-0x2C] \n " 
		"mov byte ptr [ebp-0x4],0xD \n " 
		"call _0x9075D0 \n " 
		"L0xABEL_0x00747E3E: \n " 
		"push 0x3C \n " 
		"call _0xA825B9 \n " 
		"add esp,0x4 \n " 
		"mov dword ptr [ebp+0x8],eax \n " 
		"test eax,eax \n " 
		"mov byte ptr [ebp-0x4],0x13 \n " 
		"je L0xABEL_0x00747E64  \n " //!; => 0x00747E64
		"push 0x100 \n " 
		"mov ecx,eax \n " 
		"call _0x8E5AE0 \n " 
		"mov dword ptr [ebp+0x8],eax \n " 
		"jmp L0xABEL_0x00747E6B  \n " //!; => 0x00747E6B
		"L0xABEL_0x00747E64: \n " 
		"mov dword ptr [ebp+0x8],0x0 \n " 
		"L0xABEL_0x00747E6B: \n " 
		"mov byte ptr [ebp-0x4],0xD \n " 
		"mov ebx,dword ptr [edi] \n " 
		"mov ecx,dword ptr [ebx+0x10] \n " 
		"cmp dword ptr [ebp+0x8],ecx \n " 
		"je L0xABEL_0x00747E85  \n " //!; => 0x00747E85
		"test ecx,ecx \n " 
		"je L0xABEL_0x00747E85  \n " //!; => 0x00747E85
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax] \n " 
		"push 0x1 \n " 
		"call edx \n " 
		"L0xABEL_0x00747E85: \n " 
		"mov eax,dword ptr [ebp+0x8] \n " 
		"mov dword ptr [ebx+0x10],eax \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov eax,dword ptr [eax+0x10] \n " 
		"push eax \n " 
		"lea ecx,dword ptr [ebp-0x50] \n " 
		"push ecx \n " 
		"call _0x4D2C80 \n " 
		"add esp,0x4 \n " 
		"mov eax,esp \n " 
		"mov dword ptr [eax],0xE33E50 \n " 
		"mov ecx,dword ptr [esi+0x8D8] \n " 
		"mov dword ptr [ebp+0x8],esp \n " 
		"call _0x4CDBA0 \n " 
		"mov eax,dword ptr [esi+0x8B4] \n " 
		"add esp,0x4 \n " 
		"test eax,eax \n " 
		"je L0xABEL_0x00747F25  \n " //!; => 0x00747F25
		"mov ecx,dword ptr [esi+0x8B8] \n " 
		"sub ecx,eax \n " 
		"mov eax,0x66666667 \n " 
		"imul ecx \n " 
		"sar edx,0x4 \n " 
		"mov eax,edx \n " 
		"shr eax,0x1F \n " 
		"add eax,edx \n " 
		"je L0xABEL_0x00747F25  \n " //!; => 0x00747F25
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [esi+0x8B4] \n " 
		"mov ecx,dword ptr [eax+0x244] \n " 
		"mov dword ptr [eax+0x244],edx \n " 
		"mov dword ptr [esi+0x8B4],ecx \n " 
		"mov edx,dword ptr [esi+0x8B8] \n " 
		"mov ecx,dword ptr [eax+0x248] \n " 
		"mov dword ptr [eax+0x248],edx \n " 
		"mov dword ptr [esi+0x8B8],ecx \n " 
		"mov edx,dword ptr [esi+0x8BC] \n " 
		"mov ecx,dword ptr [eax+0x24C] \n " 
		"mov dword ptr [eax+0x24C],edx \n " 
		"mov dword ptr [esi+0x8BC],ecx \n " 
		"L0xABEL_0x00747F25: \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov ecx,dword ptr [esi+0x8E0] \n " 
		"mov dword ptr [eax+0x250],ecx \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov dl,byte ptr [esi+0x8DD] \n " 
		"mov byte ptr [eax+0x270],dl \n " 
		"mov eax,dword ptr [esi+0x910] \n " 
		"test eax,eax \n " 
		"je L0xABEL_0x00747F58  \n " //!; => 0x00747F58
		"mov ecx,dword ptr [esi+0x914] \n " 
		"sub ecx,eax \n " 
		"sar ecx,0x2 \n " 
		"jne L0xABEL_0x00747F5C  \n " //!; => 0x00747F5C
		"L0xABEL_0x00747F58: \n " 
		"xor al,al \n " 
		"jmp L0xABEL_0x00747F74  \n " //!; => 0x00747F74
		"L0xABEL_0x00747F5C: \n " 
		"mov edx,dword ptr [esi+0x910] \n " 
		"mov ecx,dword ptr [edx] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax+0x20] \n " 
		"call edx \n " 
		"mov edx,dword ptr [eax] \n " 
		"mov ecx,eax \n " 
		"mov eax,dword ptr [edx+0x44] \n " 
		"call eax \n " 
		"L0xABEL_0x00747F74: \n " 
		"mov ecx,dword ptr [edi] \n " 
		"mov byte ptr [ecx+0x271],al \n " 
		"mov ecx,dword ptr [esi+0x8CC] \n " 
		"lea eax,dword ptr [ebp-0x20] \n " 
		"call _0x743180 \n " 
		"mov byte ptr [ebp-0x4],0x15 \n " 
		"mov ebx,dword ptr [edi] \n " 
		"mov ecx,dword ptr [eax] \n " 
		"mov dword ptr [ebx+0x274],ecx \n " 
		"mov eax,dword ptr [eax+0x4] \n " 
		"cmp eax,dword ptr [ebx+0x278] \n " 
		"mov dword ptr [ebp-0x18],eax \n " 
		"je L0xABEL_0x00747FFB  \n " //!; => 0x00747FFB
		"test eax,eax \n " 
		"je L0xABEL_0x00747FB6  \n " //!; => 0x00747FB6
		"add eax,0x4 \n " 
		"mov edx,0x1 \n " 
		"lock xadd dword ptr [eax],edx \n " 
		"L0xABEL_0x00747FB6: \n " 
		"mov eax,dword ptr [ebx+0x278] \n " 
		"test eax,eax \n " 
		"mov dword ptr [ebp+0x8],eax \n " 
		"je L0xABEL_0x00747FF2  \n " //!; => 0x00747FF2
		"add eax,0x4 \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne L0xABEL_0x00747FF2  \n " //!; => 0x00747FF2
		"mov ecx,dword ptr [ebp+0x8] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov eax,dword ptr [edx+0x4] \n " 
		"call eax \n " 
		"mov ecx,dword ptr [ebp+0x8] \n " 
		"add ecx,0x8 \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne L0xABEL_0x00747FF2  \n " //!; => 0x00747FF2
		"mov ecx,dword ptr [ebp+0x8] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax+0x8] \n " 
		"call edx \n " 
		"L0xABEL_0x00747FF2: \n " 
		"mov eax,dword ptr [ebp-0x18] \n " 
		"mov dword ptr [ebx+0x278],eax \n " 
		"L0xABEL_0x00747FFB: \n " 
		"mov byte ptr [ebp-0x4],0xD \n " 
		"mov ebx,dword ptr [ebp-0x1C] \n " 
		"test ebx,ebx \n " 
		"je L0xABEL_0x00748030  \n " //!; => 0x00748030
		"lea ecx,dword ptr [ebx+0x4] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne L0xABEL_0x00748030  \n " //!; => 0x00748030
		"mov eax,dword ptr [ebx] \n " 
		"mov edx,dword ptr [eax+0x4] \n " 
		"mov ecx,ebx \n " 
		"call edx \n " 
		"lea eax,dword ptr [ebx+0x8] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne L0xABEL_0x00748030  \n " //!; => 0x00748030
		"mov edx,dword ptr [ebx] \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"mov ecx,ebx \n " 
		"call eax \n " 
		"L0xABEL_0x00748030: \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov ecx,dword ptr [esi+0x8D0] \n " 
		"mov dword ptr [eax+0x27C],ecx \n " 
		"mov ecx,dword ptr [esi+0x8D4] \n " 
		"cmp ecx,dword ptr [eax+0x280] \n " 
		"mov dword ptr [ebp+0x8],eax \n " 
		"mov dword ptr [ebp-0x1C],ecx \n " 
		"je L0xABEL_0x007480A2  \n " //!; => 0x007480A2
		"test ecx,ecx \n " 
		"je L0xABEL_0x00748062  \n " //!; => 0x00748062
		"add ecx,0x4 \n " 
		"mov edx,0x1 \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"L0xABEL_0x00748062: \n " 
		"mov ebx,dword ptr [eax+0x280] \n " 
		"test ebx,ebx \n " 
		"je L0xABEL_0x00748096  \n " //!; => 0x00748096
		"lea ecx,dword ptr [ebx+0x4] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne L0xABEL_0x00748096  \n " //!; => 0x00748096
		"mov eax,dword ptr [ebx] \n " 
		"mov edx,dword ptr [eax+0x4] \n " 
		"mov ecx,ebx \n " 
		"call edx \n " 
		"lea eax,dword ptr [ebx+0x8] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne L0xABEL_0x00748096  \n " //!; => 0x00748096
		"mov edx,dword ptr [ebx] \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"mov ecx,ebx \n " 
		"call eax \n " 
		"L0xABEL_0x00748096: \n " 
		"mov ecx,dword ptr [ebp-0x1C] \n " 
		"mov edx,dword ptr [ebp+0x8] \n " 
		"mov dword ptr [edx+0x280],ecx \n " 
		"L0xABEL_0x007480A2: \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x288] \n " 
		"mov ecx,dword ptr [esi+0xA1C] \n " 
		"mov dword ptr [esi+0xA1C],edx \n " 
		"mov dword ptr [eax+0x288],ecx \n " 
		"mov edx,dword ptr [eax+0x28C] \n " 
		"mov ecx,dword ptr [esi+0xA20] \n " 
		"mov dword ptr [esi+0xA20],edx \n " 
		"mov dword ptr [eax+0x28C],ecx \n " 
		"mov edx,dword ptr [eax+0x290] \n " 
		"mov ecx,dword ptr [esi+0xA24] \n " 
		"mov dword ptr [esi+0xA24],edx \n " 
		"mov dword ptr [eax+0x290],ecx \n " 
		"mov ebx,dword ptr [edi] \n " 
		"mov eax,dword ptr [esi+0x974] \n " 
		"mov dword ptr [ebx+0x2A4],eax \n " 
		"mov eax,dword ptr [esi+0x978] \n " 
		"cmp eax,dword ptr [ebx+0x2A8] \n " 
		"mov dword ptr [ebp-0x18],eax \n " 
		"je L0xABEL_0x00748160  \n " //!; => 0x00748160
		"test eax,eax \n " 
		"je L0xABEL_0x0074811B  \n " //!; => 0x0074811B
		"lea ecx,dword ptr [eax+0x4] \n " 
		"mov edx,0x1 \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"L0xABEL_0x0074811B: \n " 
		"mov ecx,dword ptr [ebx+0x2A8] \n " 
		"test ecx,ecx \n " 
		"mov dword ptr [ebp+0x8],ecx \n " 
		"je L0xABEL_0x0074815A  \n " //!; => 0x0074815A
		"add ecx,0x4 \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne L0xABEL_0x0074815A  \n " //!; => 0x0074815A
		"mov ecx,dword ptr [ebp+0x8] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax+0x4] \n " 
		"call edx \n " 
		"mov eax,dword ptr [ebp+0x8] \n " 
		"add eax,0x8 \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne L0xABEL_0x00748157  \n " //!; => 0x00748157
		"mov ecx,dword ptr [ebp+0x8] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"call eax \n " 
		"L0xABEL_0x00748157: \n " 
		"mov eax,dword ptr [ebp-0x18] \n " 
		"L0xABEL_0x0074815A: \n " 
		"mov dword ptr [ebx+0x2A8],eax \n " 
		"L0xABEL_0x00748160: \n " 
		"mov edi,dword ptr [edi] \n " 
		"mov ecx,dword ptr [esi+0x96C] \n " 
		"mov dword ptr [edi+0x2AC],ecx \n " 
		"mov eax,dword ptr [esi+0x970] \n " 
		"cmp eax,dword ptr [edi+0x2B0] \n " 
		"mov dword ptr [ebp+0x8],eax \n " 
		"je L0xABEL_0x007481CC  \n " //!; => 0x007481CC
		"test eax,eax \n " 
		"je L0xABEL_0x0074818F  \n " //!; => 0x0074818F
		"lea edx,dword ptr [eax+0x4] \n " 
		"mov ecx,0x1 \n " 
		"lock xadd dword ptr [edx],ecx \n " 
		"L0xABEL_0x0074818F: \n " 
		"mov ebx,dword ptr [edi+0x2B0] \n " 
		"test ebx,ebx \n " 
		"je L0xABEL_0x007481C6  \n " //!; => 0x007481C6
		"lea edx,dword ptr [ebx+0x4] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [edx],ecx \n " 
		"jne L0xABEL_0x007481C6  \n " //!; => 0x007481C6
		"mov edx,dword ptr [ebx] \n " 
		"mov eax,dword ptr [edx+0x4] \n " 
		"mov ecx,ebx \n " 
		"call eax \n " 
		"lea ecx,dword ptr [ebx+0x8] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne L0xABEL_0x007481C3  \n " //!; => 0x007481C3
		"mov eax,dword ptr [ebx] \n " 
		"mov edx,dword ptr [eax+0x8] \n " 
		"mov ecx,ebx \n " 
		"call edx \n " 
		"L0xABEL_0x007481C3: \n " 
		"mov eax,dword ptr [ebp+0x8] \n " 
		"L0xABEL_0x007481C6: \n " 
		"mov dword ptr [edi+0x2B0],eax \n " 
		"L0xABEL_0x007481CC: \n " 
		"xor eax,eax \n " 
		"mov dword ptr [esi+0x96C],eax \n " 
		"mov edi,dword ptr [esi+0x970] \n " 
		"cmp edi,eax \n " 
		"mov dword ptr [esi+0x970],eax \n " 
		"je L0xABEL_0x0074820E  \n " //!; => 0x0074820E
		"lea eax,dword ptr [edi+0x4] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne L0xABEL_0x0074820E  \n " //!; => 0x0074820E
		"mov edx,dword ptr [edi] \n " 
		"mov eax,dword ptr [edx+0x4] \n " 
		"mov ecx,edi \n " 
		"call eax \n " 
		"lea ecx,dword ptr [edi+0x8] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne L0xABEL_0x0074820E  \n " //!; => 0x0074820E
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x8] \n " 
		"mov ecx,edi \n " 
		"call edx \n " 
		"L0xABEL_0x0074820E: \n " 
		"mov edi,dword ptr [esi+0x8F8] \n " 
		"mov edx,dword ptr [esi+0x9AC] \n " 
		"mov ebx,dword ptr [0x10BA5EC] \n " 
		"lea ecx,dword ptr [esi+0x9A8] \n " 
		"mov dword ptr [ebp+0x8],edi \n " 
		"and edi,0x7F \n " 
		"test edx,edx \n " 
		"je L0xABEL_0x0074823C  \n " //!; => 0x0074823C
		"mov eax,dword ptr [ecx+0x8] \n " 
		"sub eax,edx \n " 
		"sar eax,0x2 \n " 
		"cmp ebx,eax \n " 
		"jb L0xABEL_0x00748246  \n " //!; => 0x00748246
		"L0xABEL_0x0074823C: \n " 
		"mov eax,dword ptr [0x10A63E0] \n " 
		"call _0x74DDD0 \n " 
		"L0xABEL_0x00748246: \n " 
		"mov eax,dword ptr [esi+0x9AC] \n " 
		"mov eax,dword ptr [eax+ebx*0x4] \n " 
		"test eax,eax \n " 
		"jne L0xABEL_0x0074826C  \n " //!; => 0x0074826C
		"mov edx,dword ptr [0x10BA5E0] \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"mov ecx,0x10BA5E0 \n " 
		"call eax \n " 
		"mov ecx,dword ptr [esi+0x9AC] \n " 
		"mov dword ptr [ecx+ebx*0x4],eax \n " 
		"L0xABEL_0x0074826C: \n " 
		"mov edx,dword ptr [eax] \n " 
		"mov ecx,eax \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"call eax \n " 
		"mov ecx,eax \n " 
		"mov eax,dword ptr [ebp+0x8] \n " 
		"xor edx,edx \n " 
		"div dword ptr [ecx] \n " 
		"test edx,edx \n " 
		"jne L0xABEL_0x007482B7  \n " //!; => 0x007482B7
		"lea ecx,dword ptr [ebp-0x28] \n " 
		"lea ebx,dword ptr [esi+0x50] \n " 
		"push ecx \n " 
		"mov ecx,ebx \n " 
		"call _0x8E5790 \n " 
		"mov edx,dword ptr [eax] \n " 
		"add edi,0xB \n " 
		"shl edi,0x4 \n " 
		"add edi,esi \n " 
		"mov dword ptr [edi],edx \n " 
		"mov ecx,dword ptr [eax+0x4] \n " 
		"mov dword ptr [edi+0x4],ecx \n " 
		"mov edx,dword ptr [eax+0x8] \n " 
		"mov dword ptr [edi+0x8],edx \n " 
		"mov eax,dword ptr [eax+0xC] \n " 
		"mov ecx,ebx \n " 
		"mov dword ptr [edi+0xC],eax \n " 
		"call _0x8E4F40 \n " 
		"jmp L0xABEL_0x007482CC  \n " //!; => 0x007482CC
		"L0xABEL_0x007482B7: \n " 
		"add edi,0xB \n " 
		"shl edi,0x4 \n " 
		"add edi,esi \n " 
		"xor eax,eax \n " 
		"mov dword ptr [edi],eax \n " 
		"mov dword ptr [edi+0x4],eax \n " 
		"mov dword ptr [edi+0x8],eax \n " 
		"mov dword ptr [edi+0xC],eax \n " 
		"L0xABEL_0x007482CC: \n " 
		"lea ecx,dword ptr [ebp-0x6C] \n " 
		"push ecx \n " 
		"mov ecx,edi \n " 
		"call _0x8E5910 \n " 
		"mov edi,0x10 \n " 
		"cmp dword ptr [eax+0x18],edi \n " 
		"jb L0xABEL_0x007482E6  \n " //!; => 0x007482E6
		"mov eax,dword ptr [eax+0x4] \n " 
		"jmp L0xABEL_0x007482E9  \n " //!; => 0x007482E9
		"L0xABEL_0x007482E6: \n " 
		"add eax,0x4 \n " 
		"L0xABEL_0x007482E9: \n " 
		"mov ecx,dword ptr [esi+0x8F8] \n " 
/* 		"push eax \n " 
		"push ecx \n " 
		"push 0xE33E64 \n " 
		"mov eax,esi \n " 
		"call _0x746280 \n "  */
	//	"add esp,0xC \n " 
		"cmp dword ptr [ebp-0x54],edi \n " 
		"jb L0xABEL_0x00748311  \n " //!; => 0x00748311
		"mov edx,dword ptr [ebp-0x68] \n " 
		"push edx \n " 
		"call _0x957A60 \n " 
		"add esp,0x4 \n " 
		"L0xABEL_0x00748311: \n " 
		"mov byte ptr [esi+0x8FC],0x0 \n " 
		"add dword ptr [esi+0x8F8],0x1 \n " 
		"mov edi,esi \n " 
		"call _0x74ADB0 \n " 
		"mov al,byte ptr [esi+0x8DC] \n " 
		"mov edi,dword ptr [ebp-0x38] \n " 
		"mov byte ptr [esi+0x8E5],0x0 \n " 
		"mov byte ptr [esi+0x8DD],al \n " 
		"mov esi,dword ptr [ebp+0xC] \n " 
		"mov ecx,dword ptr [esi] \n " 
		"call _0x560940 \n " 
		"lea ecx,dword ptr [ebp-0x50] \n " 
		"mov byte ptr [ebp-0x4],0x0 \n " 
		"call _0x9075D0 \n " 
		"mov ecx,dword ptr [ebp-0xC] \n " 
		"pop edi \n " 
		"mov eax,esi \n " 
		"pop esi \n " 
		//"mov dword ptr [0x0],ecx \n " 
		"pop ebx \n " 
		"mov esp,ebp \n " 
		"pop ebp \n " 
		"ret 0x8 \n " 
		" \n " //! 0xFinis of selected range: 0x00748366
		" \n " //!; Internal calls outside selected range (after)
	);
}