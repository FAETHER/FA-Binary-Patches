#include "include/funcDefs.h"
#include "include/global_func_table.h"
#include <stdlib.h>

void SearchIndexWithString()
{
	__asm__
	(
		"mov eax,dword ptr fs:[ebx] \n " 
		"mov edx,dword ptr [esp+0x4] \n " 
		"push 0xFFFFFFFF \n " 
		"push 0xB92518 \n " 
		"push eax \n " 
		"mov dword ptr fs:[ebx],esp \n " 
		"sub esp,0x1C \n " 
		"test edx,edx \n " 
		"push edi \n " 
		"mov edi,ecx \n " 
		"jne THE_STRING_IS_NOT_EMPTY \n " 
		"xor eax,eax \n " 
		"pop edi \n " 
		"mov ecx,dword ptr [esp+0x1C] \n " 
		"mov dword ptr fs:[ebx],ecx \n " 
		"add esp,0x28 \n " 
		"ret 0x4 \n " 
		"THE_STRING_IS_NOT_EMPTY: \n"
		"mov eax,edx \n " 
		"push esi \n " 
		"mov dword ptr [esp+0x20],0xF \n " 
		"mov dword ptr [esp+0x1C],ebx \n " 
		"mov byte ptr [esp+0xC],ebx \n " 
//		"lea esi,dword ptr [eax+0x1] \n " 
/* 		"here: \n"
		"mov cl,byte ptr [eax] \n " 
		"add eax,0x1 \n " 
		"test cl,cl \n " 
		"jne here \n " 
		"push ebp \n " 
		"sub eax,esi \n " 
		"push eax \n " 
		"push edx \n " 	 */	
		"push ebp \n " 
		"push 0x4 \n " 
		"push edx \n " 
		"lea ecx,dword ptr [esp+0x14] \n " 
	);
	__asm__ (
		"call 4221408 \n " 
		"xor esi,esi \n " 
		"mov dword ptr [esp+0x30],ebx \n " 
		"lea ebp,dword ptr [esi+0x10] \n " 
		"CONTINUE_STRCMP: \n"
		"mov ecx,dword ptr [edi+0x1EC] \n " 
		"test ecx,ecx \n " 
		"je LABEL3 \n " 
		"mov eax,dword ptr [edi+0x1F0] \n " 
		"sub eax,ecx \n " 
		"sar eax,0x2 \n " 
		"cmp esi,eax \n " 
		"jae LABEL3 \n " 
		"mov eax,ecx \n " 
		"mov ecx,dword ptr [eax+esi*0x4] \n " 
		"mov eax,dword ptr [esp+0x10] \n " 
		"add ecx,ebp \n " 
		"LABEL1:"
		"cmp dword ptr [esp+0x24],ebp \n " 
		"jae LABEL_ \n " 
		"lea eax,dword ptr [esp+0x10] \n " 
		"LABEL_: \n"
		"mov edx,dword ptr [esp+0x20] \n " 
		"push edx \n " 
		"push eax \n " 
		"mov eax,dword ptr [ecx+0x14] \n " 
		"push eax \n " 
		"push ebx \n " 
	);
	__asm__ (
		"call 4241536 \n " 
		"test eax,eax \n " 
		"je LABEL2 \n " 
		"add esi,0x1 \n " 
		"jmp CONTINUE_STRCMP \n "
		"LABEL2: \n"
		"cmp dword ptr [esp+0x24],ebp \n " 
		"mov ecx,dword ptr [edi+0x1EC] \n " 
		"mov esi,dword ptr [ecx+esi*0x4] \n " 
		"jb EXIT2 \n " 
		"mov edx,dword ptr [esp+0x10] \n " 
		"push edx \n " 
	);
	__asm__ (
		"call 9800288 \n " 
		"add esp,0x4 \n " 
		"EXIT2: \n"
		"pop ebp \n " 
		"mov eax,esi \n " 
		"pop esi \n " 
		"pop edi \n " 
		"mov ecx,dword ptr [esp+0x1C] \n " 
		"mov dword ptr [fs:0x0],ecx \n " 
		"add esp,0x28 \n " 
		"ret 0x4 \n " 
		"LABEL3: \n"
		"cmp dword ptr [esp+0x24],ebp \n " 
		"jb EXIT \n " 
		"mov eax,dword ptr [esp+0x10] \n " 
		"push eax \n " 
	);
	__asm__ (
		"call 9800288 \n " 
		"add esp,0x4 \n " 
		"mov ecx,dword ptr [esp+0x28] \n " 
		"EXIT: \n"
		"pop ebp \n " 
		"pop esi \n " 
		"xor eax,eax \n " 
		"pop edi \n " 
		"mov dword ptr [fs:0x0],ecx \n " 
		"add esp,0x28 \n " 
		"ret 0x4 \n " 
	);
	
}

void GeometricCamera()
{
	__asm__
	(
		"push 0xFFFFFFFF \n " 
		"push 0xBBDBB7 \n " 
		"mov eax,dword ptr [fs:0x0] \n " 
		"push eax \n " 
		"mov dword ptr [fs:0x0],esp \n " 
		"sub esp,0x80 \n " 
		"push ebx \n " 
		"push ebp \n " 
		"mov ebp,dword ptr [esp+0x9C] \n " 
		"xor ebx,ebx \n " 
		"push esi \n " 
		"mov dword ptr [esp+0xC],ebx \n " 
		"cmp dword ptr [ebp+0x8],ebx \n " 
		"push edi \n " 
		"mov esi,ecx \n " 
		"je EXITCAMERA \n " 
	);
	__asm__ (
		"call 4396432 \n " 
		"mov edx,dword ptr [eax] \n " 
		"mov dword ptr [esp+0x18],eax \n " 
		"mov ecx,eax \n " 
		
		//"mov eax,dword ptr [edx+0x34] \n " 
		//"call eax \n " 
		"lea eax, ds:[ecx+0x1C] \n"
		
		"fld dword ptr [0xF57F08] \n " 
		"mov ecx,dword ptr [esi+0x94] \n " 
		"sub esp,0x8 \n " 
		"test ecx,ecx \n " 
		"fstp dword ptr [esp+0x4] \n " 
		"fild dword ptr [esi+0x94] \n " 
		"mov edi,eax \n " 
		"jge LABEL4 \n " 
		"fadd dword ptr [0xE4F710] \n " 
		"LABEL4: \n"
		"fadd dword ptr [esi+0x98] \n " 
		"fstp dword ptr [esp] \n " 
	);
	__asm__ (
		"call 4340000 \n " 
		"add esp,0x8 \n " 
		"fstp dword ptr [esp+0x14] \n " 
		"mov esi,0x10BE940 \n " 
	);
	__asm__ (
		"call 4427472 \n " 
		"test al,al \n " 
		"je LABEL5 \n " 
		"mov ecx,dword ptr [0x10BE980] \n " 
		"fld dword ptr [esp+0x14] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov eax,dword ptr [edx+0x24] \n " 
		"push ecx \n " 
		"fstp dword ptr [esp] \n " 
		"call eax \n " 
		"LABEL5: \n"
		"mov esi,0x10BE868 \n " 
	);
	__asm__ (
		"call 4427472 \n " 
		"test al,al \n " 
		"je LABEL6 \n " 
		"mov eax,dword ptr [esp+0xA0] \n " 
		"mov ecx,dword ptr [0x10BE8A8] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov edx,dword ptr [edx+0x18] \n " 
		"add eax,0x294 \n " 
		"push eax \n " 
		"push 0x4 \n " 
		"call edx \n " 
		"LABEL6: \n"
		"mov esi,0x10BEF50 \n " 
	);
	__asm__ (
		"call 4427472 \n " 
		"test al,al \n " 
		"je LABEL7 \n " 
		"mov ecx,dword ptr [0x10BEF90] \n " 
		"mov edx,dword ptr [esp+0xA0] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov eax,dword ptr [eax+0x14] \n " 
		"add edx,0x5C \n " 
		"push edx \n " 
		"call eax \n " 
		"LABEL7: \n"
		"mov esi,0x10BE748 \n " 
	);
	__asm__ (
		"call 4427472 \n " 
		"test al,al \n " 
		"je LABEL8 \n " 
		"mov ecx,dword ptr [0x10BE788] \n " 
		"mov eax,dword ptr [esp+0xA0] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov edx,dword ptr [edx+0x14] \n " 
		"add eax,0x1C \n " 
		"push eax \n " 
		"call edx \n " 
		"LABEL8: \n"
		"push ecx \n " 
		"pop eax \n " 
		"push 0xE15DC0 \n " //const char* "mesh"		
		"mov ecx,edi \n " 
		"mov dword ptr [esp+0x24],esp \n " 
		"call %[SearchIndexWithString] \n " 
		"mov ecx,dword ptr [esp+0x18] \n " 
		"mov edi,eax \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax+0x4C] \n " 
		"push edi \n " 
		"mov dword ptr [esp+0x20],edi \n " 
		"call edx \n " 
		"mov ebp,dword ptr [ebp+0x4] \n " 
		"mov eax,dword ptr [ebp] \n " 
		"cmp eax,ebp \n " 
		"mov dword ptr [esp+0x20],ebp \n " 
		"mov dword ptr [esp+0x14],eax \n " 
		"je 8263672 \n " 
		"jmp 8262932 \n " 
		"lea esp,dword ptr [esp] \n " 
		"mov edi,dword ptr [esp+0x1C] \n " 
		"mov eax,dword ptr [esp+0x14] \n " 
		"mov esi,dword ptr [eax+0x14] \n " 
		"cmp dword ptr [esi+0x5C],ebx \n " 
		"mov ebp,0xF \n " 
		"jge 8263033 \n " 
		"push 0xB \n " 
		"push 0xE3F3A0 \n " 
		"lea ecx,dword ptr [esp+0x44] \n " 
		"mov dword ptr [esp+0x5C],ebp \n " 
		"mov dword ptr [esp+0x58],ebx \n " 
		"mov byte ptr [esp+0x48],bl \n " 
		:
		: [SearchIndexWithString] "i" (SearchIndexWithString)
		: "memory"		
	);
	__asm__ (
		"call 4221408 \n " 
		"lea ecx,dword ptr [esp+0x3C] \n " 
		"push ecx \n " 
		"lea edx,dword ptr [esi+0x10] \n " 
		"push edx \n " 
		"push edi \n " 
		"mov dword ptr [esp+0xA4],ebx \n " 
	);
	__asm__ (
		"call 4384320 \n " 
		"mov dword ptr [esp+0x98],0xFFFFFFFF \n " 
		"cmp dword ptr [esp+0x54],0x10 \n " 
		"mov dword ptr [esi+0x5C],eax \n " 
		"jb 8263033 \n " 
		"mov eax,dword ptr [esp+0x40] \n " 
		"push eax \n " 
	);
	__asm__ (
		"call 9800288 \n " 
		"add esp,0x4 \n " 
		"test dword ptr [esi+0x5C],0x1 \n " 
		"je 8263649 \n " 
		"cmp byte ptr [esi+0x99],bl \n " 
		"jne 8263292 \n " 
		"push ebx \n " 
		"push 0xE00779 \n " 
		"lea ecx,dword ptr [esp+0x60] \n " 
		"mov byte ptr [esi+0x99],0x1 \n " 
		"mov dword ptr [esp+0x78],ebp \n " 
		"mov dword ptr [esp+0x74],ebx \n " 
		"mov byte ptr [esp+0x64],bl \n " 
	);
	__asm__ (
		"call 4221408 \n " 
		"mov dword ptr [esp+0x98],0x1 \n " 
		"push 0xE \n " 
		"push 0xE3F3AC \n " 
		"lea ecx,dword ptr [esp+0x44] \n " 
		"mov dword ptr [esp+0x5C],ebp \n " 
		"mov dword ptr [esp+0x58],ebx \n " 
		"mov byte ptr [esp+0x48],bl \n " 
	);
	__asm__ (
		"call 4221408 \n " 
		"lea ecx,dword ptr [esp+0x58] \n " 
		"push ecx \n " 
		"lea edx,dword ptr [esp+0x40] \n " 
		"push edx \n " 
		"lea eax,dword ptr [esi+0x10] \n " 
		"push eax \n " 
		"push edi \n " 
		"lea edi,dword ptr [esp+0x84] \n " 
		"mov byte ptr [esp+0xA8],0x2 \n " 
	);
	__asm__ (
		"call 4384832 \n " 
		"push 0xFFFFFFFF \n " 
		"push ebx \n " 
		"push eax \n " 
		"lea ecx,dword ptr [esi+0x7C] \n " 
		"mov byte ptr [esp+0xA4],0x3 \n " 
	);
	__asm__ (
		"call 4220592 \n " 
		"mov edi,0x10 \n " 
		"cmp dword ptr [esp+0x8C],edi \n " 
		"jb 8263213 \n " 
		"mov ecx,dword ptr [esp+0x78] \n " 
		"push ecx \n " 
	);
	__asm__ (
		"call 9800288 \n " 
		"add esp,0x4 \n " 
		"cmp dword ptr [esp+0x54],edi \n " 
		"mov dword ptr [esp+0x8C],ebp \n " 
		"mov dword ptr [esp+0x88],ebx \n " 
		"mov byte ptr [esp+0x78],bl \n " 
		"jb 8263250 \n " 
		"mov edx,dword ptr [esp+0x40] \n " 
		"push edx \n " 
	);
	__asm__ (
		"call 9800288 \n " 
		"add esp,0x4 \n " 
		"mov dword ptr [esp+0x98],0xFFFFFFFF \n " 
		"cmp dword ptr [esp+0x70],edi \n " 
		"mov dword ptr [esp+0x54],ebp \n " 
		"mov dword ptr [esp+0x50],ebx \n " 
		"mov byte ptr [esp+0x40],bl \n " 
		"jb 8263292 \n " 
		"mov eax,dword ptr [esp+0x5C] \n " 
		"push eax \n " 
	);
	__asm__ (
		"call 9800288 \n " 
		"add esp,0x4 \n " 
		"cmp dword ptr [esi+0x90],ebx \n " 
		"je 8263649 \n " 
		"cmp dword ptr [esi+0x94],0x10 \n " 
		"jb 8263321 \n " 
		"mov eax,dword ptr [esi+0x80] \n " 
		"jmp 8263327 \n " 
		"lea eax,dword ptr [esi+0x80] \n " 
		"mov ecx,dword ptr [esp+0x18] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"push eax \n " 
		"mov eax,dword ptr [edx+0x54] \n " 
		"call eax \n " 
		"lea ecx,dword ptr [esi+0x2C] \n " 
		"push ecx \n " 
		"mov eax,0x10BE670 \n " 
	);
	__asm__ (
		"call 4428096 \n " 
		"mov edx,dword ptr [esp+0x14] \n " 
		"cmp byte ptr [edx+0x10],bl \n " 
		"je 8263381 \n " 
		"lea eax,dword ptr [esp+0x34] \n " 
		"push eax \n " 
		"mov eax,esi \n " 
	);
	__asm__ (
		"call 8250400 \n " 
		"or dword ptr [esp+0x10],0x1 \n " 
		"jmp 8263397 \n " 
		"lea ecx,dword ptr [esp+0x2C] \n " 
		"push ecx \n " 
		"push esi \n " 
	);
	__asm__ (
		"call 8249888 \n " 
		"or dword ptr [esp+0x10],0x2 \n " 
		"mov edi,dword ptr [eax+0x4] \n " 
		"cmp edi,ebx \n " 
		"mov ebp,dword ptr [eax] \n " 
		"mov dword ptr [esp+0x24],ebp \n " 
		"mov dword ptr [esp+0x28],edi \n " 
		"je 8263426 \n " 
		"lea edx,dword ptr [edi+0x4] \n " 
		"mov eax,0x1 \n " 
		"lock xadd dword ptr [edx],eax \n " 
		"mov dword ptr [esp+0x98],0x5 \n " 
		"test byte ptr [esp+0x10],0x2 \n " 
		"je 8263499 \n " 
		"mov esi,dword ptr [esp+0x30] \n " 
		"and dword ptr [esp+0x10],0xFFFFFFFD \n " 
		"cmp esi,ebx \n " 
		"je 8263499 \n " 
		"lea ecx,dword ptr [esi+0x4] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne 8263499 \n " 
		"mov eax,dword ptr [esi] \n " 
		"mov edx,dword ptr [eax+0x4] \n " 
		"mov ecx,esi \n " 
		"call edx \n " 
		"lea eax,dword ptr [esi+0x8] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne 8263499 \n " 
		"mov edx,dword ptr [esi] \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"mov ecx,esi \n " 
		"call eax \n " 
		"mov byte ptr [esp+0x98],0x6 \n " 
		"test byte ptr [esp+0x10],0x1 \n " 
		"je 8263569 \n " 
		"mov esi,dword ptr [esp+0x38] \n " 
		"and dword ptr [esp+0x10],0xFFFFFFFE \n " 
		"cmp esi,ebx \n " 
		"je 8263569 \n " 
		"lea ecx,dword ptr [esi+0x4] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne 8263569 \n " 
		"mov eax,dword ptr [esi] \n " 
		"mov edx,dword ptr [eax+0x4] \n " 
		"mov ecx,esi \n " 
		"call edx \n " 
		"lea eax,dword ptr [esi+0x8] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne 8263569 \n " 
		"mov edx,dword ptr [esi] \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"mov ecx,esi \n " 
		"call eax \n " 
		"cmp ebp,ebx \n " 
		"je 8263592 \n " 
		"mov eax,dword ptr [esp+0x14] \n " 
		"mov edx,dword ptr [ebp] \n " 
		"mov edx,dword ptr [edx+0x10] \n " 
		"push ebx \n " 
		"add eax,0x1C \n " 
		"push eax \n " 
		"mov ecx,ebp \n " 
		"call edx \n " 
		"cmp edi,ebx \n " 
		"mov dword ptr [esp+0x98],0xFFFFFFFF \n " 
		"je 8263649 \n " 
		"lea eax,dword ptr [edi+0x4] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne 8263649 \n " 
		"mov edx,dword ptr [edi] \n " 
		"mov eax,dword ptr [edx+0x4] \n " 
		"mov ecx,edi \n " 
		"call eax \n " 
		"lea ecx,dword ptr [edi+0x8] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne 8263649 \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x8] \n " 
		"mov ecx,edi \n " 
		"call edx \n " 
		"lea edx,dword ptr [esp+0x14] \n " 
	);
	__asm__ (
		"call 8278768 \n " 
		"mov eax,dword ptr [esp+0x20] \n " 
		"cmp dword ptr [esp+0x14],eax \n " 
		"jne 8262928 \n " 
		"EXITCAMERA: \n"
		"mov ecx,dword ptr [esp+0x90] \n " 
		"pop edi \n " 
		"pop esi \n " 
		"pop ebp \n " 
		"mov dword ptr [fs:0x0],ecx \n " 
		"pop ebx \n " 
		"add esp,0x8C \n " 
		"ret 0x8 \n " 
	);

}	

void LowResolutionGeonometricCamera()
{
	__asm__
	(
		"push 0xFFFFFFFF \n " 
		"push 0xBBDB11 \n " 
		"mov eax,dword ptr [fs:0x0] \n " 
		"push eax \n " 
		"mov dword ptr [fs:0x0],esp \n " 
		"sub esp,0x98 \n " 
		"push ebx \n " 
		"push ebp \n " 
		"push esi \n " 
		"xor ebx,ebx \n " 
		"mov esi,ecx \n " 
		"mov dword ptr [esp+0xC],ebx \n " 
		"cmp dword ptr [esi+0x8],ebx \n " 
		"push edi \n " 
		"je EXITLOWCAMERA \n " 
		"mov eax,dword ptr [0x10A6438] \n " 
		"cmp eax,ebx \n " 
		"je LABEL9 \n " 
		"mov eax,dword ptr [eax+0x4] \n " 
		"mov dword ptr [esp+0x18],eax \n " 
		"jmp LABEL10 \n " 
		"LABEL9: \n"
		"mov dword ptr [esp+0x18],ebx \n " 
	);
	__asm__ (
		"LABEL10: \n"
		"call 4396432 \n " 
		"mov edi,eax \n " 
		"mov edx,dword ptr [edi] \n " 
		//"mov eax,dword ptr [edx+0x34] \n " 
		"mov ecx,edi \n " 
		"mov dword ptr [esp+0x48],edi \n " 
		"lea eax, [ecx+0x1C] \n"
		//"push ecx \n " 
		//"pop eax \n " 
		"push 0xE15DC0 \n " 
		//"mov edx,dword ptr [eax] \n " 
		"mov ecx,eax \n " 
		//"mov eax,dword ptr [edx+0x4C] \n " 
		"mov dword ptr [esp+0x20],esp \n " 
		"call %[SearchIndexWithString] \n " 
		"mov edx,dword ptr [edi] \n " 
		"mov dword ptr [esp+0x20],eax \n " 
		"push eax \n " 
		"mov eax,dword ptr [edx+0x4C] \n " 
		"mov ecx,edi \n " 
		"call eax \n " 
		"mov edi,dword ptr [esp+0xBC] \n " 
		"mov ecx,dword ptr [esp+0xC4] \n " 
		"mov edx,dword ptr [esp+0xC0] \n " 
		"cmp edi,0x2 \n " 
		"sete al \n " 
		"mov byte ptr [esp+0x40],al \n " 
		"push eax \n " 
		"push ecx \n " 
		"mov ecx,dword ptr [esp+0xC0] \n " 
		"push edx \n " 
		:
		: [SearchIndexWithString] "i" (SearchIndexWithString)
		: "memory"
	);
	__asm__ (
		"call 8268240 \n " 
		"mov esi,dword ptr [esi+0x4] \n " 
		"mov eax,edi \n " 
		"and eax,0x30 \n " 
		"mov dword ptr [esp+0x4C],eax \n " 
		"mov eax,edi \n " 
		"and eax,0xC \n " 
		"mov dword ptr [esp+0x44],eax \n " 
		"mov eax,dword ptr [esi] \n " 
		"cmp eax,esi \n " 
		"mov dword ptr [esp+0x1C],esi \n " 
		"mov dword ptr [esp+0x14],eax \n " 
		"je 8266109 \n " 
		"jmp LABEL11 \n " 
		"mov eax,dword ptr [esp+0x14] \n " 
		"LABEL11: \n"
		"mov esi,dword ptr [eax+0x14] \n " 
		"cmp dword ptr [esi+0x5C],0x0 \n " 
		"mov ebp,0xF \n " 
		"jge 8265080 \n " 
		"push 0xB \n " 
		"push 0xE3F3A0 \n " 
		"lea ecx,dword ptr [esp+0x2C] \n " 
		"mov dword ptr [esp+0x44],ebp \n " 
		"mov dword ptr [esp+0x40],0x0 \n " 
		"mov byte ptr [esp+0x30],0x0 \n " 
	);
	__asm__ (
		"call 4221408 \n " 
		"mov edx,dword ptr [esp+0x20] \n " 
		"lea eax,dword ptr [esp+0x24] \n " 
		"push eax \n " 
		"lea ecx,dword ptr [esi+0x10] \n " 
		"push ecx \n " 
		"push edx \n " 
		"mov dword ptr [esp+0xBC],0x0 \n " 
	);
	__asm__ (
		"call 4384320 \n " 
		"mov dword ptr [esp+0xB0],0xFFFFFFFF \n " 
		"cmp dword ptr [esp+0x3C],0x10 \n " 
		"mov dword ptr [esi+0x5C],eax \n " 
		"jb 8265080 \n " 
		"mov eax,dword ptr [esp+0x28] \n " 
		"push eax \n " 
	);
	__asm__ (
		"call 9800288 \n " 
		"add esp,0x4 \n " 
		"test edi,edi \n " 
		"je 8265116 \n " 
		"cmp edi,0x2 \n " 
		"je 8265116 \n " 
		"mov eax,dword ptr [esi+0x5C] \n " 
		"mov ecx,dword ptr [esp+0x4C] \n " 
		"test ecx,eax \n " 
		"je 8266086 \n " 
		"mov edx,dword ptr [esp+0x44] \n " 
		"test edx,eax \n " 
		"je 8266086 \n " 
		"cmp dword ptr [esi+0x28],0x10 \n " 
		"lea edi,dword ptr [esi+0x10] \n " 
		"jb 8265130 \n " 
		"mov eax,dword ptr [edi+0x4] \n " 
		"jmp 8265133 \n " 
		"lea eax,dword ptr [edi+0x4] \n " 
		"mov ecx,dword ptr [esp+0x48] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"push eax \n " 
		"mov eax,dword ptr [edx+0x54] \n " 
		"call eax \n " 
		"cmp dword ptr [esi+0x54],0x0 \n " 
		"jne 8265688 \n " 
		"cmp dword ptr [esp+0x18],0x0 \n " 
		"je 8265357 \n " 
		"push 0x9 \n " 
		"push 0xE3F3BC \n " 
		"lea ecx,dword ptr [esp+0x70] \n " 
		"mov dword ptr [esp+0x88],ebp \n " 
		"mov dword ptr [esp+0x84],0x0 \n " 
		"mov byte ptr [esp+0x74],0x0 \n " 
	);
	__asm__ (
		"call 4221408 \n " 
		"mov dword ptr [esp+0xB0],0x1 \n " 
		"push 0xB \n " 
		"or ebx,0x1 \n " 
		"push 0xE3F3C8 \n " 
		"lea ecx,dword ptr [esp+0x2C] \n " 
		"mov dword ptr [esp+0x18],ebx \n " 
		"mov dword ptr [esp+0x44],ebp \n " 
		"mov dword ptr [esp+0x40],0x0 \n " 
		"mov byte ptr [esp+0x30],0x0 \n " 
	);
	__asm__ (
		"call 4221408 \n " 
		"mov eax,dword ptr [esp+0x20] \n " 
		"lea ecx,dword ptr [esp+0x68] \n " 
		"push ecx \n " 
		"lea edx,dword ptr [esp+0x28] \n " 
		"push edx \n " 
		"push edi \n " 
		"mov dword ptr [esp+0xBC],0x2 \n " 
		"or ebx,0x2 \n " 
		"push eax \n " 
		"lea edi,dword ptr [esp+0x9C] \n " 
		"mov dword ptr [esp+0x20],ebx \n " 
	);
	__asm__ (
		"call 4384832 \n " 
		"mov ecx,dword ptr [esp+0x18] \n " 
		"mov dword ptr [esp+0xB0],0x3 \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov edx,dword ptr [edx+0x38] \n " 
		"push eax \n " 
		"lea eax,dword ptr [esp+0x64] \n " 
		"or ebx,0x4 \n " 
		"push eax \n " 
		"mov dword ptr [esp+0x18],ebx \n " 
		"call edx \n " 
		"or ebx,0x8 \n " 
		"mov dword ptr [esp+0xB0],0x4 \n " 
		"mov dword ptr [esp+0x10],ebx \n " 
		"jmp 8265367 \n " 
		"mov eax,dword ptr [esp+0xB8] \n " 
		"add eax,0x74 \n " 
		"mov ecx,dword ptr [eax] \n " 
		"mov dword ptr [esi+0x54],ecx \n " 
		"mov ebp,dword ptr [eax+0x4] \n " 
		"cmp ebp,dword ptr [esi+0x58] \n " 
		"je 8265448 \n " 
		"test ebp,ebp \n " 
		"je 8265396 \n " 
		"lea edx,dword ptr [ebp+0x4] \n " 
		"mov eax,0x1 \n " 
		"lock xadd dword ptr [edx],eax \n " 
		"mov edi,dword ptr [esi+0x58] \n " 
		"test edi,edi \n " 
		"je 8265445 \n " 
		"lea ecx,dword ptr [edi+0x4] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne 8265445 \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x4] \n " 
		"mov ecx,edi \n " 
		"call edx \n " 
		"lea eax,dword ptr [edi+0x8] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne 8265445 \n " 
		"mov edx,dword ptr [edi] \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"mov ecx,edi \n " 
		"call eax \n " 
		"mov dword ptr [esi+0x58],ebp \n " 
		"test bl,0x8 \n " 
		"mov dword ptr [esp+0xB0],0x3 \n " 
		"je 8265521 \n " 
		"mov edi,dword ptr [esp+0x64] \n " 
		"and ebx,0xFFFFFFF7 \n " 
		"test edi,edi \n " 
		"mov dword ptr [esp+0x10],ebx \n " 
		"je 8265521 \n " 
		"lea ecx,dword ptr [edi+0x4] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne 8265521 \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x4] \n " 
		"mov ecx,edi \n " 
		"call edx \n " 
		"lea eax,dword ptr [edi+0x8] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne 8265521 \n " 
		"mov edx,dword ptr [edi] \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"mov ecx,edi \n " 
		"call eax \n " 
		"test bl,0x4 \n " 
		"je 8265589 \n " 
		"and ebx,0xFFFFFFFB \n " 
		"cmp dword ptr [esp+0xA4],0x10 \n " 
		"mov dword ptr [esp+0x10],ebx \n " 
		"jb 8265559 \n " 
		"mov ecx,dword ptr [esp+0x90] \n " 
		"push ecx \n " 
	);
	__asm__ (
		"call 9800288 \n " 
		"add esp,0x4 \n " 
		"mov dword ptr [esp+0xA4],0xF \n " 
		"mov dword ptr [esp+0xA0],0x0 \n " 
		"mov byte ptr [esp+0x90],0x0 \n " 
		"test bl,0x2 \n " 
		"je 8265642 \n " 
		"and ebx,0xFFFFFFFD \n " 
		"cmp dword ptr [esp+0x3C],0x10 \n " 
		"mov dword ptr [esp+0x10],ebx \n " 
		"jb 8265621 \n " 
		"mov edx,dword ptr [esp+0x28] \n " 
		"push edx \n " 
	);
	__asm__ (
		"call 9800288 \n " 
		"add esp,0x4 \n " 
		"mov dword ptr [esp+0x3C],0xF \n " 
		"mov dword ptr [esp+0x38],0x0 \n " 
		"mov byte ptr [esp+0x28],0x0 \n " 
		"test bl,0x1 \n " 
		"mov dword ptr [esp+0xB0],0xFFFFFFFF \n " 
		"je 8265688 \n " 
		"and ebx,0xFFFFFFFE \n " 
		"cmp dword ptr [esp+0x80],0x10 \n " 
		"mov dword ptr [esp+0x10],ebx \n " 
		"jb 8265688 \n " 
		"mov eax,dword ptr [esp+0x6C] \n " 
		"push eax \n " 
	);
	__asm__ (
		"call 9800288 \n " 
		"add esp,0x4 \n " 
		"lea eax,dword ptr [esi+0x54] \n " 
		"push eax \n " 
		"mov eax,0x10BEDC0 \n " 
	);
	__asm__ (
		"call 4428096 \n " 
		"lea ecx,dword ptr [esi+0x2C] \n " 
		"push ecx \n " 
		"mov eax,0x10BE670 \n " 
	);
	__asm__ (
		"call 4428096 \n " 
		"lea edx,dword ptr [esi+0x3C] \n " 
		"push edx \n " 
		"mov eax,0x10BEC10 \n " 
	);
	__asm__ (
		"call 4428096 \n " 
		"lea eax,dword ptr [esi+0x44] \n " 
		"push eax \n " 
		"mov eax,0x10BE820 \n " 
	);
	__asm__ (
		"call 4428096 \n " 
		"lea ecx,dword ptr [esi+0x4C] \n " 
		"push ecx \n " 
		"mov eax,0x10BE8F8 \n " 
	);
	__asm__ (
		"call 4428096 \n " 
		"lea edx,dword ptr [esi+0x34] \n " 
		"push edx \n " 
		"mov eax,0x10BEAA8 \n " 
	);
	__asm__ (
		"call 4428096 \n " 
		"mov eax,dword ptr [esp+0x14] \n " 
		"cmp byte ptr [eax+0x10],0x0 \n " 
		"je 8265802 \n " 
		"lea ecx,dword ptr [esp+0x84] \n " 
		"push ecx \n " 
		"mov eax,esi \n " 
	);
	__asm__ (
		"call 8250400 \n " 
		"or ebx,0x10 \n " 
		"jmp 8265816 \n " 
		"lea edx,dword ptr [esp+0x50] \n " 
		"push edx \n " 
		"push esi \n " 
	);
	__asm__ (
		"call 8249888 \n " 
		"or ebx,0x20 \n " 
		"mov edi,dword ptr [eax+0x4] \n " 
		"test edi,edi \n " 
		"mov ebp,dword ptr [eax] \n " 
		"mov dword ptr [esp+0x10],ebx \n " 
		"mov dword ptr [esp+0x58],ebp \n " 
		"mov dword ptr [esp+0x5C],edi \n " 
		"je 8265849 \n " 
		"lea eax,dword ptr [edi+0x4] \n " 
		"mov ecx,0x1 \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"test bl,0x20 \n " 
		"mov dword ptr [esp+0xB0],0x6 \n " 
		"je 8265922 \n " 
		"mov esi,dword ptr [esp+0x54] \n " 
		"and ebx,0xFFFFFFDF \n " 
		"test esi,esi \n " 
		"mov dword ptr [esp+0x10],ebx \n " 
		"je 8265922 \n " 
		"lea edx,dword ptr [esi+0x4] \n " 
		"or eax,0xFFFFFFFF \n " 
		"lock xadd dword ptr [edx],eax \n " 
		"jne 8265922 \n " 
		"mov edx,dword ptr [esi] \n " 
		"mov eax,dword ptr [edx+0x4] \n " 
		"mov ecx,esi \n " 
		"call eax \n " 
		"lea ecx,dword ptr [esi+0x8] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne 8265922 \n " 
		"mov eax,dword ptr [esi] \n " 
		"mov edx,dword ptr [eax+0x8] \n " 
		"mov ecx,esi \n " 
		"call edx \n " 
		"test bl,0x10 \n " 
		"mov byte ptr [esp+0xB0],0x7 \n " 
		"je 8265995 \n " 
		"mov esi,dword ptr [esp+0x88] \n " 
		"and ebx,0xFFFFFFEF \n " 
		"test esi,esi \n " 
		"mov dword ptr [esp+0x10],ebx \n " 
		"je 8265995 \n " 
		"lea eax,dword ptr [esi+0x4] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne 8265995 \n " 
		"mov edx,dword ptr [esi] \n " 
		"mov eax,dword ptr [edx+0x4] \n " 
		"mov ecx,esi \n " 
		"call eax \n " 
		"lea ecx,dword ptr [esi+0x8] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne 8265995 \n " 
		"mov eax,dword ptr [esi] \n " 
		"mov edx,dword ptr [eax+0x8] \n " 
		"mov ecx,esi \n " 
		"call edx \n " 
		"test ebp,ebp \n " 
		"je 8266022 \n " 
		"mov ecx,dword ptr [esp+0x40] \n " 
		"mov edx,dword ptr [esp+0x14] \n " 
		"mov eax,dword ptr [ebp] \n " 
		"mov eax,dword ptr [eax+0x10] \n " 
		"push ecx \n " 
		"add edx,0x1C \n " 
		"push edx \n " 
		"mov ecx,ebp \n " 
		"call eax \n " 
		"test edi,edi \n " 
		"mov dword ptr [esp+0xB0],0xFFFFFFFF \n " 
		"je 8266079 \n " 
		"lea ecx,dword ptr [edi+0x4] \n " 
		"or edx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [ecx],edx \n " 
		"jne 8266079 \n " 
		"mov eax,dword ptr [edi] \n " 
		"mov edx,dword ptr [eax+0x4] \n " 
		"mov ecx,edi \n " 
		"call edx \n " 
		"lea eax,dword ptr [edi+0x8] \n " 
		"or ecx,0xFFFFFFFF \n " 
		"lock xadd dword ptr [eax],ecx \n " 
		"jne 8266079 \n " 
		"mov edx,dword ptr [edi] \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"mov ecx,edi \n " 
		"call eax \n " 
		"mov edi,dword ptr [esp+0xBC] \n " 
		"lea edx,dword ptr [esp+0x14] \n " 
	);
	__asm__ (
		"call 8278768 \n " 
		"mov ecx,dword ptr [esp+0x1C] \n " 
		"cmp dword ptr [esp+0x14],ecx \n " 
		"jne 8264965 \n " 
		"EXITLOWCAMERA: \n"
		"mov ecx,dword ptr [esp+0xA8] \n " 
		"pop edi \n " 
		"pop esi \n " 
		"pop ebp \n " 
		"mov dword ptr [fs:0x0],ecx \n " 
		"pop ebx \n " 
		"add esp,0xA4 \n " 
		"ret 0x10 \n " 
);
	
}