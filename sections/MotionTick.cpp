#include "include/funcDefs.h"
#include "include/global_func_table.h"
#include <stdlib.h>

void AirMotionTick()
{
	__asm__
	(
		" \n " //!Source: forgedalliance.exe (base 0x00400000 - 4194304)
		" \n " //!; Internal calls outside selected range (before)
		"_0x679290 = 0x0067A290 \n " //!; 0x00679290
		"_0x4EC590 = 0x004ED590 \n " //!; 0x004EC590
		"_0x452FC0=  0x00453FC0 \n " //!; 
		"_0x452D40=  0x00453D40 \n " //!; 
		"_0x44FB90= 0x00450B90 \n " //!; 
		"_0x5B1C90= 0x005B2C90 \n " //!; 
		"_0x6BC820= 0x006BD820 \n " //!; 
		"_0x50AD80= 0x0050BD80 \n " //!; 
		"_0x67F450= 0x00680450 \n " //!; 
		"_0x40E9F0= 0x0040F9F0 \n " //!; 
		"_0x6BC8E0= 0x006BD8E0 \n " //!; 
		"_0x6AC940= 0x006AD940 \n " //!; 
		"_0x62B780= 0x0062C780 \n " //!; 
		"_0x678880= 0x00679880 \n " //!; 
		"_0x50B010= 0x0050C010 \n " //!; 
		"_0x6AB6F0= 0x006AC6F0 \n " //!; 
		"_0x50ACC0= 0x0050BCC0 \n " //!; 
		"_0x5413C0= 0x005423C0 \n " //!; 
		"_0x6A8C20= 0x006A9C20 \n " //!; 
		"_0x4F0A50= 0x004F1A50 \n " //!; 
		"_0x44F7E0= 0x004507E0 \n " //!; 
		"_0x62D620= 0x0062E620 \n " //!; 
		"_0x405550= 0x00406550 \n " //!; 
		"_0x67B050= 0x0067C050 \n " //!; 
		"_0x6AB760= 0x006AC760 \n " //!; 
		"_0x67AFF0= 0x0067BFF0 \n " //!; 
		"_0x6B8F70= 0x006B9F70 \n " //!; 
		"_0x5D5670= 0x005D6670 \n " //!; 
		"_0x5E2A10= 0x005E3A10 \n " //!; 
		"_0x6BCDB0= 0x006BDDB0 \n " //!; 
		"_0x6BE6B0= 0x006BF6B0 \n " //!; 
		"_0x6B8FB0= 0x006B9FB0 \n " //!; 
		"_0x6B8F30= 0x006B9F30 \n " //!; 
		"_0x6978D0= 0x006988D0 \n " //!; 
		"_0x6BC460= 0x006BD460 \n " //!; 
		"_0x697750= 0x00698750 \n " //!;
		"_0x747460= 0x00748460 \n "
		" \n " //!Start of selected range: 0x006BEE50
		"push 0xFFFFFFFF \n " 
		"push 0xBB99F0 \n " 
		"mov eax,dword ptr [fs:0x0] \n " 
		"push eax \n " 
		"mov dword ptr fs:[0x0],esp \n " 
		"sub esp,0xC8 \n " 
		"push ebx \n " 
		"push ebp \n " 
		"mov ebp,dword ptr [esp+0xE0] \n " 
		"mov ecx,dword ptr [ebp] \n " 
		"mov eax,dword ptr [ecx] \n " 
		//"mov edx,dword ptr [eax+0x1C] \n " 
		"push esi \n " 
		"push edi \n " 
		"mov edi,dword ptr [esp+0xEC] \n " 
		//"call edx  \n " //!=> 0x00000000 - outside range
		"mov eax, dword ptr ds:[ecx+0x74] \n"
		"mov dword ptr [esp+0x1C],eax \n " 
		"mov eax, ecx \n" //!e1
		//"mov eax,dword ptr [ebp] \n " 
		"mov ecx,dword ptr [eax+0x150] \n " 
		"mov ecx,dword ptr [ecx+0x8CC] \n " 
		"lea esi,dword ptr [eax+0x8] \n " 
		"mov dword ptr [esp+0x48],ecx \n " 
		"call _0x679290  \n " //!; => 0x00679290 - outside range
		"mov edx,dword ptr [ebp] \n " 
		"mov ecx,dword ptr [edx+0x154] \n " 
		"mov dword ptr [esp+0x50],eax \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov al, byte ptr ds:[ecx+0x178] \n" //!e2
		//"mov edx,dword ptr [eax+0xB8] \n " 
		//"call edx  \n " //!=> 0x00000000 - outside range
		//"mov ecx,dword ptr [ebp] \n " 
		"mov ecx, edx \n" //e
		"mov byte ptr [esp+0x60],al \n " 
		"mov eax,dword ptr [ecx] \n " 
		"lea eax, ds:[ecx+0xA4] \n" //!e3
		//"mov edx,dword ptr [eax+0x18] \n " 
		//"call edx  \n " //!=> 0x00000000 - outside range
		"mov ecx,eax \n " 
		"lea eax,dword ptr [esp+0x70] \n " 
		"call _0x4EC590  \n " //!; => 0x004EC590 - outside range
		"movss xmm0,dword ptr [esp+0x90] \n " 
		"movaps xmm1,xmm0 \n " 
		"mulss xmm1,xmm0 \n " 
		"movss xmm0,dword ptr [esp+0x88] \n " 
		"movaps xmm2,xmm0 \n " 
		"mulss xmm2,xmm0 \n " 
		"push ecx \n " 
		"addss xmm1,xmm2 \n " 
		"movss dword ptr [esp],xmm1 \n " 
		"fld dword ptr ss:[esp] \n" //!e4
		"fsqrt \n"
		//"call _0x452FC0  \n " //!; => 0x00452FC0 - outside range
		"fst dword ptr [esp+0x24] \n " 
		"fldz  \n " 
		"add esp,0x4 \n " 
		"fxch st(1) \n " 
		"fcomip st(1) \n " 
		"fstp st(0) \n " 
		"jbe L0xABEL_0x006BEF60  \n " //!; => 0x006BEF60
		"movss xmm0,dword ptr [0xDFEC20] \n " 
		"divss xmm0,dword ptr [esp+0x20] \n " 
		"movss xmm1,dword ptr [esp+0x88] \n " 
		"movss xmm2,dword ptr [esp+0x90] \n " 
		"mulss xmm1,xmm0 \n " 
		"movaps xmm3,xmm1 \n " 
		"movaps xmm1,xmm0 \n " 
		"mulss xmm1,dword ptr [0xE4F6E0] \n " 
		"mulss xmm2,xmm0 \n " 
		"movss dword ptr [esp+0x54],xmm3 \n " 
		"movss dword ptr [esp+0x58],xmm1 \n " 
		"movss dword ptr [esp+0x5C],xmm2 \n " 
		"jmp L0xABEL_0x006BEF75  \n " //!; => 0x006BEF75
		"L0xABEL_0x006BEF60: \n " 
		"xorps xmm0,xmm0 \n " 
		"movss dword ptr [esp+0x54],xmm0 \n " 
		"movss dword ptr [esp+0x58],xmm0 \n " 
		"movss dword ptr [esp+0x5C],xmm0 \n " 
		"L0xABEL_0x006BEF75: \n " 
		"mov eax,dword ptr [ebp] \n " 
		"lea ecx,dword ptr [eax+0x8] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov eax,dword ptr [eax+0x3C] \n " 
		"lea edx,dword ptr [esp+0xB0] \n " 
		"push edx \n " 
		"call eax  \n " //!=> 0x00000000 - outside range
		"xorps xmm0,xmm0 \n " 
		"movss dword ptr [esp+0xB4],xmm0 \n " 
		"movss xmm0,dword ptr [esp+0xB0] \n " 
		"movaps xmm1,xmm0 \n " 
		"mulss xmm1,xmm0 \n " 
		"movss xmm0,dword ptr [esp+0xB8] \n " 
		"movaps xmm2,xmm0 \n " 
		"mulss xmm2,xmm0 \n " 
		"push ecx \n " 
		"addss xmm1,xmm2 \n " 
		"movss dword ptr [esp],xmm1 \n " 
		//"call _0x452FC0  \n " //!; => 0x00452FC0 - outside range
		"fld dword ptr ss:[esp] \n" //!e5
		"fsqrt \n"
		"fstp dword ptr [esp+0x24] \n " 
		"mov ecx,dword ptr [esp+0x54] \n " 
		"fld dword ptr [edi] \n " 
		"lea eax,dword ptr [ecx+0x2C] \n " 
		"fstp dword ptr [eax] \n " 
		"lea esi,dword ptr [ecx+0x14] \n " 
		"fld dword ptr [edi+0x4] \n " 
		"add esp,0x4 \n " 
		"fstp dword ptr [eax+0x4] \n " 
		"lea ebx,dword ptr [esp+0x30] \n " 
		"fld dword ptr [edi+0x8] \n " 
		"mov ecx,edi \n " 
		"fstp dword ptr [eax+0x8] \n " 
		"mov dword ptr [esp+0x4C],eax \n " 
		"fld dword ptr [edi+0xC] \n " 
		"fstp dword ptr [eax+0xC] \n " 
		"call _0x452D40  \n " //!; => 0x00452D40 - outside range
		"movss xmm0,dword ptr [eax] \n " 
		"movss xmm1,dword ptr [eax+0x4] \n " 
		"movss xmm2,dword ptr [eax+0x8] \n " 
		"mov eax,dword ptr [esp+0x50] \n " 
		"addss xmm0,dword ptr [edi+0x10] \n " 
		"addss xmm1,dword ptr [edi+0x14] \n " 
		"addss xmm2,dword ptr [edi+0x18] \n " 
		"mov ecx,dword ptr [esp+0x1C] \n " 
		"lea esi,dword ptr [edi+0x10] \n " 
		"movss dword ptr [eax+0x20],xmm0 \n " 
		"movss dword ptr [eax+0x24],xmm1 \n " 
		"movss dword ptr [eax+0x28],xmm2 \n " 
		"fld dword ptr [esi] \n " 
		"fld dword ptr [edi+0x18] \n " 
		"sub esp,0x8 \n " 
		"cmp byte ptr [ecx+0x36A],0x0 \n " 
		"fstp dword ptr [esp+0x4] \n " 
		"mov dword ptr [esp+0x74],esi \n " 
		"fstp dword ptr [esp] \n " 
		"je L0xABEL_0x006BF065  \n " //!; => 0x006BF065
		"mov edx,dword ptr [esp+0x50] \n " 
		"mov ecx,dword ptr [edx] \n " 
		"call _0x44FB90  \n " //!; => 0x0044FB90 - outside range
		"fstp dword ptr [esp+0x40] \n " 
		"movss xmm0,dword ptr [esp+0x40] \n " 
		"jmp L0xABEL_0x006BF093  \n " //!; => 0x006BF093
		"L0xABEL_0x006BF065: \n " 
		"mov edi,dword ptr [esp+0x50] \n " 
		"mov ecx,dword ptr [edi] \n " 
		"call _0x44FB90  \n " //!; => 0x0044FB90 - outside range
		"fstp dword ptr [esp+0x18] \n " 
		"cmp byte ptr [edi+0x1534],0x0 \n " 
		"movss xmm0,dword ptr [esp+0x18] \n " 
		"je L0xABEL_0x006BF093  \n " //!; => 0x006BF093
		"movss xmm1,dword ptr [edi+0x1538] \n " 
		"comiss xmm1,xmm0 \n " 
		"jbe L0xABEL_0x006BF093  \n " //!; => 0x006BF093
		"movaps xmm0,xmm1 \n " 
		"L0xABEL_0x006BF093: \n " 
		"xorps xmm2,xmm2 \n " 
		"movss xmm1,dword ptr [ebp+0x1C] \n " 
		"subss xmm1,dword ptr [esi+0x8] \n " 
		"movss dword ptr [esp+0x40],xmm0 \n " 
		"movss xmm0,dword ptr [ebp+0x14] \n " 
		"subss xmm0,dword ptr [esi] \n " 
		"lea edi,dword ptr [ebp+0x14] \n " 
		"movss dword ptr [esp+0x28],xmm2 \n " 
		"movaps xmm2,xmm0 \n " 
		"mulss xmm2,xmm0 \n " 
		"movss dword ptr [esp+0x24],xmm0 \n " 
		"movaps xmm0,xmm1 \n " 
		"mulss xmm0,xmm1 \n " 
		"push ecx \n " 
		"addss xmm2,xmm0 \n " 
		"movss dword ptr [esp+0x30],xmm1 \n " 
		"movss dword ptr [esp],xmm2 \n " 
		//"call _0x452FC0  \n " //!; => 0x00452FC0 - outside range
		"fld dword ptr ss:[esp] \n" //!e5
		"fsqrt \n"
		"fstp dword ptr [esp+0x48] \n " 
		"movss xmm1,dword ptr [esp+0x48] \n " 
		"add esp,0x4 \n " 
		"cmp byte ptr [ebp+0x8C],0x0 \n " 
		"je L0xABEL_0x006BF102  \n " //!; => 0x006BF102
		"mov eax,dword ptr [ebp] \n " 
		"fld dword ptr [eax+0x594] \n " 
		"jmp L0xABEL_0x006BF124  \n " //!; => 0x006BF124
		"L0xABEL_0x006BF102: \n " 
		"mov ecx,dword ptr [ebp] \n " 
		"movss xmm0,dword ptr [ecx+0x594] \n " 
		"comiss xmm1,xmm0 \n " 
		"jbe L0xABEL_0x006BF11A  \n " //!; => 0x006BF11A
		"movss dword ptr [esp+0x18],xmm0 \n " 
		"jmp L0xABEL_0x006BF120  \n " //!; => 0x006BF120
		"L0xABEL_0x006BF11A: \n " 
		"movss dword ptr [esp+0x18],xmm1 \n " 
		"L0xABEL_0x006BF120: \n " 
		"fld dword ptr [esp+0x18] \n " 
		"L0xABEL_0x006BF124: \n " 
		"push ecx \n " 
		"lea esi,dword ptr [esp+0x28] \n " 
		"fstp dword ptr [esp] \n " 
		"call _0x5B1C90  \n " //!; => 0x005B1C90 - outside range
		"mov ecx,dword ptr [ebp] \n " 
		//"mov edx,dword ptr [ecx] \n " 
		//"mov eax,dword ptr [edx+0x28] \n " 
		"add esp,0x4 \n " 
		"mov byte ptr [esp+0x17],0x0 \n " 
		"mov al, byte ptr ds:[ecx+0xA1] \n"
		//"call eax  \n " //!=> 0x00000000 - outside range
		"test al,al \n " 
		"mov esi,0x10 \n " 
		"je L0xABEL_0x006BF3C5  \n " //!; => 0x006BF3C5
		"mov ecx,dword ptr [ebp] \n " 
		"cmp dword ptr [ecx+0x120],esi \n " 
		"je L0xABEL_0x006BF16A  \n " //!; => 0x006BF16A
		"mov eax,ebp \n " 
		"call _0x6BC820  \n " //!; => 0x006BC820 - outside range
		"test al,al \n " 
		"je L0xABEL_0x006BF3C5  \n " //!; => 0x006BF3C5
		"L0xABEL_0x006BF16A: \n " 
		"mov edx,dword ptr [ebp] \n " 
		"mov eax,dword ptr [edx+0x120] \n " 
		"add edx,0x8 \n " 
		"cmp eax,esi \n " 
		"mov dword ptr [edx+0x118],esi \n " 
		"je L0xABEL_0x006BF1B6  \n " //!; => 0x006BF1B6
		"cmp eax,0x20 \n " 
		"ja L0xABEL_0x006BF18C  \n " //!; => 0x006BF18C
		"call _0x50AD80  \n " //!; => 0x0050AD80 - outside range
		"jmp L0xABEL_0x006BF191  \n " //!; => 0x006BF191
		"L0xABEL_0x006BF18C: \n " 
		"mov eax,0xE00779 \n " 
		"L0xABEL_0x006BF191: \n " 
		"mov dword ptr [esp+0x20],eax \n " 
		"mov eax,esi \n " 
		"call _0x50AD80  \n " //!; => 0x0050AD80 - outside range
		"mov dword ptr [esp+0x40],eax \n " 
		"lea eax,dword ptr [esp+0x20] \n " 
		"push eax \n " 
		"lea ecx,dword ptr [esp+0x44] \n " 
		"push ecx \n " 
		"push 0xE2747C \n " 
		"mov ecx,edx \n " 
		"call _0x67F450  \n " //!; => 0x0067F450 - outside range
		"L0xABEL_0x006BF1B6: \n " 
		"mov eax,dword ptr [ebp+0x78] \n " 
		"cmp eax,0x2 \n " 
		"je L0xABEL_0x006BF1E2  \n " //!; => 0x006BF1E2
		"mov ecx,dword ptr [ebp] \n " 
		"lea edx,dword ptr [eax*0x4+0xF58380] \n " 
		"push edx \n " 
		"push 0xF58388 \n " 
		"push 0xE2AA8C \n " 
		"add ecx,0x8 \n " 
		"mov dword ptr [ebp+0x78],0x2 \n " 
		"call _0x67F450  \n " //!; => 0x0067F450 - outside range
		"L0xABEL_0x006BF1E2: \n " 
		"mov eax,dword ptr [ebp] \n " 
		"movss xmm0,dword ptr [0xF3D21C] \n " 
		"movss xmm1,dword ptr [0xF3D220] \n " 
		"mov ecx,dword ptr [eax+0x150] \n " 
		"mov eax,dword ptr [esp+0x50] \n " 
		"movss xmm2,dword ptr [0xF3D224] \n " 
		"mov esi,dword ptr [ecx+0x904] \n " 
		"movss dword ptr [esp+0x94],xmm0 \n " 
		"movss dword ptr [esp+0x98],xmm1 \n " 
		"movss dword ptr [esp+0xA0],xmm0 \n " 
		"movss xmm0,dword ptr [eax+0x10] \n " 
		"movss dword ptr [esp+0xA4],xmm1 \n " 
		"movss xmm1,dword ptr [0xDFE5AC] \n " 
		"comiss xmm0,xmm1 \n " 
		"movss dword ptr [esp+0x9C],xmm2 \n " 
		"movss dword ptr [esp+0xA8],xmm2 \n " 
		"jbe L0xABEL_0x006BF258  \n " //!; => 0x006BF258
		"movaps xmm0,xmm1 \n " 
		"L0xABEL_0x006BF258: \n " 
		"movss xmm2,dword ptr [0xE4F6EC] \n " 
		"comiss xmm0,xmm2 \n " 
		"movss dword ptr [esp+0x18],xmm2 \n " 
		"jbe L0xABEL_0x006BF271  \n " //!; => 0x006BF271
		"movss dword ptr [esp+0x18],xmm0 \n " 
		"L0xABEL_0x006BF271: \n " 
		"movss xmm0,dword ptr [eax+0xC] \n " 
		"comiss xmm0,xmm1 \n " 
		"jbe L0xABEL_0x006BF27E  \n " //!; => 0x006BF27E
		"movaps xmm0,xmm1 \n " 
		"L0xABEL_0x006BF27E: \n " 
		"comiss xmm0,xmm2 \n " 
		"movss dword ptr [esp+0x1C],xmm2 \n " 
		"jbe L0xABEL_0x006BF28F  \n " //!; => 0x006BF28F
		"movss dword ptr [esp+0x1C],xmm0 \n " 
		"L0xABEL_0x006BF28F: \n " 
		"movss xmm0,dword ptr [eax+0x8] \n " 
		"comiss xmm0,xmm1 \n " 
		"ja L0xABEL_0x006BF29C  \n " //!; => 0x006BF29C
		"movaps xmm1,xmm0 \n " 
		"L0xABEL_0x006BF29C: \n " 
		"comiss xmm1,xmm2 \n " 
		"movss dword ptr [esp+0x48],xmm2 \n " 
		"jbe L0xABEL_0x006BF2AD  \n " //!; => 0x006BF2AD
		"movss dword ptr [esp+0x48],xmm1 \n " 
		"L0xABEL_0x006BF2AD: \n " 
		"fld dword ptr [esp+0x48] \n " 
		"mov edx,esi \n " 
		"fchs  \n " 
		"fstp dword ptr [esp+0x20] \n " 
		"call _0x40E9F0  \n " //!; => 0x0040E9F0 - outside range
		"test eax,eax \n " 
		"mov dword ptr [esp+0x60],eax \n " 
		"fild dword ptr [esp+0x60] \n " 
		"jge L0xABEL_0x006BF2D0  \n " //!; => 0x006BF2D0
		"fadd dword ptr [0xE4F710] \n " 
		"L0xABEL_0x006BF2D0: \n " 
		"fld dword ptr [esp+0x48] \n " 
		"mov edx,esi \n " 
		"fld dword ptr [esp+0x20] \n " 
		"fsub st(1) \n " 
		"fxch st(2) \n " 
		"fmulp st(1) \n " 
		"fmul dword ptr [0xE4F7B0] \n " 
		"faddp st(1) \n " 
		"fstp dword ptr [esp+0x30] \n " 
		"fld dword ptr [esp+0x1C] \n " 
		"fchs  \n " 
		"fstp dword ptr [esp+0x20] \n " 
		"call _0x40E9F0  \n " //!; => 0x0040E9F0 - outside range
		"test eax,eax \n " 
		"mov dword ptr [esp+0x60],eax \n " 
		"fild dword ptr [esp+0x60] \n " 
		"jge L0xABEL_0x006BF30D  \n " //!; => 0x006BF30D
		"fadd dword ptr [0xE4F710] \n " 
		"L0xABEL_0x006BF30D: \n " 
		"fld dword ptr [esp+0x1C] \n " 
		"mov edx,esi \n " 
		"fld dword ptr [esp+0x20] \n " 
		"fsub st(1) \n " 
		"fxch st(2) \n " 
		"fmulp st(1) \n " 
		"fmul dword ptr [0xE4F7B0] \n " 
		"faddp st(1) \n " 
		"fstp dword ptr [esp+0x34] \n " 
		"fld dword ptr [esp+0x18] \n " 
		"fchs  \n " 
		"fstp dword ptr [esp+0x20] \n " 
		"call _0x40E9F0  \n " //!; => 0x0040E9F0 - outside range
		"test eax,eax \n " 
		"mov dword ptr [esp+0x60],eax \n " 
		"fild dword ptr [esp+0x60] \n " 
		"jge L0xABEL_0x006BF34A  \n " //!; => 0x006BF34A
		"fadd dword ptr [0xE4F710] \n " 
		"L0xABEL_0x006BF34A: \n " 
		"fld dword ptr [esp+0x18] \n " 
		"mov eax,dword ptr [esp+0x50] \n " 
		"fld dword ptr [esp+0x20] \n " 
		"mov ecx,dword ptr [esp+0x4C] \n " 
		"fsub st(1) \n " 
		"lea esi,dword ptr [esp+0x54] \n " 
		"fxch st(2) \n " 
		"lea ebx,dword ptr [esp+0x30] \n " 
		"fmulp st(1) \n " 
		"fmul dword ptr [0xE4F7B0] \n " 
		"faddp st(1) \n " 
		"fld dword ptr [esp+0x30] \n " 
		"fdiv dword ptr [eax+0x8] \n " 
		"fstp dword ptr [esp+0x54] \n " 
		"fld dword ptr [esp+0x34] \n " 
		"fdiv dword ptr [eax+0xC] \n " 
		"fstp dword ptr [esp+0x58] \n " 
		"fdiv dword ptr [eax+0x10] \n " 
		"fstp dword ptr [esp+0x5C] \n " 
		"call _0x452D40  \n " //!; => 0x00452D40 - outside range
		"movss xmm0,dword ptr [esp+0x30] \n " 
		"mov ebx,dword ptr [esp+0x50] \n " 
		"movss dword ptr [ebp+0x108],xmm0 \n " 
		"movss xmm0,dword ptr [esp+0x34] \n " 
		"movss dword ptr [ebp+0x10C],xmm0 \n " 
		"movss xmm0,dword ptr [esp+0x38] \n " 
		"movss dword ptr [ebp+0x110],xmm0 \n " 
		"jmp L0xABEL_0x006C0073  \n " //!; => 0x006C0073
		"L0xABEL_0x006BF3C5: \n " 
		"mov ecx,dword ptr [esp+0x1C] \n " 
		"movss xmm0,dword ptr [esp+0x44] \n " 
		"comiss xmm0,dword ptr [ecx+0x380] \n " 
		"jbe L0xABEL_0x006BF482  \n " //!; => 0x006BF482
		"cmp dword ptr [ebp+0x88],0x2 \n " 
		"je L0xABEL_0x006BF482  \n " //!; => 0x006BF482
		"movss xmm0,dword ptr [esp+0x24] \n " 
		"movss dword ptr [esp+0x30],xmm0 \n " 
		"movss xmm0,dword ptr [esp+0x28] \n " 
		"movss dword ptr [esp+0x34],xmm0 \n " 
		"movss xmm0,dword ptr [esp+0x2C] \n " 
		"mov esi,ebp \n " 
		"movss dword ptr [esp+0x38],xmm0 \n " 
		"call _0x6BC8E0  \n " //!; => 0x006BC8E0 - outside range
		"mov eax,dword ptr [ebp] \n " 
		"movss dword ptr [ebp+0x58],xmm0 \n " 
		"mov edx,dword ptr [eax+0x4A4] \n " 
		"and dword ptr [eax+0x4A0],0xFFFFF7FF \n " 
		"mov dword ptr [eax+0x4A4],edx \n " 
		"mov eax,dword ptr [ebp] \n " 
		"mov ecx,dword ptr [eax+0x4A4] \n " 
		"and dword ptr [eax+0x4A0],0xFFFFFBFF \n " 
		"mov dword ptr [eax+0x4A4],ecx \n " 
		"mov ecx,dword ptr [ebp] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov eax,dword ptr [edx+0x3C] \n " 
		"push 0x24 \n " 
		"call eax  \n " //!=> 0x00000000 - outside range
		"test al,al \n " 
		"je L0xABEL_0x006BF7F3  \n " //!; => 0x006BF7F3
		"mov eax,dword ptr [ebp] \n " 
		"mov ecx,dword ptr [eax+0x4A0] \n " 
		"and dword ptr [eax+0x4A4],0xFFFFFFEF \n " 
		"mov dword ptr [eax+0x4A0],ecx \n " 
		"mov esi,dword ptr [ebp] \n " 
		"call _0x6AC940  \n " //!; => 0x006AC940 - outside range
		"jmp L0xABEL_0x006BF7F3  \n " //!; => 0x006BF7F3
		"L0xABEL_0x006BF482: \n " 
		"mov eax,dword ptr [ebp+0x74] \n " 
		"test eax,eax \n " 
		"je L0xABEL_0x006BF492  \n " //!; => 0x006BF492
		"cmp eax,esi \n " 
		"mov byte ptr [esp+0x17],0x1 \n " 
		"jne L0xABEL_0x006BF497  \n " //!; => 0x006BF497
		"L0xABEL_0x006BF492: \n " 
		"mov byte ptr [esp+0x17],0x0 \n " 
		"L0xABEL_0x006BF497: \n " 
		"movss xmm0,dword ptr [ecx+0x36C] \n " 
		"mulss xmm0,dword ptr [0xDFF31C] \n " 
		"movss dword ptr [esp+0x4C],xmm0 \n " 
		"xor eax,eax \n " 
		"mov edx,0xFFFFFFFF \n " 
		"fld dword ptr [esp+0x4C] \n " 
		"frndint  \n " 
		"fld dword ptr [esp+0x4C] \n " 
		"fcomip st(1) \n " 
		"cmovb eax,edx \n " 
		"fistp dword ptr [esp+0x18] \n " 
		"add eax,dword ptr [esp+0x18] \n " 
		"cmp byte ptr [esp+0x17],0x0 \n " 
		"mov ebx,eax \n " 
		"jne L0xABEL_0x006BF685  \n " //!; => 0x006BF685
		"mov eax,dword ptr [ebp+0xAC] \n " 
		"test eax,eax \n " 
		"jle L0xABEL_0x006BF685  \n " //!; => 0x006BF685
		"test ebx,ebx \n " 
		"jle L0xABEL_0x006BF685  \n " //!; => 0x006BF685
		"mov ecx,dword ptr [ebp] \n " 
		"mov edx,dword ptr [ecx+0x150] \n " 
		"mov esi,dword ptr [edx+0x900] \n " 
		"add eax,ebx \n " 
		"cmp esi,eax \n " 
		"jle L0xABEL_0x006BF685  \n " //!; => 0x006BF685
		"movss xmm0,dword ptr [ebp+0x64] \n " 
		"ucomiss xmm0,dword ptr [0x10B6150] \n " 
		"lahf  \n " 
		"test ah,0x44 \n " 
		"jnp L0xABEL_0x006BF555  \n " //!; => 0x006BF555
		"mov edx,dword ptr [ecx] \n " 
		"mov eax,dword ptr [edx+0x3C] \n " 
		"push 0x24 \n " 
		"call eax  \n " //!=> 0x00000000 - outside range
		"test al,al \n " 
		"je L0xABEL_0x006BF544  \n " //!; => 0x006BF544
		"mov eax,dword ptr [ebp] \n " 
		"mov ecx,dword ptr [eax+0x4A0] \n " 
		"and dword ptr [eax+0x4A4],0xFFFFFFEF \n " 
		"mov dword ptr [eax+0x4A0],ecx \n " 
		"mov esi,dword ptr [ebp] \n " 
		"call _0x6AC940  \n " //!; => 0x006AC940 - outside range
		"L0xABEL_0x006BF544: \n " 
		"mov byte ptr [esp+0x17],0x1 \n " 
		"mov dword ptr [ebp+0x74],0x1 \n " 
		"jmp L0xABEL_0x006BF685  \n " //!; => 0x006BF685
		"L0xABEL_0x006BF555: \n " 
		"mov edx,dword ptr [esp+0x60] \n " 
		"xorps xmm0,xmm0 \n " 
		"push edx \n " 
		"lea eax,dword ptr [esp+0x34] \n " 
		"push eax \n " 
		"push edi \n " 
		"push ecx \n " 
		"xor ecx,ecx \n " 
		"movss dword ptr [esp+0x40],xmm0 \n " 
		"movss dword ptr [esp+0x44],xmm0 \n " 
		"movss dword ptr [esp+0x48],xmm0 \n " 
		"movss dword ptr [esp+0x4C],xmm0 \n " 
		"call _0x62B780  \n " //!; => 0x0062B780 - outside range
		"add esp,0x10 \n " 
		"test al,al \n " 
		"je L0xABEL_0x006BF661  \n " //!; => 0x006BF661
		"mov ecx,dword ptr [ebp] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov eax,dword ptr [edx+0x3C] \n " 
		"push 0x24 \n " 
		"call eax  \n " //!=> 0x00000000 - outside range
		"test al,al \n " 
		"je L0xABEL_0x006BF5BC  \n " //!; => 0x006BF5BC
		"mov eax,dword ptr [ebp] \n " 
		"mov ecx,dword ptr [eax+0x4A0] \n " 
		"and dword ptr [eax+0x4A4],0xFFFFFFEF \n " 
		"mov dword ptr [eax+0x4A0],ecx \n " 
		"mov esi,dword ptr [ebp] \n " 
		"call _0x6AC940  \n " //!; => 0x006AC940 - outside range
		"L0xABEL_0x006BF5BC: \n " 
		"movss xmm0,dword ptr [edi] \n " 
		"mov ecx,dword ptr [ebp] \n " 
		"movss dword ptr [esp+0x60],xmm0 \n " 
		"movss xmm0,dword ptr [edi+0x8] \n " 
		"add ecx,0x8 \n " 
		"movss dword ptr [esp+0x64],xmm0 \n " 
		"call _0x678880  \n " //!; => 0x00678880 - outside range
		"mov ecx,eax \n " 
		"lea edx,dword ptr [esp+0x60] \n " 
		"lea eax,dword ptr [esp+0x30] \n " 
		"call _0x50B010  \n " //!; => 0x0050B010 - outside range
		"mov edx,dword ptr [eax] \n " 
		"lea esi,dword ptr [ebp+0x158] \n " 
		"mov dword ptr [esi],edx \n " 
		"mov ecx,dword ptr [eax+0x4] \n " 
		"mov dword ptr [esi+0x4],ecx \n " 
		"mov edx,dword ptr [eax+0x8] \n " 
		"mov dword ptr [esi+0x8],edx \n " 
		"mov eax,dword ptr [eax+0xC] \n " 
		"mov dword ptr [esi+0xC],eax \n " 
		"mov eax,dword ptr [ebp] \n " 
		"call _0x6AB6F0  \n " //!; => 0x006AB6F0 - outside range
		"fld dword ptr [ebp+0x1C] \n " 
		"mov ecx,dword ptr [ebp] \n " 
		"mov eax,dword ptr [ecx+0x150] \n " 
		"mov esi,dword ptr [eax+0x8CC] \n " 
		"sub esp,0x8 \n " 
		"fstp dword ptr [esp+0x4] \n " 
		"mov eax,esi \n " 
		"fld dword ptr [edi] \n " 
		"mov byte ptr [esp+0x1F],0x1 \n " 
		"fstp dword ptr [esp] \n " 
		"call _0x50ACC0  \n " //!; => 0x0050ACC0 - outside range
		"mov eax,esi \n " 
		"fstp dword ptr [esp+0x60] \n " 
		"call _0x5413C0  \n " //!; => 0x005413C0 - outside range
		"movss xmm1,dword ptr [esp+0x60] \n " 
		"comiss xmm1,xmm0 \n " 
		"jbe L0xABEL_0x006BF658  \n " //!; => 0x006BF658
		"mov dword ptr [ebp+0x74],0x1 \n " 
		"jmp L0xABEL_0x006BF685  \n " //!; => 0x006BF685
		"L0xABEL_0x006BF658: \n " 
		"mov dword ptr [ebp+0x74],0x8 \n " 
		"jmp L0xABEL_0x006BF685  \n " //!; => 0x006BF685
		"L0xABEL_0x006BF661: \n " 
		"mov eax,dword ptr [ebp] \n " 
		"mov dword ptr [ebp+0xAC],esi \n " 
		"mov edx,dword ptr [eax+0x4A0] \n " 
		"or dword ptr [eax+0x4A4],0x10 \n " 
		"mov dword ptr [eax+0x4A0],edx \n " 
		"mov esi,dword ptr [ebp] \n " 
		"call _0x6AC940  \n " //!; => 0x006AC940 - outside range
		"L0xABEL_0x006BF685: \n " 
		"mov eax,dword ptr [ebp] \n " 
		"lea ebx,dword ptr [esp+0x30] \n " 
		"call _0x6A8C20  \n " //!; => 0x006A8C20 - outside range
		"push 0xF3D21C \n " 
		"mov ecx,ebx \n " 
		"call _0x4F0A50  \n " //!; => 0x004F0A50 - outside range
		"test eax,eax \n " 
		"je L0xABEL_0x006BF6D6  \n " //!; => 0x006BF6D6
		"movss xmm0,dword ptr [esp+0x30] \n " 
		"movss xmm1,dword ptr [esp+0x34] \n " 
		"movss xmm2,dword ptr [esp+0x38] \n " 
		"movss dword ptr [ebp+0x20],xmm0 \n " 
		"movss dword ptr [ebp+0x24],xmm1 \n " 
		"movss dword ptr [ebp+0x28],xmm2 \n " 
		"movss dword ptr [esp+0x30],xmm0 \n " 
		"movss dword ptr [esp+0x34],xmm1 \n " 
		"movss dword ptr [esp+0x38],xmm2 \n " 
		"jmp L0xABEL_0x006BF732  \n " //!; => 0x006BF732
		"L0xABEL_0x006BF6D6: \n " 
		"lea edi,dword ptr [ebp+0x20] \n " 
		"push 0xF3D21C \n " 
		"mov ecx,edi \n " 
		"call _0x4F0A50  \n " //!; => 0x004F0A50 - outside range
		"test eax,eax \n " 
		"je L0xABEL_0x006BF70E  \n " //!; => 0x006BF70E
		"lea esi,dword ptr [esp+0x60] \n " 
		"call _0x44F7E0  \n " //!; => 0x0044F7E0 - outside range
		"movss xmm0,dword ptr [eax] \n " 
		"movss dword ptr [esp+0x30],xmm0 \n " 
		"movss xmm0,dword ptr [eax+0x4] \n " 
		"movss dword ptr [esp+0x34],xmm0 \n " 
		"movss xmm0,dword ptr [eax+0x8] \n " 
		"jmp L0xABEL_0x006BF72C  \n " //!; => 0x006BF72C
		"L0xABEL_0x006BF70E: \n " 
		"movss xmm0,dword ptr [esp+0x54] \n " 
		"movss dword ptr [esp+0x30],xmm0 \n " 
		"movss xmm0,dword ptr [esp+0x58] \n " 
		"movss dword ptr [esp+0x34],xmm0 \n " 
		"movss xmm0,dword ptr [esp+0x5C] \n " 
		"L0xABEL_0x006BF72C: \n " 
		"movss dword ptr [esp+0x38],xmm0 \n " 
		"L0xABEL_0x006BF732: \n " 
		"cmp byte ptr [esp+0x17],0x0 \n " 
		"je L0xABEL_0x006BF7CE  \n " //!; => 0x006BF7CE
		"mov eax,dword ptr [ebp] \n " 
		"or dword ptr [eax+0x4A0],0x400 \n " 
		"mov ecx,dword ptr [eax+0x4A4] \n " 
		"mov dword ptr [eax+0x4A4],ecx \n " 
		"movss xmm0,dword ptr [ebp+0x64] \n " 
		"ucomiss xmm0,dword ptr [0x10B6150] \n " 
		"lahf  \n " 
		"test ah,0x44 \n " 
		"jnp L0xABEL_0x006BF775  \n " //!; => 0x006BF775
		"subss xmm0,dword ptr [esp+0x40] \n " 
		"movss dword ptr [ebp+0x58],xmm0 \n " 
		"jmp L0xABEL_0x006BF7F3  \n " //!; => 0x006BF7F3
		"L0xABEL_0x006BF775: \n " 
		"mov eax,ebp \n " 
		"call _0x6BC820  \n " //!; => 0x006BC820 - outside range
		"test al,al \n " 
		"jne L0xABEL_0x006BF7BF  \n " //!; => 0x006BF7BF
		"mov eax,dword ptr [ebp+0x80] \n " 
		"cmp eax,0x4 \n " 
		"je L0xABEL_0x006BF7BF  \n " //!; => 0x006BF7BF
		"movss xmm0,dword ptr [0xE4F724] \n " 
		"comiss xmm0,dword ptr [esp+0x44] \n " 
		"ja L0xABEL_0x006BF7B5  \n " //!; => 0x006BF7B5
		"cmp eax,0x1 \n " 
		"je L0xABEL_0x006BF7B5  \n " //!; => 0x006BF7B5
		"mov esi,ebp \n " 
		"call _0x6BC8E0  \n " //!; => 0x006BC8E0 - outside range
		"mulss xmm0,dword ptr [0xE4F724] \n " 
		"movss dword ptr [ebp+0x58],xmm0 \n " 
		"jmp L0xABEL_0x006BF7F3  \n " //!; => 0x006BF7F3
		"L0xABEL_0x006BF7B5: \n " 
		"xorps xmm0,xmm0 \n " 
		"movss dword ptr [ebp+0x58],xmm0 \n " 
		"jmp L0xABEL_0x006BF7F3  \n " //!; => 0x006BF7F3
		"L0xABEL_0x006BF7BF: \n " 
		"mov edx,dword ptr [esp+0x1C] \n " 
		"fld dword ptr [edx+0x3F0] \n " 
		"fstp dword ptr [ebp+0x58] \n " 
		"jmp L0xABEL_0x006BF7F3  \n " //!; => 0x006BF7F3
		"L0xABEL_0x006BF7CE: \n " 
		"mov esi,ebp \n " 
		"call _0x6BC8E0  \n " //!; => 0x006BC8E0 - outside range
		"mov eax,dword ptr [ebp] \n " 
		"movss dword ptr [ebp+0x58],xmm0 \n " 
		"mov ecx,dword ptr [eax+0x4A4] \n " 
		"and dword ptr [eax+0x4A0],0xFFFFF7FF \n " 
		"mov dword ptr [eax+0x4A4],ecx \n " 
		"L0xABEL_0x006BF7F3: \n " 
		"mov ecx,dword ptr [ebp] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov eax,dword ptr [edx+0x40] \n " 
		"call eax  \n " //!=> 0x00000000 - outside range
		"mov ecx,dword ptr [esp+0x1C] \n " 
		"movss xmm0,dword ptr [eax+0x34] \n " 
		"mulss xmm0,dword ptr [ecx+0x370] \n " 
		"mulss xmm0,dword ptr [0xDFEB10] \n " 
		"movss xmm1,dword ptr [esp+0x44] \n " 
		"comiss xmm0,xmm1 \n " 
		"jbe L0xABEL_0x006BF829  \n " //!; => 0x006BF829
		"movss dword ptr [esp+0x18],xmm1 \n " 
		"jmp L0xABEL_0x006BF82F  \n " //!; => 0x006BF82F
		"L0xABEL_0x006BF829: \n " 
		"movss dword ptr [esp+0x18],xmm0 \n " 
		"L0xABEL_0x006BF82F: \n " 
		"mov edx,dword ptr [ebp] \n " 
		"mov edi,dword ptr [edx+0x150] \n " 
		"mov ebx,0x10B61C4 \n " 
		"call _0x747460  \n " //!; => 0x00747460 - outside range
		"mov edx,dword ptr [eax] \n " 
		"mov ecx,eax \n " 
		"mov eax,dword ptr [edx+0x8] \n " 
		"call eax  \n " //!=> 0x00000000 - outside range
		"mov ecx,dword ptr [esp+0x1C] \n " 
		"movss xmm0,dword ptr [eax] \n " 
		"mov bl,byte ptr [ecx+0x36A] \n " 
		"mov edx,dword ptr [esp+0x6C] \n " 
		"mov esi,dword ptr [esp+0x48] \n " 
		"mulss xmm0,dword ptr [esp+0x18] \n " 
		"call _0x62D620  \n " //!; => 0x0062D620 - outside range
		"fstp dword ptr [esp+0x4C] \n " 
		"movss xmm3,dword ptr [esp+0x4C] \n " 
		"mov edx,dword ptr [esp+0xEC] \n " 
		"xorps xmm4,xmm4 \n " 
		"movaps xmm0,xmm3 \n " 
		"subss xmm0,dword ptr [edx+0x14] \n " 
		"comiss xmm4,xmm0 \n " 
		"jbe L0xABEL_0x006BF890  \n " //!; => 0x006BF890
		"movaps xmm0,xmm4 \n " 
		"L0xABEL_0x006BF890: \n " 
		"mov eax,dword ptr [esp+0x1C] \n " 
		"comiss xmm0,dword ptr [eax+0x38C] \n " 
		"jbe L0xABEL_0x006BF973  \n " //!; => 0x006BF973
		"movss xmm0,dword ptr [esp+0x18] \n " 
		"comiss xmm0,dword ptr [0xDFEC20] \n " 
		"jbe L0xABEL_0x006BF973  \n " //!; => 0x006BF973
		"mov ecx,dword ptr [ebp] \n " 
		"mulss xmm0,dword ptr [0xE4F724] \n " 
		"mov edi,dword ptr [ecx+0x150] \n " 
		"mov ebx,0x10B61C4 \n " 
		"movss dword ptr [esp+0x18],xmm0 \n " 
		"call _0x747460  \n " //!; => 0x00747460 - outside range
		//"mov edx,dword ptr [eax] \n " 
		//"mov ecx,eax \n " 
		"lea eax, ds:[eax+0x8] \n" //!
		//"mov eax,dword ptr [edx+0x8] \n " 
		//"call eax  \n " //!=> 0x00000000 - outside range
		"mov ecx,dword ptr [esp+0x1C] \n " 
		"movss xmm0,dword ptr [esp+0x18] \n " 
		"mov bl,byte ptr [ecx+0x36A] \n " 
		"mov edx,dword ptr [esp+0x6C] \n " 
		"mulss xmm0,dword ptr [eax] \n " 
		"call _0x62D620  \n " //!; => 0x0062D620 - outside range
		"fmul dword ptr [0xDFEC1C] \n " 
		"mov edx,dword ptr [esp+0xEC] \n " 
		"xorps xmm4,xmm4 \n " 
		"fstp dword ptr [esp+0x60] \n " 
		"movss xmm0,dword ptr [esp+0x60] \n " 
		"subss xmm0,dword ptr [edx+0x14] \n " 
		"comiss xmm4,xmm0 \n " 
		"movaps xmm1,xmm0 \n " 
		"jbe L0xABEL_0x006BF925  \n " //!; => 0x006BF925
		"movaps xmm1,xmm4 \n " 
		"L0xABEL_0x006BF925: \n " 
		"movss xmm2,dword ptr [esp+0x18] \n " 
		"movaps xmm0,xmm2 \n " 
		"subss xmm0,xmm1 \n " 
		"movss xmm1,dword ptr [0xE4F8A8] \n " 
		"divss xmm0,xmm2 \n " 
		"comiss xmm0,xmm1 \n " 
		"jbe L0xABEL_0x006BF946  \n " //!; => 0x006BF946
		"movaps xmm1,xmm0 \n " 
		"L0xABEL_0x006BF946: \n " 
		"movss xmm3,dword ptr [esp+0x4C] \n " 
		"movaps xmm0,xmm1 \n " 
		"mulss xmm0,xmm1 \n " 
		"movss xmm1,dword ptr [esp+0x24] \n " 
		"mulss xmm1,xmm0 \n " 
		"movss dword ptr [esp+0x24],xmm1 \n " 
		"movss xmm1,dword ptr [esp+0x2C] \n " 
		"mulss xmm1,xmm0 \n " 
		"movss dword ptr [esp+0x2C],xmm1 \n " 
		"L0xABEL_0x006BF973: \n " 
		"mov eax,dword ptr [esp+0x1C] \n " 
		"movss xmm0,dword ptr [ebp+0x54] \n " 
		"comiss xmm0,xmm3 \n " 
		"movss xmm1,dword ptr [eax+0x38C] \n " 
		"mulss xmm1,dword ptr [0xE4F714] \n " 
		"jbe L0xABEL_0x006BF9A0  \n " //!; => 0x006BF9A0
		"cmp byte ptr [esp+0x17],0x0 \n " 
		"jne L0xABEL_0x006BF9A0  \n " //!; => 0x006BF9A0
		"mulss xmm1,dword ptr [0xE4F724] \n " 
		"L0xABEL_0x006BF9A0: \n " 
		"movaps xmm2,xmm0 \n " 
		"addss xmm2,xmm1 \n " 
		"comiss xmm2,xmm3 \n " 
		"subss xmm0,xmm1 \n " 
		"jbe L0xABEL_0x006BF9B5  \n " //!; => 0x006BF9B5
		"movaps xmm1,xmm3 \n " 
		"jmp L0xABEL_0x006BF9B8  \n " //!; => 0x006BF9B8
		"L0xABEL_0x006BF9B5: \n " 
		"movaps xmm1,xmm2 \n " 
		"L0xABEL_0x006BF9B8: \n " 
		"comiss xmm0,xmm1 \n " 
		"jbe L0xABEL_0x006BF9C0  \n " //!; => 0x006BF9C0
		"movaps xmm1,xmm0 \n " 
		"L0xABEL_0x006BF9C0: \n " 
		"cmp byte ptr [esp+0x17],0x0 \n " 
		"mov eax,dword ptr [esp+0xEC] \n " 
		"movss dword ptr [ebp+0x54],xmm1 \n " 
		"movss xmm0,dword ptr [eax+0x14] \n " 
		"subss xmm0,dword ptr [esp+0x40] \n " 
		"addss xmm1,dword ptr [ebp+0x58] \n " 
		"movss dword ptr [ebp+0x50],xmm0 \n " 
		"subss xmm1,dword ptr [eax+0x14] \n " 
		"movss dword ptr [esp+0x28],xmm1 \n " 
		"je L0xABEL_0x006BFA95  \n " //!; => 0x006BFA95
		"comiss xmm4,xmm1 \n " 
		"jbe L0xABEL_0x006BFA95  \n " //!; => 0x006BFA95
		"push 0xE1B654 \n " 
		"lea ecx,dword ptr [esp+0x98] \n " 
		"call _0x405550  \n " //!; => 0x00405550 - outside range
		"xor edi,edi \n " 
		"mov dword ptr [esp+0xE0],edi \n " 
		"mov ecx,dword ptr [ebp] \n " 
		"add ecx,0x8 \n " 
		"lea eax,dword ptr [esp+0x94] \n " 
		"call _0x67B050  \n " //!; => 0x0067B050 - outside range
		"mov dword ptr [esp+0xE0],0xFFFFFFFF \n " 
		"cmp dword ptr [esp+0xAC],0x10 \n " 
		"mov bl,al \n " 
		"jb L0xABEL_0x006BFA53  \n " //!; => 0x006BFA53
		"mov ecx,dword ptr [esp+0x98] \n " 
		"push ecx \n " 
		"call 0x958A60 \n " 
		"add esp,0x4 \n " 
		"L0xABEL_0x006BFA53: \n " 
		"test bl,bl \n " 
		"je L0xABEL_0x006BFA72  \n " //!; => 0x006BFA72
		"movss xmm0,dword ptr [0xE4F754] \n " 
		"movss xmm1,dword ptr [esp+0x28] \n " 
		"comiss xmm1,xmm0 \n " 
		"jbe L0xABEL_0x006BFA97  \n " //!; => 0x006BFA97
		"L0xABEL_0x006BFA6A: \n " 
		"movss dword ptr [esp+0x28],xmm0 \n " 
		"jmp L0xABEL_0x006BFA97  \n " //!; => 0x006BFA97
		"L0xABEL_0x006BFA72: \n " 
		"movss xmm0,dword ptr [esp+0x28] \n " 
		"mulss xmm0,dword ptr [0xE4F724] \n " 
		"movss xmm1,dword ptr [0xE4F9D4] \n " 
		"comiss xmm0,xmm1 \n " 
		"jbe L0xABEL_0x006BFA6A  \n " //!; => 0x006BFA6A
		"movss dword ptr [esp+0x28],xmm1 \n " 
		"jmp L0xABEL_0x006BFA97  \n " //!; => 0x006BFA97
		"L0xABEL_0x006BFA95: \n " 
		"xor edi,edi \n " 
		"L0xABEL_0x006BFA97: \n " 
		"cmp dword ptr [ebp+0xA0],edi \n " 
		"jne L0xABEL_0x006BFD2F  \n " //!; => 0x006BFD2F
		"cmp byte ptr [esp+0x17],0x0 \n " 
		"je L0xABEL_0x006BFC3A  \n " //!; => 0x006BFC3A
		"movss xmm0,dword ptr [ebp+0x58] \n " 
		"ucomiss xmm0,dword ptr [0xE4F6E0] \n " 
		"lahf  \n " 
		"test ah,0x44 \n " 
		"jnp L0xABEL_0x006BFAE1  \n " //!; => 0x006BFAE1
		"movss xmm0,dword ptr [ebp+0x64] \n " 
		"ucomiss xmm0,dword ptr [0x10B6150] \n " 
		"lahf  \n " 
		"test ah,0x44 \n " 
		"jp L0xABEL_0x006BFAE1  \n " //!; => 0x006BFAE1
		"mov eax,ebp \n " 
		"call _0x6BC820  \n " //!; => 0x006BC820 - outside range
		"test al,al \n " 
		"je L0xABEL_0x006BFC3A  \n " //!; => 0x006BFC3A
		"L0xABEL_0x006BFAE1: \n " 
		"movss xmm0,dword ptr [0xE4F724] \n " 
		"comiss xmm0,dword ptr [esp+0x44] \n " 
		"jbe L0xABEL_0x006BFD2F  \n " //!; => 0x006BFD2F
		"movss xmm0,dword ptr [ebp+0x50] \n " 
		"subss xmm0,dword ptr [ebp+0x58] \n " 
		"movss xmm1,dword ptr [0xE4F714] \n " 
		"comiss xmm1,xmm0 \n " 
		"ja L0xABEL_0x006BFB1D  \n " //!; => 0x006BFB1D
		"mov edx,dword ptr [ebp] \n " 
		"mov eax,dword ptr [edx+0x120] \n " 
		"cmp eax,dword ptr [ebp+0x74] \n " 
		"jne L0xABEL_0x006BFD2F  \n " //!; => 0x006BFD2F
		"L0xABEL_0x006BFB1D: \n " 
		"mov ebx,dword ptr [ebp] \n " 
		"xor eax,eax \n " 
		"mov dword ptr [ebp+0x158],eax \n " 
		"xor ecx,ecx \n " 
		"xor edx,edx \n " 
		"mov dword ptr [ebp+0x15C],ecx \n " 
		"xor esi,esi \n " 
		"mov dword ptr [ebp+0x160],edx \n " 
		"mov dword ptr [ebp+0x164],esi \n " 
		"call _0x6AB760  \n " //!; => 0x006AB760 - outside range
		"mov esi,dword ptr [ebp] \n " 
		"mov edx,dword ptr [ebp+0x74] \n " 
		"add esi,0x8 \n " 
		"call _0x67AFF0  \n " //!; => 0x0067AFF0 - outside range
		"mov eax,dword ptr [ebp] \n " 
		"mov ecx,dword ptr [eax+0x4A4] \n " 
		"and dword ptr [eax+0x4A0],0xFFFFF7FF \n " 
		"mov dword ptr [eax+0x4A4],ecx \n " 
		"mov eax,dword ptr [ebp] \n " 
		"mov edx,dword ptr [eax+0x4A4] \n " 
		"and dword ptr [eax+0x4A0],0xFFFFFBFF \n " 
		"mov dword ptr [eax+0x4A4],edx \n " 
		"mov eax,ebp \n " 
		"call _0x6BC820  \n " //!; => 0x006BC820 - outside range
		"test al,al \n " 
		"mov ecx,ebp \n " 
		"je L0xABEL_0x006BFBA3  \n " //!; => 0x006BFBA3
		"mov eax,0x4 \n " 
		"call _0x6B8F70  \n " //!; => 0x006B8F70 - outside range
		"xor edi,edi \n " 
		"jmp L0xABEL_0x006BFD2F  \n " //!; => 0x006BFD2F
		"L0xABEL_0x006BFBA3: \n " 
		"mov eax,0x1 \n " 
		"call _0x6B8F70  \n " //!; => 0x006B8F70 - outside range
/* 		"mov ecx,dword ptr [ebp] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax+0x14] \n " 
		"call edx  \n " //!=> 0x00000000 - outside range
		"fld dword ptr [eax] \n " 
		"fstp dword ptr [ebp+0x14] \n " 
		"fld dword ptr [eax+0x4] \n " 
		"fstp dword ptr [ebp+0x18] \n " 
		"fld dword ptr [eax+0x8] \n " 
		"mov eax,dword ptr [esp+0x50] \n " 
		"fstp dword ptr [ebp+0x1C] \n " 
		"fld dword ptr [eax+0x3C] \n " 
		"fstp dword ptr [ebp+0xB4] \n " 
		"fld dword ptr [eax+0x40] \n " 
		"fstp dword ptr [ebp+0xB8] \n " 
		"fld dword ptr [eax+0x44] \n " 
		"fstp dword ptr [ebp+0xBC] \n " 
		"movss xmm0,dword ptr [0xF3D21C] \n " 
		"movss dword ptr [eax+0x3C],xmm0 \n " 
		"movss xmm0,dword ptr [0xF3D220] \n " 
		"movss dword ptr [eax+0x40],xmm0 \n " 
		"movss xmm0,dword ptr [0xF3D224] \n " 
		"movss dword ptr [eax+0x44],xmm0 \n " 
		"movss xmm0,dword ptr [0xF3D21C] \n " 
		"movss dword ptr [eax+0x48],xmm0 \n " 
		"movss xmm0,dword ptr [0xF3D220] \n " 
		"movss dword ptr [eax+0x4C],xmm0 \n " 
		"movss xmm0,dword ptr [0xF3D224] \n " 
		"movss dword ptr [eax+0x50],xmm0 \n "  */
		"jmp L0xABEL_0x006C0257  \n " //!; => 0x006C0257
		"L0xABEL_0x006BFC3A: \n " 
		"mov eax,dword ptr [ebp+0x80] \n " 
		"cmp eax,0x1 \n " 
		"je L0xABEL_0x006BFC4A  \n " //!; => 0x006BFC4A
		"cmp eax,0x4 \n " 
		"jne L0xABEL_0x006BFC63  \n " //!; => 0x006BFC63
		"L0xABEL_0x006BFC4A: \n " 
		"mov eax,dword ptr [ebp] \n " 
		"mov ecx,dword ptr [eax+0x4A4] \n " 
		"or dword ptr [eax+0x4A0],0x800 \n " 
		"mov dword ptr [eax+0x4A4],ecx \n " 
		"L0xABEL_0x006BFC63: \n " 
		"movss xmm0,dword ptr [ebp+0x58] \n " 
		"comiss xmm0,dword ptr [0xE4F6E0] \n " 
		"movss dword ptr [esp+0x4C],xmm0 \n " 
		"jbe L0xABEL_0x006BFD2F  \n " //!; => 0x006BFD2F
		"movss xmm1,dword ptr [ebp+0x50] \n " 
		"mulss xmm0,dword ptr [0xE4F724] \n " 
		"comiss xmm0,xmm1 \n " 
		"movss dword ptr [esp+0x40],xmm1 \n " 
		"jbe L0xABEL_0x006BFD2F  \n " //!; => 0x006BFD2F
		"mov eax,dword ptr [esp+0x50] \n " 
		"movss xmm2,dword ptr [eax+0x3C] \n " 
		"movss xmm1,dword ptr [eax+0x40] \n " 
		"movss xmm0,dword ptr [eax+0x44] \n " 
		"movaps xmm3,xmm2 \n " 
		"mulss xmm3,xmm2 \n " 
		"movaps xmm2,xmm1 \n " 
		"mulss xmm2,xmm1 \n " 
		"movaps xmm1,xmm0 \n " 
		"addss xmm3,xmm2 \n " 
		"mulss xmm1,xmm0 \n " 
		"push ecx \n " 
		"addss xmm3,xmm1 \n " 
		"movss dword ptr [esp],xmm3 \n " 
		//"call _0x452FC0  \n " //!; => 0x00452FC0 - outside range
		"fld dword ptr ss:[esp] \n" //!e5
		"fsqrt \n"
		"fstp dword ptr [esp+0x64] \n " 
		"mov edx,dword ptr [ebp] \n " 
		"movss xmm0,dword ptr [edx+0x594] \n " 
		"mulss xmm0,dword ptr [0xE4F91C] \n " 
		"add esp,0x4 \n " 
		"comiss xmm0,dword ptr [esp+0x60] \n " 
		"jbe L0xABEL_0x006BFD2F  \n " //!; => 0x006BFD2F
		"movss xmm0,dword ptr [esp+0x40] \n " 
		"divss xmm0,dword ptr [esp+0x4C] \n " 
		"movss xmm1,dword ptr [0xDFEC20] \n " 
		"comiss xmm0,xmm1 \n " 
		"jbe L0xABEL_0x006BFD0F  \n " //!; => 0x006BFD0F
		"movaps xmm0,xmm1 \n " 
		"L0xABEL_0x006BFD0F: \n " 
		"movss xmm1,dword ptr [esp+0x24] \n " 
		"mulss xmm1,xmm0 \n " 
		"movss dword ptr [esp+0x24],xmm1 \n " 
		"movss xmm1,dword ptr [esp+0x2C] \n " 
		"mulss xmm1,xmm0 \n " 
		"movss dword ptr [esp+0x2C],xmm1 \n " 
		"L0xABEL_0x006BFD2F: \n " 
		"mov eax,dword ptr [ebp] \n " 
		"mov ecx,dword ptr [eax+0x4A0] \n " 
		"and dword ptr [eax+0x4A4],0xFFFFF7FF \n " 
		"mov dword ptr [eax+0x4A0],ecx \n " 
		"mov dword ptr [esp+0x70],edi \n " 
		"mov dword ptr [esp+0x74],edi \n " 
		"mov dword ptr [esp+0x78],edi \n " 
		"mov dword ptr [esp+0x88],0xFFFFFFFF \n " 
		"mov byte ptr [esp+0x8C],0x0 \n " 
		"mov dword ptr [esp+0xE0],0x1 \n " 
		"mov edx,dword ptr [ebp] \n " 
		"mov ebx,dword ptr [edx+0x544] \n " 
		"cmp ebx,edi \n " 
		"je L0xABEL_0x006BFDCF  \n " //!; => 0x006BFDCF
		"mov eax,dword ptr [ebx] \n " 
		"mov edx,dword ptr [eax+0x24] \n " 
		"mov ecx,ebx \n " 
		"call edx  \n " //!=> 0x00000000 - outside range
		"mov esi,eax \n " 
		"lea eax,dword ptr [esp+0x70] \n " 
		"call _0x5D5670  \n " //!; => 0x005D5670 - outside range
		"lea esi,dword ptr [esp+0x70] \n " 
		"call _0x5E2A10  \n " //!; => 0x005E2A10 - outside range
		"test al,al \n " 
		"je L0xABEL_0x006BFDCF  \n " //!; => 0x006BFDCF
		"mov eax,dword ptr [ebx] \n " 
		"mov edx,dword ptr [eax+0x2C] \n " 
		"mov ecx,esi \n " 
		"push ecx \n " 
		"mov ecx,ebx \n " 
		"call edx  \n " //!=> 0x00000000 - outside range
		"test al,al \n " 
		"je L0xABEL_0x006BFDCF  \n " //!; => 0x006BFDCF
		"mov eax,dword ptr [esp+0x1C] \n " 
		"cmp byte ptr [eax+0x369],0x0 \n " 
		"je L0xABEL_0x006BFDCF  \n " //!; => 0x006BFDCF
		"lea ecx,dword ptr [esp+0x24] \n " 
		"push ecx \n " 
		"mov edx,esi \n " 
		"push edx \n " 
		"push ebp \n " 
		"lea eax,dword ptr [esp+0x60] \n " 
		"call _0x6BCDB0  \n " //!; => 0x006BCDB0 - outside range
		"L0xABEL_0x006BFDCF: \n " 
		"lea esi,dword ptr [esp+0x70] \n " 
		"call _0x5E2A10  \n " //!; => 0x005E2A10 - outside range
		"test al,al \n " 
		"jne L0xABEL_0x006BFDE8  \n " //!; => 0x006BFDE8
		"mov dword ptr [ebp+0xA8],edi \n " 
		"mov dword ptr [ebp+0xA0],edi \n " 
		"L0xABEL_0x006BFDE8: \n " 
		"lea eax,dword ptr [esp+0x70] \n " 
		"push eax \n " 
		"lea ecx,dword ptr [esp+0x98] \n " 
		"push ecx \n " 
		"lea edx,dword ptr [esp+0x5C] \n " 
		"push edx \n " 
		"push ecx \n " 
		"lea edi,dword ptr [esp+0x34] \n " 
		"lea esi,dword ptr [esp+0x70] \n " 
		"call _0x44F7E0  \n " //!; => 0x0044F7E0 - outside range
		"mov ebx,dword ptr [esp+0x60] \n " 
		"add esp,0x4 \n " 
		"push eax \n " 
		"mov eax,edi \n " 
		"push eax \n " 
		"push ebx \n " 
		"push ebp \n " 
		"lea eax,dword ptr [esp+0x4C] \n " 
		"call _0x6BE6B0  \n " //!; => 0x006BE6B0 - outside range
/* 		"mov ecx,dword ptr [esp+0x1C] \n " 
		"movss xmm0,dword ptr [esp+0x44] \n " 
		"comiss xmm0,dword ptr [ecx+0x380] \n " 
		"jbe L0xABEL_0x006BFF24  \n " //!; => 0x006BFF24
		"movss xmm0,dword ptr [esp+0x24] \n " 
		"movss dword ptr [esp+0x30],xmm0 \n " 
		"xorps xmm0,xmm0 \n " 
		"movss dword ptr [esp+0x34],xmm0 \n " 
		"movss xmm0,dword ptr [esp+0x2C] \n " 
		"lea edi,dword ptr [esp+0x30] \n " 
		"lea esi,dword ptr [esp+0x24] \n " 
		"movss dword ptr [esp+0x38],xmm0 \n " 
		"call _0x44F7E0  \n " //!; => 0x0044F7E0 - outside range
		"movss xmm3,dword ptr [esp+0x54] \n " 
		"movss xmm5,dword ptr [esp+0x5C] \n " 
		"movss xmm4,dword ptr [esp+0x58] \n " 
		"movaps xmm0,xmm3 \n " 
		"mulss xmm0,xmm3 \n " 
		"movaps xmm1,xmm5 \n " 
		"mulss xmm1,xmm5 \n " 
		"addss xmm0,xmm1 \n " 
		"movaps xmm1,xmm4 \n " 
		"mulss xmm1,xmm4 \n " 
		"addss xmm0,xmm1 \n " 
		"comiss xmm0,dword ptr [0xDFFBE8] \n " 
		"jbe L0xABEL_0x006BFF55  \n " //!; => 0x006BFF55
		"movss xmm1,dword ptr [esp+0x28] \n " 
		"movss xmm2,dword ptr [esp+0x2C] \n " 
		"movaps xmm6,xmm1 \n " 
		"mulss xmm6,xmm1 \n " 
		"movaps xmm0,xmm2 \n " 
		"mulss xmm0,xmm2 \n " 
		"addss xmm6,xmm0 \n " 
		"movss xmm0,dword ptr [esp+0x24] \n " 
		"movaps xmm7,xmm0 \n " 
		"mulss xmm7,xmm0 \n " 
		"addss xmm6,xmm7 \n " 
		"comiss xmm6,dword ptr [0xDFFBE8] \n " 
		"jbe L0xABEL_0x006BFF55  \n " //!; => 0x006BFF55
		"mulss xmm0,xmm3 \n " 
		"mulss xmm2,xmm5 \n " 
		"mulss xmm1,xmm4 \n " 
		"addss xmm0,xmm2 \n " 
		"addss xmm0,xmm1 \n " 
		"movss xmm1,dword ptr [0xE4F724] \n " 
		"comiss xmm1,xmm0 \n " 
		"mov ecx,ebp \n " 
		"jbe L0xABEL_0x006BFF06  \n " //!; => 0x006BFF06
		"mov eax,0x2 \n " 
		"call _0x6B8FB0  \n " //!; => 0x006B8FB0 - outside range
		"jmp L0xABEL_0x006BFF55  \n " //!; => 0x006BFF55
		"L0xABEL_0x006BFF06: \n " 
		"comiss xmm0,dword ptr [0xE4F99C] \n " 
		"jbe L0xABEL_0x006BFF18  \n " //!; => 0x006BFF18
		"xor eax,eax \n " 
		"call _0x6B8FB0  \n " //!; => 0x006B8FB0 - outside range
		"jmp L0xABEL_0x006BFF55  \n " //!; => 0x006BFF55
		"L0xABEL_0x006BFF18: \n " 
		"mov eax,0x1 \n " 
		"call _0x6B8FB0  \n " //!; => 0x006B8FB0 - outside range
		"jmp L0xABEL_0x006BFF55  \n " //!; => 0x006BFF55
		"L0xABEL_0x006BFF24: \n " 
		"mov eax,dword ptr [ebp+0x84] \n " 
		"test eax,eax \n " 
		"jmp L0xABEL_0x006BFF55  \n " //!; => 0x006BFF55
		"mov ecx,dword ptr [ebp] \n " 
		"lea edx,dword ptr [eax*0x4+0xF58374] \n " 
		"push edx \n " 
		"push 0xF58374 \n " 
		"push 0xE2AA74 \n " 
		"add ecx,0x8 \n " 
		"mov dword ptr [ebp+0x84],0x0 \n " 
		"call _0x67F450  \n " //!; => 0x0067F450 - outside range */
		"L0xABEL_0x006BFF55: \n " 
		"mov ecx,dword ptr [ebp] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax+0x3C] \n " 
		"push 0xA \n " 
		"call edx  \n " //!=> 0x00000000 - outside range
		"test al,al \n " 
		"je L0xABEL_0x006BFF99  \n " //!; => 0x006BFF99
		"mov eax,dword ptr [ebp+0x80] \n " 
		"cmp eax,0x3 \n " 
		"je L0xABEL_0x006BFFC2  \n " //!; => 0x006BFFC2
		"mov ecx,dword ptr [ebp] \n " 
		"lea eax,dword ptr [eax*0x4+0xF58360] \n " 
		"push eax \n " 
		"push 0xF5836C \n " 
		"push 0xE2AA5C \n " 
		"add ecx,0x8 \n " 
		"mov dword ptr [ebp+0x80],0x3 \n " 
		"call _0x67F450  \n " //!; => 0x0067F450 - outside range
		"jmp L0xABEL_0x006BFFC2  \n " //!; => 0x006BFFC2
		"L0xABEL_0x006BFF99: \n " 
		"mov ecx,dword ptr [ebp] \n " 
		"mov edx,dword ptr [ecx] \n " 
		"mov eax,dword ptr [edx+0x3C] \n " 
		"push 0xB \n " 
		"call eax  \n " //!=> 0x00000000 - outside range
		"test al,al \n " 
		"je L0xABEL_0x006BFFB0  \n " //!; => 0x006BFFB0
		"mov eax,0x2 \n " 
		"jmp L0xABEL_0x006BFFBB  \n " //!; => 0x006BFFBB
		"L0xABEL_0x006BFFB0: \n " 
		"cmp dword ptr [ebp+0x80],0x4 \n " 
		"je L0xABEL_0x006BFFC2  \n " //!; => 0x006BFFC2
		"xor eax,eax \n " 
		"L0xABEL_0x006BFFBB: \n " 
		"mov ecx,ebp \n " 
		"call _0x6B8F70  \n " //!; => 0x006B8F70 - outside range
		"L0xABEL_0x006BFFC2: \n " 
		"mov ecx,dword ptr [esp+0x1C] \n " 
		"movss xmm0,dword ptr [esp+0x44] \n " 
		"comiss xmm0,dword ptr [ecx+0x380] \n " 
		"ja L0xABEL_0x006C0011  \n " //!; => 0x006C0011
		"cmp byte ptr [ebp+0x8C],0x0 \n " 
		"jne L0xABEL_0x006C0011  \n " //!; => 0x006C0011
		"cmp dword ptr [ebp+0xA0],0x0 \n " 
		"jne L0xABEL_0x006C0036  \n " //!; => 0x006C0036
		"mov edx,dword ptr [ebp] \n " 
		"movss xmm0,dword ptr [edx+0x594] \n " 
		"mulss xmm0,dword ptr [0xE4F9D0] \n " 
		"comiss xmm0,dword ptr [esp+0x20] \n " 
		"mov esi,ebp \n " 
		"jbe L0xABEL_0x006C000A  \n " //!; => 0x006C000A
		"mov eax,0x3 \n " 
		"jmp L0xABEL_0x006C003A  \n " //!; => 0x006C003A
		"L0xABEL_0x006C000A: \n " 
		"mov eax,0x2 \n " 
		"jmp L0xABEL_0x006C003A  \n " //!; => 0x006C003A
		"L0xABEL_0x006C0011: \n " 
		"mov eax,dword ptr [ebp] \n " 
		"movss xmm0,dword ptr [eax+0x594] \n " 
		"mulss xmm0,dword ptr [0xE4F91C] \n " 
		"movss xmm1,dword ptr [esp+0x20] \n " 
		"comiss xmm1,xmm0 \n " 
		"jbe L0xABEL_0x006C0036  \n " //!; => 0x006C0036
		"mov eax,0x1 \n " 
		"jmp L0xABEL_0x006C0038  \n " //!; => 0x006C0038
		"L0xABEL_0x006C0036: \n " 
		"xor eax,eax \n " 
		"L0xABEL_0x006C0038: \n " 
		"mov esi,ebp \n " 
		"L0xABEL_0x006C003A: \n " 
		"call _0x6B8F30  \n " //!; => 0x006B8F30 - outside range
		"mov dword ptr [esp+0xE0],0xFFFFFFFF \n " 
		"mov eax,dword ptr [esp+0x74] \n " 
		"test eax,eax \n " 
		"je L0xABEL_0x006C0073  \n " //!; => 0x006C0073
		"lea ecx,dword ptr [esp+0x74] \n " 
		"cmp dword ptr [eax],ecx \n " 
		"je L0xABEL_0x006C006D  \n " //!; => 0x006C006D
		"lea ebx,dword ptr [ebx] \n " 
		"L0xABEL_0x006C0060: \n " 
		"mov eax,dword ptr [eax] \n " 
		"add eax,0x4 \n " 
		"lea edx,dword ptr [esp+0x74] \n " 
		"cmp dword ptr [eax],edx \n " 
		"jne L0xABEL_0x006C0060  \n " //!; => 0x006C0060
		"L0xABEL_0x006C006D: \n " 
		"mov ecx,dword ptr [esp+0x78] \n " 
		"mov dword ptr [eax],ecx \n " 
		"L0xABEL_0x006C0073: \n " 
		"fld dword ptr [ebx+0x3C] \n " 
		"movss xmm7,dword ptr [esp+0x98] \n " 
		"fstp dword ptr [ebp+0xB4] \n " 
		"mov edi,ebx \n " 
		"fld dword ptr [ebx+0x40] \n " 
		"fstp dword ptr [ebp+0xB8] \n " 
		"fld dword ptr [ebx+0x44] \n " 
		"fstp dword ptr [ebp+0xBC] \n " 
		"movss xmm0,dword ptr [ebx+0x40] \n " 
		"mov eax,dword ptr [ebx] \n " 
		"movss xmm4,dword ptr [eax] \n " 
		"movss xmm5,dword ptr [eax+0x4] \n " 
		"movss xmm6,dword ptr [eax+0x8] \n " 
		"movss xmm3,dword ptr [ebx+0x3C] \n " 
		"movss dword ptr [esp+0x34],xmm0 \n " 
		"movss xmm0,dword ptr [ebx+0x44] \n " 
		"movss dword ptr [esp+0x38],xmm0 \n " 
		"movss xmm0,dword ptr [0xE4F714] \n " 
		"mulss xmm4,xmm0 \n " 
		"movaps xmm1,xmm0 \n " 
		"divss xmm1,dword ptr [ebx+0x4] \n " 
		"mulss xmm7,xmm1 \n " 
		"movaps xmm2,xmm1 \n " 
		"mulss xmm2,dword ptr [esp+0x94] \n " 
		"addss xmm2,xmm4 \n " 
		"movss dword ptr [esp+0x58],xmm7 \n " 
		"movss xmm7,dword ptr [esp+0x9C] \n " 
		"movss xmm4,dword ptr [esp+0x58] \n " 
		"mulss xmm7,xmm1 \n " 
		"addss xmm2,xmm3 \n " 
		"movss dword ptr [ebx+0x3C],xmm2 \n " 
		"addss xmm3,xmm2 \n " 
		"mulss xmm5,xmm0 \n " 
		"mulss xmm6,xmm0 \n " 
		"movaps xmm1,xmm7 \n " 
		"addss xmm1,xmm6 \n " 
		"addss xmm1,dword ptr [ebx+0x44] \n " 
		"movss dword ptr [ebx+0x44],xmm1 \n " 
		"addss xmm4,xmm5 \n " 
		"addss xmm4,dword ptr [ebx+0x40] \n " 
		"movss dword ptr [ebx+0x40],xmm4 \n " 
		"movss xmm2,dword ptr [ebx+0x44] \n " 
		"addss xmm2,dword ptr [esp+0x38] \n " 
		"movaps xmm1,xmm4 \n " 
		"movss xmm4,dword ptr [0xE4F7FC] \n " 
		"addss xmm1,dword ptr [esp+0x34] \n " 
		"mulss xmm3,xmm4 \n " 
		"addss xmm3,dword ptr [ebx+0x20] \n " 
		"mulss xmm1,xmm4 \n " 
		"addss xmm1,dword ptr [ebx+0x24] \n " 
		"mulss xmm2,xmm4 \n " 
		"addss xmm2,dword ptr [ebx+0x28] \n " 
		"lea eax,dword ptr [esp+0xA0] \n " 
		"movss dword ptr [ebx+0x20],xmm3 \n " 
		"movss dword ptr [ebx+0x24],xmm1 \n " 
		"movss dword ptr [ebx+0x28],xmm2 \n " 
		"call _0x6978D0  \n " //!; => 0x006978D0 - outside range
		"push ebp \n " 
		"call _0x6BC460  \n " //!; => 0x006BC460 - outside range
		"test al,al \n " 
		"je L0xABEL_0x006C01BB  \n " //!; => 0x006C01BB
		"cmp byte ptr [esp+0x17],0x0 \n " 
		"je L0xABEL_0x006C01BB  \n " //!; => 0x006C01BB
		"movss xmm0,dword ptr [0xE4F724] \n " 
		"comiss xmm0,dword ptr [esp+0x44] \n " 
		"jbe L0xABEL_0x006C01BB  \n " //!; => 0x006C01BB
		"mov esi,dword ptr [ebp] \n " 
		"mov edx,dword ptr [ebp+0x74] \n " 
		"add esi,0x8 \n " 
		"call _0x67AFF0  \n " //!; => 0x0067AFF0 - outside range
		"jmp L0xABEL_0x006C0218  \n " //!; => 0x006C0218
		"L0xABEL_0x006C01BB: \n " 
		"cmp dword ptr [ebp+0x80],0x4 \n " 
		"je L0xABEL_0x006C0218  \n " //!; => 0x006C0218
		"mov ebp,dword ptr [ebp] \n " 
		"mov eax,dword ptr [ebp+0x120] \n " 
		"add ebp,0x8 \n " 
		"cmp eax,0x10 \n " 
		"mov dword ptr [ebp+0x118],0x10 \n " 
		"je L0xABEL_0x006C0218  \n " //!; => 0x006C0218
		"cmp eax,0x20 \n " 
		"ja L0xABEL_0x006C01EB  \n " //!; => 0x006C01EB
		"call _0x50AD80  \n " //!; => 0x0050AD80 - outside range
		"jmp L0xABEL_0x006C01F0  \n " //!; => 0x006C01F0
		"L0xABEL_0x006C01EB: \n " 
		"mov eax,0xE00779 \n " 
		"L0xABEL_0x006C01F0: \n " 
		"mov dword ptr [esp+0x60],eax \n " 
		"mov eax,0x10 \n " 
		"call _0x50AD80  \n " //!; => 0x0050AD80 - outside range
		"lea edx,dword ptr [esp+0x60] \n " 
		"mov dword ptr [esp+0x20],eax \n " 
		"push edx \n " 
		"lea eax,dword ptr [esp+0x24] \n " 
		"push eax \n " 
		"push 0xE2747C \n " 
		"mov ecx,ebp \n " 
		"call _0x67F450  \n " //!; => 0x0067F450 - outside range
		"L0xABEL_0x006C0218: \n " 
		"push ebx \n " 
		"lea edi,dword ptr [esp+0xC0] \n " 
		"call _0x697750  \n " //!; => 0x00697750 - outside range
		"fld dword ptr [eax] \n " 
		"mov ecx,dword ptr [esp+0xEC] \n " 
		"fstp dword ptr [ecx] \n " 
		"fld dword ptr [eax+0x4] \n " 
		"fstp dword ptr [ecx+0x4] \n " 
		"fld dword ptr [eax+0x8] \n " 
		"fstp dword ptr [ecx+0x8] \n " 
		"fld dword ptr [eax+0xC] \n " 
		"fstp dword ptr [ecx+0xC] \n " 
		"mov ecx,dword ptr [esp+0x6C] \n " 
		"fld dword ptr [eax+0x10] \n " 
		"fstp dword ptr [ecx] \n " 
		"fld dword ptr [eax+0x14] \n " 
		"fstp dword ptr [ecx+0x4] \n " 
		"fld dword ptr [eax+0x18] \n " 
		"fstp dword ptr [ecx+0x8] \n " 
		"L0xABEL_0x006C0257: \n " 
		"mov ecx,dword ptr [esp+0xD8] \n " 
		"pop edi \n " 
		"pop esi \n " 
		"pop ebp \n " 
		"mov dword ptr [fs:0x0],ecx \n " 
		"pop ebx \n " 
		"add esp,0xD4 \n " 
		"ret 0x8 \n " 
		" \n " //! 0xFinis of selected range: 0x006C0271
		" \n " //!; Internal calls outside selected range (after)
	);

}

void CalcMoveLand()
{
	__asm__
	(
		" \n " //!; Source: forgedalliance_exxt.exe (base 0x00400000 - 4194304)
		" \n " //!; Internal calls outside selected range (before)
		"edx =  4096 \n " 
		"_0x6C1E20 =  7089696 \n " 
		"_0x6C2F00 =  7094016 \n " 
		"_0x6C1610 =  7087632 \n " 
		"_0x6C2A40 =  7092800 \n " 
		" \n " //!; Start of selected range: 0x006C3180
		"push ebp \n " 
		"mov ebp,esp \n " 
		"and esp,0xFFFFFFF8 \n " 
		"sub esp,0x24 \n " 
		"push ebx \n " 
		"mov ebx,eax \n " 
		"mov ecx,dword ptr [ebx] \n " 
		//"mov eax,dword ptr [ecx] \n " 
		//"mov edx,dword ptr [eax+0x28] \n " 
		//"call edx \n " 
		"mov al, byte ptr ds:[ecx+0xA1] \n" //!EE
		"test al,al \n " 
		"jne L0xABEL_0x006C3212  \n " //!; => 0x006C3212
		"push esi \n " 
		"push ebx \n " 
		"call _0x6C1E20 \n " 
		"test al,al \n " 
		"mov byte ptr [esp+0x8],al \n " 
		"je L0xABEL_0x006C31B7  \n " //!; => 0x006C31B7
		"mov ecx,dword ptr [ebx] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax+0x3C] \n " 
		"push 0x13 \n " 
		"call edx \n " 
		"test al,al \n " 
		"je L0xABEL_0x006C31C0  \n " //!; => 0x006C31C0
		"L0xABEL_0x006C31B7: \n " 
		"cmp byte ptr [ebx+0x90],0x0 \n " 
		"je L0xABEL_0x006C3201  \n " //!; => 0x006C3201
		"L0xABEL_0x006C31C0: \n " 
		"call _0x6C2F00 \n " 
		"lea eax,dword ptr [esp+0xC] \n " 
		"push eax \n " 
		"push ebx \n " 
		"mov eax,esi \n " 
		"call _0x6C1610 \n " 
		"fld dword ptr [eax] \n " 
		"fstp dword ptr [esi] \n " 
		"fld dword ptr [eax+0x4] \n " 
		"fstp dword ptr [esi+0x4] \n " 
		"fld dword ptr [eax+0x8] \n " 
		"fstp dword ptr [esi+0x8] \n " 
		"fld dword ptr [eax+0xC] \n " 
		"fstp dword ptr [esi+0xC] \n " 
		"fld dword ptr [eax+0x10] \n " 
		"fstp dword ptr [esi+0x10] \n " 
		"fld dword ptr [eax+0x14] \n " 
		"fstp dword ptr [esi+0x14] \n " 
		"fld dword ptr [eax+0x18] \n " 
		"fstp dword ptr [esi+0x18] \n " 
		"mov byte ptr [ebx+0x90],0x0 \n " 
		"L0xABEL_0x006C3201: \n " 
		"mov ecx,dword ptr [esp+0x8] \n " 
		"push ecx \n " 
		"mov eax,ebx \n " 
		"call _0x6C2A40 \n " 
		"pop ebx \n " 
		"mov esp,ebp \n " 
		"pop ebp \n " 
		"ret  \n " 
		"L0xABEL_0x006C3212: \n " 
		"mov byte ptr [esp+0x8],0x0 \n " 
		"jmp L0xABEL_0x006C31B7  \n " //!; => 0x006C31B7
		" \n " //! 0xFinis of selected range: 0x006C3218
	);
	
}

void MoveTo()
{
	__asm__
	(
		" \n " //!Source: forgedalliance_exxt.exe (base 0x00400000 - 4194304)
		" \n " //!; Internal calls outside selected range (before)
		"_0x4EDAA0= 0x004EEAA0 \n " 
		"_0x5657F0= 0x005667F0 \n " 
		"_0x40DAB0= 0x0040EAB0 \n " 
		"_0x678E90= 0x00679E90 \n " 
		"_0x937CB0= 0x00938CB0 \n " 
		"_0x746280= 0x00747280 \n " 
		" \n " //!Start of selected range: 0x006B92E0
		"push ecx \n " 
		"push esi \n " 
		//"mov esi,edi \n " 
		//"call _0x4EDAA0 \n " //-0xC 
		
			//"push ecx \n " 
			"movss xmm3,dword ptr [edi] \n " 
			"movss xmm2,dword ptr [edi+0x4] \n " 
			"movss xmm1,dword ptr [edi+0x8] \n " 
			"movss xmm0,dword ptr [edi+0xC] \n " 
			"movaps xmm4,xmm3 \n " 
			"mulss xmm4,xmm3 \n " 
			"movaps xmm3,xmm2 \n " 
			"mulss xmm3,xmm2 \n " 
			"movaps xmm2,xmm1 \n " 
			"mulss xmm2,xmm1 \n " 
			"addss xmm4,xmm3 \n " 
			"movaps xmm1,xmm0 \n " 
			"addss xmm4,xmm2 \n " 
			"mulss xmm1,xmm0 \n " 
			"push ecx \n " 
			"push ecx \n "
			"addss xmm4,xmm1 \n " 
			"movss dword ptr [esp],xmm4 \n " 
			"fld dword ptr ss:[esp] \n"
			"fsqrt \n"
			//"call 4538304 \n " 
			"pop ecx \n "
			"fst dword ptr [esp] \n " 
			"fld dword ptr [0xD71BFC] \n "  
			//"add esp,0x4 \n " 
			"fxch st(1) \n " 
			"fcomip st(1) \n " 
			"fstp st(0) \n " 
			"jbe sdfs \n " 
			"movss xmm1,dword ptr [0xDFEC20] \n " 
			"movss xmm0,dword ptr [esp] \n " 
			"movss xmm2,dword ptr [edi] \n " 
			"divss xmm1,xmm0 \n " 
			"mulss xmm2,xmm1 \n " 
			"movss dword ptr [edi],xmm2 \n " 
			"movss xmm2,dword ptr [edi+0x4] \n " 
			"mulss xmm2,xmm1 \n " 
			"movss dword ptr [edi+0x4],xmm2 \n " 
			"movaps xmm2,xmm1 \n " 
			"mulss xmm2,dword ptr [edi+0x8] \n " 
			"mulss xmm1,dword ptr [edi+0xC] \n " 
			"movss dword ptr [edi+0x8],xmm2 \n " 
			"movss dword ptr [edi+0xC],xmm1 \n "  
			"pop ecx \n "
			"jmp end \n"
			"sdfs: \n"
			"xorps xmm0,xmm0 \n " 
			"movss dword ptr [edi],xmm0 \n " 
			"movss dword ptr [edi+0x4],xmm0 \n " 
			"movss dword ptr [edi+0x8],xmm0 \n " 
			"movss dword ptr [edi+0xC],xmm0 \n " 
			"pop ecx \n "
			"end: \n"
		
		"movss xmm0,dword ptr [0xDFEC20] \n " 
		"divss xmm0,dword ptr [esp+0xC] \n " 
		"lea esi,dword ptr [edi+0x10] \n " 
		"movss dword ptr [esp+0xC],xmm0 \n " 
		"call _0x5657F0 \n " 
		"test al,al \n " 
		"je L0xABEL_006B9366  \n " //!; => 006B9366
		"movss xmm3,dword ptr [edi] \n " 
		"movss xmm2,dword ptr [edi+0x4] \n " 
		"movss xmm1,dword ptr [edi+0x8] \n " 
		"movss xmm0,dword ptr [edi+0xC] \n " 
		"movaps xmm4,xmm3 \n " 
		"mulss xmm4,xmm3 \n " 
		"movaps xmm3,xmm2 \n " 
		"mulss xmm3,xmm2 \n " 
		"movaps xmm2,xmm1 \n " 
		"mulss xmm2,xmm1 \n " 
		"addss xmm4,xmm3 \n " 
		"addss xmm4,xmm2 \n " 
		"movaps xmm1,xmm0 \n " 
		"mulss xmm1,xmm0 \n " 
		"addss xmm4,xmm1 \n " 
		"subss xmm4,dword ptr [0xDFEC20] \n " 
		"push ecx \n " 
		"movss dword ptr [esp],xmm4 \n " 
		//"call _0x40DAB0 \n " 
		"fld dword ptr ss:[esp] \n"
		"fabs \n"
		"fld dword ptr [0xDFEB80] \n " 
		//"add esp,0x4 \n " 
		"pop ecx \n"
		"fcomip st(1) \n " 
		"fstp st(0) \n " 
		"ja L0xABEL_006B938E  \n " //!; => 006B938E
		"L0xABEL_006B9366: \n " 
		"mov ecx,dword ptr [ebx] \n " 
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax+0x1C] \n " 
		"call edx \n " 
		"add eax,0x8 \n " 
		"cmp dword ptr [eax+0x18],0x10 \n " 
		"jb L0xABEL_006B937D  \n " //!; => 006B937D
		"mov eax,dword ptr [eax+0x4] \n " 
		"jmp L0xABEL_006B9380  \n " //!; => 006B9380
		"L0xABEL_006B937D: \n " 
		"add eax,0x4 \n " 
		"L0xABEL_006B9380: \n " 
		"push eax \n " 
		"push 0xE2AAA0 \n " 
		"call _0x937CB0 \n " 
		"add esp,0x8 \n " 
		"L0xABEL_006B938E: \n " 
		"mov ecx,dword ptr [ebx] \n " 
		"movss xmm0,dword ptr [esp+0xC] \n " 
		"add ecx,0x8 \n " 
		"mov eax,edi \n " 
		"call _0x678E90 \n " 
		"fld dword ptr [edi+18] \n " 
		"mov eax,dword ptr [ebx] \n " 
		"mov eax,dword ptr [eax+0x150] \n " 
		//"sub esp,0x18 \n " 
		"fstp qword ptr [esp-0x8] \n " 
		"fld dword ptr [edi+14] \n " 
		"fstp qword ptr [esp-0x10] \n " 
		"fld dword ptr [esi] \n " 
		"fstp qword ptr [esp-0x18] \n " 
		//"push 0xE2AAD4 \n " 
		//"call _0x746280 \n " 
		//"add esp,0x18 \n " 
		"pop esi \n " 
		"pop ecx \n " 
		"ret 0x4 \n " 
		" \n " //! 0xFinis of selected range: 006B93CF
		" \n " //!; Internal calls outside selected range (after)
	);
}

void AllUnitsMotionTick()
{
__asm__
(
	" \n " //!Source: forgedalliance_exxt.exe (base 0x00400000 - 4194304)
	" \n " //!; Internal calls outside selected range (before)
	"_0x67F450= 0x00680450 \n " 
	"_0x6B9020= 0x006BA020 \n " 
	"_0x6B9940= 0x006BA940 \n " 
	"_0x6B92E0= 0x006BA2E0 \n " 
	"_0x6B8F30= 0x006B9F30 \n " 
	"_0x6A9B50= 0x006AAB50 \n " 
	"_0x6B8FF0= 0x006B9FF0 \n " 
	"_0x67AFF0= 0x0067BFF0 \n " 
	"_0x585B10= 0x00586B10 \n " 
	"_0x6C35C0= 0x006C45C0 \n " 
	"_0x6C2BC0= 0x006C3BC0 \n " 
	"_0x6C3480= 0x006C4480 \n " 
	"_0x6C3180= 0x006C4180 \n " 
	"_0x6C1E20= 0x006C2E20 \n " 
	"_0x6C2A40= 0x006C3A40 \n " 
	"_0x6C0290= 0x006C1290 \n "
	" \n " //!Start of selected range: 0x006B9D10
	"push ebp \n " 
	"mov ebp,esp \n " 
	"and esp,0xFFFFFFF8 \n " 
	"sub esp,0x2C \n " 
	"push ebx \n " 
	"mov ebx,dword ptr [ebp+0x8] \n " 
	"mov ecx,dword ptr [ebx] \n " 
	//"mov eax,dword ptr [ecx] \n " 
	//"mov edx,dword ptr [eax+0x34] \n " 
	"push esi \n " 
	"push edi \n " 
	"mov al, byte ptr ds:[ecx+0xA0] \n" //! E
	//"call edx \n " 
	"test al,al \n " 
	//"mov ecx,dword ptr [ebx] \n " 
	"je L0xABEL_0x006B9D7C  \n " //!; => 0x006B9D7C
	"cmp dword ptr [ecx+0x120],0x4 \n " 
	"jne L0xABEL_0x006BA1CA  \n " //!; => 0x006BA1CA
	"mov eax,dword ptr [ebx+0x80] \n " 
	"cmp eax,0x1 \n " 
	"je L0xABEL_0x006BA1CA  \n " //!; => 0x006BA1CA
	"lea eax,dword ptr [eax*0x4+0xF58360] \n " 
	"push eax \n " 
	"push 0xF58364 \n " 
	"push 0xE2AA5C \n " 
	"add ecx,0x8 \n " 
	"mov dword ptr [ebx+0x80],0x1 \n " 
	"call _0x67F450 \n " 
	"mov eax,0x1 \n " 
	"pop edi \n " 
	"pop esi \n " 
	"pop ebx \n " 
	"mov esp,ebp \n " 
	"pop ebp \n " 
	"ret 0x4 \n " 
	"L0xABEL_0x006B9D7C: \n " 
	//"mov edx,dword ptr [ecx] \n " 
	//"mov eax,dword ptr [edx+0x1C] \n " 
	//"call eax \n "
	
	"mov eax, dword ptr ds:[ecx+0x74] \n"
	"mov dword ptr [esp+0x10],eax \n "
	//"movss xmm2,dword ptr [ebx+0x38] \n " 
	//"movss xmm1,dword ptr [ebx+0x3C] \n "
	"add cl, 0xA4 \n"
	"mov edi,dword ptr [ecx] \n " //xmm0
	"mov dword ptr ss:[esp+0x1C], edi \n"
	"mov edi, dword ptr [ecx+0x4] \n " 
	"mov dword ptr [esp+0x20],edi \n " 
	"mov edi,dword ptr [ecx+0x8] \n " 
	"mov dword ptr [esp+0x24],edi \n " 
	"mov edi,dword ptr [ecx+0xC] \n " 
	"mov dword ptr [esp+0x28],edi \n " 
	"mov edi,dword ptr [ecx+0x10] \n " 
	"mov dword ptr [esp+0x2C],edi \n " 
	"mov edi,dword ptr [ecx+0x14] \n " 
	"mov dword ptr [esp+0x30],edi \n " 
	"mov edi,dword ptr [ecx+0x18] \n "  
	
	
/* 	"movss xmm2,dword ptr [ebx+0x38] \n " 
	"movss xmm1,dword ptr [ebx+0x3C] \n " 
	"mov dword ptr [esp+0x10],eax \n " 
	//"mov eax,dword ptr [ebx] \n " 
	"movss xmm0,dword ptr [ecx+0xA4] \n " 
	"add cl,0xA4 \n " 
	"movss dword ptr [esp+0x1C],xmm0 \n " 
	"movss xmm0,dword ptr [ecx+0x4] \n " 
	"movss dword ptr [esp+0x20],xmm0 \n " 
	"movss xmm0,dword ptr [ecx+0x8] \n " 
	"movss dword ptr [esp+0x24],xmm0 \n " 
	"movss xmm0,dword ptr [ecx+0xC] \n " 
	"movss dword ptr [esp+0x28],xmm0 \n " 
	"movss xmm0,dword ptr [ecx+0x10] \n " 
	"movss dword ptr [esp+0x2C],xmm0 \n " 
	"movss xmm0,dword ptr [ecx+0x14] \n " 
	"movss dword ptr [esp+0x30],xmm0 \n " 
	"movss xmm0,dword ptr [ecx+0x18] \n "  */
	//"movaps xmm3,xmm2 \n " 
	//"mulss xmm3,xmm2 \n " 
	"mov dword ptr [esp+0x34],edi \n " 
	"mov edi,dword ptr [0xDFEC20] \n " 
	//"movaps xmm2,xmm1 \n " 
	//"mulss xmm2,xmm1 \n " 
	"mov dword ptr [esp+0x14],edi \n " 
	//"movss xmm0,dword ptr [ebx+0x40] \n " 
	//"movaps xmm1,xmm0 \n " 
	//"addss xmm3,xmm2 \n " 
	//"mulss xmm1,xmm0 \n " 
	//"addss xmm3,xmm1 \n " 
	//"comiss xmm3,dword ptr [0xDFFBE8] \n " //!!! CRITICAL - remove ProcessSurfaceCollisionFromLastMove
	//"jmp L0xABEL_0x006B9E31  \n " //!; => 0x006B9E2A
	//"cmp byte ptr [ebx+0x90],al \n " 
	//"cmp byte ptr [ebx+0x90],0x0 \n " 
	//"je L0xABEL_0x006B9E31  \n " //!; => 0x006B9E31
	//"L0xABEL_0x006B9E2A: \n " 
	//"mov ecx,ebx \n " 
	//"call _0x6B9020 \n " 
	//"L0xABEL_0x006B9E31: \n " 
	"mov edx,dword ptr [ebx] \n " 
	"mov eax,dword ptr [edx+0x4B4] \n " 
	"xor edi,edi \n " 
	"cmp eax,edi \n " 
	"je L0xABEL_0x006B9E5F  \n " //!; => 0x006B9E5F
	"mov ecx,dword ptr [eax+0x10] \n " 
	"cmp ecx,edi \n " 
	"je L0xABEL_0x006B9E5F  \n " //!; => 0x006B9E5F
	"mov esi,dword ptr [eax+0x14] \n " 
	"sub esi,ecx \n " 
	"sar esi,0x3 \n " 
	"je L0xABEL_0x006B9E5F  \n " //!; => 0x006B9E5F
	"mov eax,ecx \n " 
	"mov eax,dword ptr [eax] \n " 
	"cmp eax,edi \n " 
	"je L0xABEL_0x006B9E5F  \n " //!; => 0x006B9E5F
	"add eax,0xFFFFFFFC \n " 
	"cmp eax,edi \n " 
	"jne L0xABEL_0x006B9E7B  \n " //!; => 0x006B9E7B
	"L0xABEL_0x006B9E5F: \n " 
	"cmp dword ptr [ebx+0xAC],edi \n " 
	"jne L0xABEL_0x006B9E81  \n " //!; => 0x006B9E81
	"mov ecx,dword ptr [edx+0x150] \n " 
	"mov edx,dword ptr [ecx+0x900] \n " 
	"mov dword ptr [ebx+0xAC],edx \n " 
	"jmp L0xABEL_0x006B9E81  \n " //!; => 0x006B9E81
	"L0xABEL_0x006B9E7B: \n " 
	"mov dword ptr [ebx+0xAC],edi \n " 
	"L0xABEL_0x006B9E81: \n " 
	"mov esi,ebx \n " 
	"call _0x6B9940 \n " 
	"mov eax,dword ptr [ebx+0x78] \n " 
	"sub eax,0x1 \n " 
	"je L0xABEL_0x006BA0A7  \n " //!; => 0x006BA0A7
	"sub eax,0x1 \n " 
	"je L0xABEL_0x006BA078  \n " //!; => 0x006BA078
	"sub eax,0x1 \n " 
	"je L0xABEL_0x006BA1CA  \n " //!; => 0x006BA1CA
	"mov esi,dword ptr [esp+0x10] \n " 
	"cmp byte ptr [esi+0x368],0x0 \n " 
	"mov ecx,dword ptr [ebx] \n " 
	"push 0x1 \n " 
	"je L0xABEL_0x006B9F10  \n " //!; => 0x006B9F10
	"mov eax,dword ptr [ecx] \n " 
	"mov edx,dword ptr [eax+0x3C] \n " 
	"call edx \n " 
	"test al,al \n " 
	"jne L0xABEL_0x006B9EF6  \n " //!; => 0x006B9EF6
	"mov eax,dword ptr [ebx] \n " 
	"cmp dword ptr [eax+0x29C],edi \n " 
	"jne L0xABEL_0x006B9EF6  \n " //!; => 0x006B9EF6
	"lea ecx,dword ptr [esp+0x1C] \n " 
	"push ecx \n " 
	"push ebx \n " 
	"call %[AirMotionTick] \n " 
	"fld dword ptr [esp+0x14] \n " 
	"push ecx \n " 
	"lea edi,dword ptr [esp+0x20] \n " 
	"fstp dword ptr [esp] \n " 
	"call %[MoveTo] \n " 
	"mov eax,0x1 \n " 
	"pop edi \n " 
	"pop esi \n " 
	"pop ebx \n " 
	"mov esp,ebp \n " 
	"pop ebp \n " 
	"ret 0x4 \n " 
	"L0xABEL_0x006B9EF6: \n " 
	"mov eax,0x3 \n " 
	"mov esi,ebx \n " 
	"call _0x6B8F30 \n " 
	"mov eax,0x1 \n " 
	"pop edi \n " 
	"pop esi \n " 
	"pop ebx \n " 
	"mov esp,ebp \n " 
	"pop ebp \n " 
	"ret 0x4 \n " 
	"L0xABEL_0x006B9F10: \n " 
	"mov edx,dword ptr [ecx] \n " 
	"mov eax,dword ptr [edx+0x3C] \n " 
	"call eax \n " 
	"test al,al \n " 
	"jne L0xABEL_0x006BA00D  \n " //!; => 0x006BA00D
	"mov ecx,dword ptr [ebx] \n " 
	"cmp dword ptr [ecx+0x29C],edi \n " 
	"jne L0xABEL_0x006BA00D  \n " //!; => 0x006BA00D
	
	"cmp byte ptr [ebx+0x90],al \n "
	"je NO_COLLISION \n"
	"mov ecx,ebx \n " 
	"call _0x6B9020 \n " //ProcessSurfaceCollisionFromLastMove !!EEE
	"mov al, 0x1 \n"
	"NO_COLLISION: \n"
	
	"movss xmm2,dword ptr [ebx+0x38] \n " 
	"movss xmm1,dword ptr [ebx+0x3C] \n " 
	"movss xmm0,dword ptr [ebx+0x40] \n " 
	"movaps xmm3,xmm2 \n " 
	"mulss xmm3,xmm2 \n " 
	"movaps xmm2,xmm1 \n " 
	"mulss xmm2,xmm1 \n " 
	"movaps xmm1,xmm0 \n " 
	"addss xmm3,xmm2 \n " 
	"mulss xmm1,xmm0 \n " 
	"addss xmm3,xmm1 \n " 
	"comiss xmm3,dword ptr [0xDFFBE8] \n "
		
	"jbe L0xABEL_0x006B9F77  \n " //!; => 0x006B9F77
	"cmp al, 0x1 \n"
	"je _NO_COLLISION \n"
	"mov ecx,ebx \n " 
	"call _0x6B9020 \n " //ProcessSurfaceCollisionFromLastMove !!EEE
	"_NO_COLLISION: \n"
	"mov eax,ebx \n " 
	"call _0x6C35C0 \n " 
	"mov ebx,dword ptr [ebx] \n " 
	"lea ecx,dword ptr [esp+0x2C] \n " 
	"call _0x6A9B50 \n " 
	"mov ebx,dword ptr [ebp+0x8] \n " 
	"L0xABEL_0x006B9F77: \n " 
	"cmp dword ptr [esi+0x290],0x7 \n " 
	"jne L0xABEL_0x006B9FAB  \n " //!; => 0x006B9FAB
	"lea edx,dword ptr [esp+0x1C] \n " 
	"push edx \n " 
	"mov esi,ebx \n " 
	"call _0x6C2BC0 \n " 
	"fld dword ptr [esp+0x14] \n " 
	"push ecx \n " 
	"lea edi,dword ptr [esp+0x20] \n " 
	"fstp dword ptr [esp] \n " 
	"call %[MoveTo] \n " 
	"mov eax,0x1 \n " 
	"pop edi \n " 
	"pop esi \n " 
	"pop ebx \n " 
	"mov esp,ebp \n " 
	"pop ebp \n " 
	"ret 0x4 \n " 
	"L0xABEL_0x006B9FAB: \n " 
	"mov eax,dword ptr [ebx] \n " 
	"mov eax,dword ptr [eax+0x120] \n " 
	"cmp eax,0x1 \n " 
	"je L0xABEL_0x006B9FE5  \n " //!; => 0x006B9FE5
	"cmp eax,0x2 \n " 
	"je L0xABEL_0x006B9FE5  \n " //!; => 0x006B9FE5
	"lea esi,dword ptr [esp+0x1C] \n " 
	"mov eax,ebx \n " 
	"call _0x6C3480 \n " 
	"fld dword ptr [esp+0x14] \n " 
	"push ecx \n " 
	"mov edi,esi \n " 
	"fstp dword ptr [esp] \n " 
	"call %[MoveTo] \n " 
	"mov eax,0x1 \n " 
	"pop edi \n " 
	"pop esi \n " 
	"pop ebx \n " 
	"mov esp,ebp \n " 
	"pop ebp \n " 
	"ret 0x4 \n " 
	"L0xABEL_0x006B9FE5: \n " 
	"lea esi,dword ptr [esp+0x1C] \n " 
	"mov eax,ebx \n " 
	"call %[CalcMoveLand] \n " 
	"fld dword ptr [esp+0x14] \n " 
	"push ecx \n " 
	"mov edi,esi \n " 
	"fstp dword ptr [esp] \n " 
	"call %[MoveTo] \n " 
	"mov eax,0x1 \n " 
	"pop edi \n " 
	"pop esi \n " 
	"pop ebx \n " 
	"mov esp,ebp \n " 
	"pop ebp \n " 
	"ret 0x4 \n " 
	"L0xABEL_0x006BA00D: \n " 
	"mov ecx,dword ptr [ebx] \n " 
	"mov dword ptr [ebx+0x8],edi \n " 
	"mov dword ptr [ebx+0x4],edi \n " 
	//"mov edx,dword ptr [ecx] \n " 
	//"mov eax,dword ptr [edx+0x28] \n " 
	//"call eax \n " 
	"mov al, byte ptr ds:[ecx+0xA1] \n" //!ee
	"test al,al \n " 
	"jne L0xABEL_0x006BA031  \n " //!; => 0x006BA031
	"lea ecx,dword ptr [esp+0x1C] \n " 
	"push ecx \n " 
	"push ebx \n " 
	"call _0x6C1E20 \n " 
	"mov byte ptr [esp+0x10],al \n " 
	"jmp L0xABEL_0x006BA036  \n " //!; => 0x006BA036
	"L0xABEL_0x006BA031: \n " 
	"mov byte ptr [esp+0x10],0x0 \n " 
	"L0xABEL_0x006BA036: \n " 
	"mov edx,dword ptr [esp+0x10] \n " 
	"push edx \n " 
	"mov eax,ebx \n " 
	"call _0x6C2A40 \n " 
	"movss xmm0,dword ptr [ebx+0x11C] \n " 
	"ucomiss xmm0,dword ptr [0xE4F6E0] \n " 
	"lahf  \n " 
	"test ah,0x44 \n " 
	"jnp L0xABEL_0x006BA1CA  \n " //!; => 0x006BA1CA
	"fld1  \n " 
	"push ecx \n " 
	"lea edi,dword ptr [esp+0x20] \n " 
	"fstp dword ptr [esp] \n " 
	"call %[MoveTo] \n " 
	"mov eax,0x1 \n " 
	"pop edi \n " 
	"pop esi \n " 
	"pop ebx \n " 
	"mov esp,ebp \n " 
	"pop ebp \n " 
	"ret 0x4 \n " 
	"L0xABEL_0x006BA078: \n " 
	"lea eax,dword ptr [esp+0x14] \n " 
	"push eax \n " 
	"lea ecx,dword ptr [esp+0x20] \n " 
	"push ecx \n " 
	"push ebx \n " 
	"call _0x6C0290 \n " 
	"fld dword ptr [esp+0x14] \n " 
	"push ecx \n " 
	"lea edi,dword ptr [esp+0x20] \n " 
	"fstp dword ptr [esp] \n " 
	"call %[MoveTo] \n " 
	"mov eax,0x1 \n " 
	"pop edi \n " 
	"pop esi \n " 
	"pop ebx \n " 
	"mov esp,ebp \n " 
	"pop ebp \n " 
	"ret 0x4 \n " 
	"L0xABEL_0x006BA0A7: \n " 
	
	"mov eax,dword ptr [0xF3D21C] \n " 
	"mov dword ptr [ebx+0x38],eax \n " 
	"mov ecx,dword ptr [0xF3D220] \n " 
	"mov dword ptr [ebx+0x3C],ecx \n " 
	"mov esi,dword ptr [0xF3D224] \n " 
	"mov dword ptr [ebx+0x40],esi \n " 
	//"mov xmm0,dword ptr [0xF3D21C] \n " 
	"mov dword ptr [ebx+0x44],eax \n " 
	//"mov xmm0,dword ptr [0xF3D220] \n " 
	"mov dword ptr [ebx+0x48],ecx \n " 
	//"mov esi,dword ptr [0xF3D224] \n " 
	"mov dword ptr [ebx+0x4C],esi \n "	
	
/* 	"movss xmm0,dword ptr [0xF3D21C] \n " 
	"movss dword ptr [ebx+0x38],xmm0 \n " 
	"movss xmm0,dword ptr [0xF3D220] \n " 
	"movss dword ptr [ebx+0x3C],xmm0 \n " 
	"movss xmm0,dword ptr [0xF3D224] \n " 
	"movss dword ptr [ebx+0x40],xmm0 \n " 
	"movss xmm0,dword ptr [0xF3D21C] \n " 
	"movss dword ptr [ebx+0x44],xmm0 \n " 
	"movss xmm0,dword ptr [0xF3D220] \n " 
	"movss dword ptr [ebx+0x48],xmm0 \n " 
	"movss xmm0,dword ptr [0xF3D224] \n " 
	"movss dword ptr [ebx+0x4C],xmm0 \n " */ 
	"mov ecx,dword ptr [ebx] \n " 
	//"mov edx,dword ptr [ecx] \n " 
	//"mov eax,dword ptr [edx+0x14] \n " 
	//"call eax \n " 
	"lea eax, ds:[ecx+0xB4] \n"
	"fld dword ptr [eax] \n " 
	"fstp dword ptr [ebx+0x2C] \n " 
	"fld dword ptr [eax+0x4] \n " 
	"fstp dword ptr [ebx+0x30] \n " 
	"fld dword ptr [eax+0x8] \n " 
	"fstp dword ptr [ebx+0x34] \n " 
	"mov esi,dword ptr [ebx] \n " 
	//"mov eax,dword ptr [esi+0x194] \n " 
	"add esi,0x194 \n " 
	"mov eax, dword ptr [esi] \n"
	"cmp eax,edi \n " 
	"je L0xABEL_0x006BA128  \n " //!; => 0x006BA128
	"lea ecx,dword ptr [eax-0x4] \n " 
	"cmp ecx,edi \n " 
	"jne L0xABEL_0x006BA17A  \n " //!; => 0x006BA17A
	"L0xABEL_0x006BA128: \n " 
	"mov ecx,dword ptr [esp+0x10] \n " 
	"cmp byte ptr [ecx+0x368],0x0 \n " 
	"mov ecx,ebx \n " 
	"je L0xABEL_0x006BA13B  \n " //!; => 0x006BA13B
	"xor eax,eax \n " 
	"jmp L0xABEL_0x006BA140  \n " //!; => 0x006BA140
	"L0xABEL_0x006BA13B: \n " 
	"mov eax,0x2 \n " 
	"L0xABEL_0x006BA140: \n " 
	"call _0x6B8FF0 \n " 
	"mov esi,dword ptr [ebx] \n " 
	"add esi,0x8 \n " 
	"mov edx,0x10 \n " 
	"call _0x67AFF0 \n " 
	"fld dword ptr [esp+0x14] \n " 
	"push ecx \n " 
	"lea edi,dword ptr [esp+0x20] \n " 
	"fstp dword ptr [esp] \n " 
	"mov byte ptr [ebx+0x90],0x1 \n " 
	"call %[MoveTo] \n " 
	"mov eax,0x1 \n " 
	"pop edi \n " 
	"pop esi \n " 
	"pop ebx \n " 
	"mov esp,ebp \n " 
	"pop ebp \n " 
	"ret 0x4 \n " 
	"L0xABEL_0x006BA17A: \n " 
	"mov eax, ecx \n" //!ee
	//"mov edx,dword ptr [ecx] \n " 
	//"mov eax,dword ptr [edx+0x10] \n " 
	//"call eax \n " 
	"test eax,eax \n " 
	"je L0xABEL_0x006BA1AD  \n " //!; => 0x006BA1AD
	"mov eax,dword ptr [ebx] \n " 
	"cmp eax,edi \n " 
	"je L0xABEL_0x006BA18E  \n " //!; => 0x006BA18E
	"lea edi,dword ptr [eax+0x8] \n " 
	"L0xABEL_0x006BA18E: \n " 
	"mov eax,dword ptr [esi] \n " 
	"test eax,eax \n " 
	"je L0xABEL_0x006BA199  \n " //!; => 0x006BA199
	"lea ecx,dword ptr [eax-0x4] \n " 
	"jmp L0xABEL_0x006BA19B  \n " //!; => 0x006BA19B
	"L0xABEL_0x006BA199: \n " 
	"xor ecx,ecx \n " 
	"L0xABEL_0x006BA19B: \n " 
	//"mov eax, ecx \n" //!ee
	"mov edx,dword ptr [ecx] \n " 
	"mov eax,dword ptr [edx+0x10] \n " 
	"call eax \n " 
	//"call _0x585B10 \n " 
	
	//"mov eax, dword ptr ds:[eax+0x4D0] \n"
	"test eax, eax \n"
	"je lab \n"
	"add eax, 0xFFFFFFFC \n"
	"jmp lab2 \n"
	"lab: \n"
	"xor eax, eax \n"
	"lab2: \n"
	
	"cmp eax,edi \n " 
	"je L0xABEL_0x006BA1CA  \n " //!; => 0x006BA1CA
	"xor edi,edi \n " 
	"L0xABEL_0x006BA1AD: \n " 
	"mov esi,dword ptr [esi] \n " 
	"cmp esi,edi \n " 
	"je L0xABEL_0x006BA1B8  \n " //!; => 0x006BA1B8
	"lea eax,dword ptr [esi-0x4] \n " 
	"jmp L0xABEL_0x006BA1BA  \n " //!; => 0x006BA1BA
	"L0xABEL_0x006BA1B8: \n " 
	"xor eax,eax \n " 
	"L0xABEL_0x006BA1BA: \n " 
	"mov esi,dword ptr [ebx] \n " 
	"mov edx,dword ptr [eax+0x118] \n " 
	"add esi,0x8 \n " 
	"call _0x67AFF0 \n " 
	"L0xABEL_0x006BA1CA: \n " 
	"pop edi \n " 
	"pop esi \n " 
	"mov eax,0x1 \n " 
	"pop ebx \n " 
	"mov esp,ebp \n " 
	"pop ebp \n " 
	"ret 0x4 \n " 
	" \n " //! 0xFinis of selected range: 0x006BA1D7
	" \n " //!; Internal calls outside selected range (after)
	:
	: [AirMotionTick] "i" (AirMotionTick), 
	  [CalcMoveLand] "i" (CalcMoveLand),
	  [MoveTo] "i" (MoveTo)
	: "memory"	
);
	
}

void Unit_MotionTick()
{
	__asm__
	(
		" \n " //!; Source: forgedalliance_exxt.exe (base 0x00400000 - 4194304)
		" \n " //!; Internal calls outside selected range (before)
		"edx =  4096 \n " 
		"_0x63AA80 =  6535808 \n " 
		"_0x581AA0 =  5778080 \n " 
		"_0x57DDD0 =  5762512 \n " 
		"_0x552550 =  5584208 \n " 
		"_0x57ABB0 =  5749680 \n " 
		"_0x6AA7A0 =  6993824 \n " 
		"_0x6A9810 =  6989840 \n " 
		//"_0x1290280 =  19468928 \n " 
		"_0x775270 =  7823984 \n " 
		"_0x6AAAC0 =  6994624 \n " 
		"_0x6F12C0 =  7283392 \n " 
		" \n " //!; Start of selected range: 0x006A9010
		"push ebp \n " 
		"mov ebp,esp \n " 
		"and esp,0xFFFFFFF8 \n " 
		"push 0xFFFFFFFF \n " 
		"mov eax, dword ptr [fs:0x00000000] \n " 
		"push 0xBB9A18 \n " 
		"push eax \n " 
		"mov dword ptr [fs:0x00000000],esp \n " 
		"sub esp,0xD4 \n " 
		"push ebx \n " 
		"push ebp \n " 
		"push esi \n " 
		"push edi \n " 
		"mov edi,ecx \n "  
		"mov ecx,dword ptr [edi+0x550] \n " 
		"test ecx,ecx \n " 
		"je L0xABEL_0x006A905F  \n " //!; => 0x006A905F
		"mov eax,dword ptr [ecx] \n " 
		"mov edx,dword ptr [eax+0x24] \n " 
		"call edx \n " 
		"L0xABEL_0x006A905F: \n " 
		"lea esi,dword ptr [edi-0x8] \n " 
		"call _0x6AA7A0 \n " 
		"mov eax,esi \n " 
		"call _0x6A9810 \n " 
		"mov eax,dword ptr [edi+0x294] \n " 
		"test eax,eax \n " 
		"jle L0xABEL_0x006A9081  \n " //!; => 0x006A9081
		"add eax,0xFFFFFFFF \n " 
		"mov dword ptr [edi+0x294],eax \n " 
		"L0xABEL_0x006A9081: \n " 
		"mov eax,dword ptr [edi+0x4A8] \n " 
		"test eax,eax \n " 
		"je L0xABEL_0x006A9097  \n " //!; => 0x006A9097
		"push eax \n " 
		"call %[AllUnitsMotionTick] \n " 
		"mov dword ptr [esp+0x14],eax \n " 
		"jmp L0xABEL_0x006A909F  \n " //!; => 0x006A909F
		"L0xABEL_0x006A9097: \n " 
		"mov dword ptr [esp+0x14],0x1 \n " 
		"L0xABEL_0x006A909F: \n " 
		"mov ebx,dword ptr [edi+0x570] \n " 
		"lea ebp,dword ptr [edi+0x56C] \n " 
		"cmp ebx,ebp \n " 
		"je L0xABEL_0x006A90C8  \n " //!; => 0x006A90C8
		"nop  \n " 
		"L0xABEL_0x006A90B0: \n " 
		"test ebx,ebx \n " 
		"je L0xABEL_0x006A90B9  \n " //!; => 0x006A90B9
		"lea eax,dword ptr [ebx-0x48] \n " 
		"jmp L0xABEL_0x006A90BB  \n " //!; => 0x006A90BB
		"L0xABEL_0x006A90B9: \n " 
		"xor eax,eax \n " 
		"L0xABEL_0x006A90BB: \n " 
		"push eax \n " 
		"call _0x775270 \n " 
		"mov ebx,dword ptr [ebx+0x4] \n " 
		"cmp ebx,ebp \n " 
		"jne L0xABEL_0x006A90B0  \n " //!; => 0x006A90B0
		"L0xABEL_0x006A90C8: \n " 
		"mov ecx,dword ptr [edi+0x538] \n " 
		"lea eax,dword ptr [edi+0x150] \n " 
		"push eax \n " 
		"call _0x63AA80 \n " 
		"mov eax,dword ptr [edi+0x18C] \n " 
		"test eax,eax \n " 
		"je L0xABEL_0x006A90E9  \n " //!; => 0x006A90E9
		"add eax,0xFFFFFFFC \n " 
		"jmp L0xABEL_0x006A90EB  \n " //!; => 0x006A90EB
		"L0xABEL_0x006A90E9: \n " 
		"xor eax,eax \n " 
		"L0xABEL_0x006A90EB: \n " 
		"mov edx,dword ptr [edi+0x148] \n " 
		"test eax,eax \n " 
		"setne cl \n " 
		"cmp byte ptr [edi+0x98],0x0 \n " 
		"mov byte ptr [edi+0x28A],cl \n " 
		"mov eax,dword ptr [edx+0x900] \n " 
		"je L0xABEL_0x006A91BD  \n " //!; => 0x006A91BD
		"sub eax,dword ptr [edi+0x520] \n " 
		"cmp eax,0x1 \n " 
		"jle L0xABEL_0x006A9214  \n " //!; => 0x006A9214
		"mov eax,dword ptr [esi] \n " 
		"mov edx,dword ptr [eax+0x1C] \n " 
		"mov ecx,esi \n " 
		"call edx \n " 
		"movss xmm0,dword ptr [eax+0x4E8] \n " 
		"mov eax,dword ptr [esi] \n " 
		"mov edx,dword ptr [eax+0x1C] \n " 
		"mov ecx,esi \n " 
		"movss dword ptr [esp+0x4C],xmm0 \n " 
		"call edx \n " 
		"movss xmm0,dword ptr [eax+0x4EC] \n " 
		"mov eax,dword ptr [esi] \n " 
		"mov edx,dword ptr [eax+0x1C] \n " 
		"mov ecx,esi \n " 
		"movss dword ptr [esp+0x44],xmm0 \n " 
		"call edx \n " 
		"movss xmm0,dword ptr [esp+0x4C] \n " 
		"movss xmm2,dword ptr [esp+0x44] \n " 
		"comiss xmm2,xmm0 \n " 
		"movss xmm1,dword ptr [eax+0x4F4] \n " 
		"jbe L0xABEL_0x006A9171  \n " //!; => 0x006A9171
		"movaps xmm0,xmm2 \n " 
		"L0xABEL_0x006A9171: \n " 
		"comiss xmm1,xmm0 \n " 
		"jbe L0xABEL_0x006A9179  \n " //!; => 0x006A9179
		"movaps xmm0,xmm1 \n " 
		"L0xABEL_0x006A9179: \n " 
		"comiss xmm0,dword ptr [0xE4F6E0] \n " 
		"jbe L0xABEL_0x006A9214  \n " //!; => 0x006A9214
		"mov eax,dword ptr [edi] \n " 
		"movss xmm1,dword ptr [0xDFE888] \n " 
		"mov edx,dword ptr [eax+0x74] \n " 
		"push ecx \n " 
		"divss xmm1,xmm0 \n " 
		"mov ecx,edi \n " 
		"movss dword ptr [esp],xmm1 \n " 
		"call edx \n " 
		"fstp st(0) \n " 
		"xorps xmm0,xmm0 \n " 
		"comiss xmm0,dword ptr [edi+0x90] \n " 
		"jb L0xABEL_0x006A9214  \n " //!; => 0x006A9214
		"push 0xE2A3E8 \n " 
		"mov ecx,edi \n " 
		"call _0x581AA0 \n " 
		"jmp L0xABEL_0x006A9214  \n " //!; => 0x006A9214
		"L0xABEL_0x006A91BD: \n " 
		"movss xmm0,dword ptr [edi+0x94] \n " 
		"comiss xmm0,dword ptr [edi+0x90] \n " 
		"jbe L0xABEL_0x006A9214  \n " //!; => 0x006A9214
		"mov eax,dword ptr [esi] \n " 
		"mov edx,dword ptr [eax+0x40] \n " 
		"mov ecx,esi \n " 
		"call edx \n " 
		"movss xmm0,dword ptr [eax+0x5C] \n " 
		"comiss xmm0,dword ptr [0xE4F6E0] \n " 
		"jbe L0xABEL_0x006A9214  \n " //!; => 0x006A9214
		"mov eax,dword ptr [esi] \n " 
		"mov edx,dword ptr [eax+0x40] \n " 
		"mov ebp,dword ptr [edi] \n " 
		"lea ebx,dword ptr [edi-0x8] \n " 
		"neg ebx \n " 
		"sbb ebx,ebx \n " 
		"mov ecx,esi \n " 
		"and ebx,edi \n " 
		"call edx \n " 
		"movss xmm0,dword ptr [eax+0x5C] \n " 
		"mulss xmm0,dword ptr [0xE4F714] \n " 
		"mov eax,dword ptr [ebp+0x78] \n " 
		"push ecx \n " 
		"movss dword ptr [esp],xmm0 \n " 
		"push ebx \n " 
		"mov ecx,edi \n " 
		"call eax \n " 
		"L0xABEL_0x006A9214: \n " 
		"push esi \n " 
		"call _0x6AAAC0 \n " 
		"cmp byte ptr [edi+0x680],0x0 \n " 
		"je L0xABEL_0x006A931D  \n " //!; => 0x006A931D
		"mov eax,dword ptr [edi+0x4AC] \n " 
		"test eax,eax \n " 
		"je L0xABEL_0x006A931D  \n " //!; => 0x006A931D
		"mov ecx,dword ptr [eax+0x10] \n " 
		"test ecx,ecx \n " 
		"je L0xABEL_0x006A924A  \n " //!; => 0x006A924A
		"mov edx,dword ptr [eax+0x14] \n " 
		"sub edx,ecx \n " 
		"sar edx,0x3 \n " 
		"jne L0xABEL_0x006A931D  \n " //!; => 0x006A931D
		"L0xABEL_0x006A924A: \n " 
		"lea eax,dword ptr [esp+0x18] \n " 
		"mov ecx,eax \n " 
		"lea edx,dword ptr [esp+0x30] \n " 
		"mov dword ptr [esp+0x1C],eax \n " 
		"mov dword ptr [esp+0x18],ecx \n " 
		"mov eax,edx \n " 
		"lea ecx,dword ptr [esp+0x40] \n " 
		"mov dword ptr [esp+0x20],edx \n " 
		"mov dword ptr [esp+0x24],eax \n " 
		"mov dword ptr [esp+0x28],ecx \n " 
		"mov dword ptr [esp+0x2C],edx \n " 
		"push esi \n " 
		"lea ebx,dword ptr [esp+0x48] \n " 
		"lea eax,dword ptr [esp+0x1C] \n " 
		"mov dword ptr [esp+0xF0],0x0 \n " 
		"call _0x57DDD0 \n " 
		"lea eax,dword ptr [esp+0x50] \n " 
		"push eax \n " 
		"mov ecx,0x1D \n " 
		"call _0x552550 \n " 
		"push 0x0 \n " 
		"mov byte ptr [esp+0xF0],0x1 \n " 
		"mov ecx,dword ptr [edi+0x148] \n " 
		"push eax \n " 
		"push ecx \n " 
		"lea edx,dword ptr [esp+0x24] \n " 
		"call _0x6F12C0 \n " 
		"add esp,0xC \n " 
		"lea edx,dword ptr [esp+0x50] \n " 
		"push edx \n " 
		"mov byte ptr [esp+0xF0],0x0 \n " 
		"call _0x57ABB0 \n " 
		"mov dword ptr [esp+0xEC],0xFFFFFFFF \n " 
		"mov eax,dword ptr [esp+0x20] \n " 
		"cmp eax,dword ptr [esp+0x2C] \n " 
		"je L0xABEL_0x006A92F6  \n " //!; => 0x006A92F6
		"push eax \n " 
		"call 0xA83542 \n " 
		"mov eax,dword ptr [esp+0x30] \n " 
		"mov dword ptr [esp+0x24],eax \n " 
		"mov ecx,dword ptr [eax] \n " 
		"add esp,0x4 \n " 
		"mov dword ptr [esp+0x28],ecx \n " 
		"L0xABEL_0x006A92F6: \n " 
		"mov edx,dword ptr [esp+0x18] \n " 
		"mov dword ptr [esp+0x24],eax \n " 
		"mov eax,dword ptr [esp+0x1C] \n " 
		"mov dword ptr [edx+0x4],eax \n " 
		"mov ecx,dword ptr [esp+0x1C] \n " 
		"mov edx,dword ptr [esp+0x18] \n " 
		"mov dword ptr [ecx],edx \n " 
		"lea eax,dword ptr [esp+0x18] \n " 
		"mov ecx,eax \n " 
		"mov dword ptr [esp+0x1C],eax \n " 
		"mov dword ptr [esp+0x18],ecx \n " 
		"L0xABEL_0x006A931D: \n " 
		"mov edi,dword ptr [edi+0x54C] \n " 
		"test edi,edi \n " 
		"je L0xABEL_0x006A9330  \n " //!; => 0x006A9330
		"mov edx,dword ptr [edi] \n " 
		"mov eax,dword ptr [edx+0x10] \n " 
		"mov ecx,edi \n " 
		"call eax \n " 
		"L0xABEL_0x006A9330: \n " 
		"mov ecx,dword ptr [esp+0xE4] \n " 
		"mov eax,dword ptr [esp+0x14] \n " 
		"pop edi \n " 
		"mov dword ptr [fs:0x00000000],ecx \n " 
		"pop esi \n " 
		"pop ebp \n " 
		"pop ebx \n " 
		"mov esp,ebp \n " 
		"pop ebp \n " 
		"ret  \n " 
		" \n " //! 0xFinis of selected range: 0x006A9349
		" \n " //!; Internal calls outside selected range (after)
		:
		: [AllUnitsMotionTick] "i" (AllUnitsMotionTick)
		: "memory"
	);
	
}